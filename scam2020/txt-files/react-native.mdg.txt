E; class; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
E; class; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
E; class; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
E; class; [CN]/AsyncStorageModule/[MT]/multiRemove(ReadableArray,Callback)/body
E; class; [CN]/ReactViewBackgroundDrawable/[MT]/drawRoundedBackgroundWithBorders(Canvas)/body
E; class; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
E; class; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body
E; class; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
E; class; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
E; class; [CN]/DevSupportManagerImpl/[MT]/reload()/body
E; class; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
E; class; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
E; class; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
E; class; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
E; class; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
E; class; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleLoader(JSBundleLoader)/body
E; class; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
E; class; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
E; class; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
E; class; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
E; class; [CN]/ReactTextInputShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body
E; class; [CN]/ReactImageManager/[CS]/ReactImageManager()/body
E; class; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
E; class; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
E; class; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
E; class; [CN]/BaseJavaModule/[MT]/getMethods()/body
E; class; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
E; class; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body
E; class; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
E; class; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
E; class; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
E; class; [CN]/ReactModuleSpecProcessor/[MT]/init(ProcessingEnvironment)/body
E; class; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
E; class; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
E; class; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/body
E; class; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
E; class; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body
E; class; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body
E; class; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext)/body
E; class; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
E; class; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body
E; class; [CN]/ReactHorizontalScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body
E; class; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/parameters
E; class; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
E; class; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
E; class; [CN]/JavaScriptModuleRegistry/[CN]/JavaScriptModuleInvocationHandler/[MT]/invoke(Object,Method,Object[])/body
E; class; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
E; class; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/parameters
E; class; [CN]/ReactScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body
E; class; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
E; class; [CN]/JSCHeapCapture/[CS]/JSCHeapCapture(ReactApplicationContext)/body
E; class; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
E; class; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>,ReactApplicationContext)/body
E; class; [CN]/JSCHeapCapture/[MT]/unregisterHeapCapture(JSCHeapCapture)/body
E; class; [CN]/ReactContext/[MT]/onHostPause()/body
E; class; [CN]/ReactModalHostView/[MT]/onHostPause()/body
E; class; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
E; class; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
E; class; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body
E; class; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body
E; class; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
E; class; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body
E; class; [CN]/ReactToolbar/[CS]/ReactToolbar(Context)/body
E; class; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
E; class; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
E; class; [CN]/ReactScrollViewCommandHelper/[MT]/getCommandsMap()/body
E; class; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body
E; class; [CN]/LocationModule/[MT]/getCurrentPosition(ReadableMap,Callback,Callback)/body
E; class; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
E; class; [CN]/NetworkingModule/[MT]/constructMultipartBody(ExecutorToken,ReadableArray,String,int)/body
E; class; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
E; class; [CN]/XReactInstanceManagerImpl/[MT]/setupReactContext(ReactApplicationContext)/body
E; class; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
E; class; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
E; class; [CN]/DevServerHelper/[MT]/startPollingOnChangeEndpoint(OnServerContentChangeListener)/body
E; class; [CN]/ReactDatabaseSupplier/[MT]/deleteInstance()/body
E; class; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body
E; class; [CN]/ReactContext/[MT]/onHostDestroy()/body
E; class; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
E; class; [CN]/ReactModalHostView/[MT]/onHostResume()/body
E; class; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body
E; class; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body
E; class; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body
E; class; [CN]/InterpolationAnimatedNode/[MT]/update()/body
E; class; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
E; class; [CN]/Spacing/[MT]/reset()/body
E; class; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String)/body
E; class; [CN]/UIManagerModuleConstants/[MT]/getConstants()/body
E; class; [CN]/ReactDatabaseSupplier/[MT]/getInstance(Context)/body
E; class; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body
E; class; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body
E; class; [CN]/ReactViewBackgroundDrawable/[MT]/draw(Canvas)/body
E; class; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body
E; class; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderRGB(int,float)/body
E; class; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/parameters
E; class; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
E; class; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body
E; class; [CN]/ViewProps/[FE]/LAYOUT_ONLY_PROPS
E; class; [CN]/ReactTextView/[MT]/setText(ReactTextUpdate)/body
E; class; [CN]/WebSocketModule/[CS]/WebSocketModule(ReactApplicationContext)/body
E; class; [CN]/LocationModule/[CN]/LocationOptions/[MT]/fromReactMap(ReadableMap)/body
E; class; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body
E; class; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body
E; class; [CN]/DevServerHelper/[MT]/stopPollingOnChangeEndpoint()/body
E; class; [CN]/CSSStyle/[MT]/reset()/body
E; class; [CN]/SimpleSettableFuture/[MT]/get(long,TimeUnit)/body
E; class; [CN]/UIImplementation/[CS]/UIImplementation(ReactApplicationContext,ViewManagerRegistry)/body
E; class; [CN]/UnpackingJSBundleLoader/[CS]/UnpackingJSBundleLoader(Builder)/body
E; class; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters
E; class; [CN]/TouchTargetHelper/[MT]/findTargetTagForTouch(float,float,ViewGroup)/body
E; class; [CN]/ReactScrollView/[MT]/onTouchEvent(MotionEvent)/body
E; class; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body
E; class; [CN]/ReactContext/[MT]/startActivityForResult(Intent,int,Bundle)/body
E; class; [CN]/I18nUtil/[MT]/isRTL(Context)/body
E; class; [CN]/DevSupportManagerImpl/[MT]/updateJSError(String,ReadableArray,int)/body
E; class; [CN]/TouchEventCoalescingKeyHelper/[MT]/hasCoalescingKey(long)/body
E; class; [CN]/ReactEditText/[MT]/onAttachedToWindow()/body
E; class; [CN]/MessageQueueThreadImpl/[MT]/createForMainThread(String,QueueThreadExceptionHandler)/body
E; class; [CN]/DevServerHelper/[MT]/enqueueOnChangeEndpointLongPolling()/body
E; class; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
E; class; [CN]/UIImplementation/[MT]/createRootShadowNode()/body
E; class; [CN]/TouchTargetHelper/[MT]/getTouchTargetForView(View,float,float)/parameters
E; class; [CN]/ReactModuleSpecProcessor/[MT]/getCodeBlockForReactModuleInfos(List<String>)/body
E; class; [CN]/SimpleSettableFuture/[MT]/get()/body
E; class; [CN]/FrescoModule/[CS]/FrescoModule(ReactApplicationContext)/body
E; class; [CN]/BaseJavaModule/[MT]/getSyncHooks()/body
E; class; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body
E; class; [CN]/LocationModule/[MT]/startObserving(ReadableMap)/body
E; class; [CN]/ImageResizeMode/[MT]/toScaleType(String)/body
E; class; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient)/body
E; class; [CN]/ProgressBarContainerView/[MT]/setStyle(String)/body
E; class; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient,List<NetworkInterceptorCreator>)/body
E; class; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body
E; class; [CN]/DevSupportManagerImpl/[MT]/showNewError(String,StackFrame[],int,ErrorType)/body
E; class; [CN]/ReactToolbar/[MT]/setOverflowIconSource(ReadableMap)/body
E; class; [CN]/StatusBarModule/[MT]/setTranslucent(boolean,Promise)/body
E; class; [CN]/ReactModalHostView/[MT]/onHostDestroy()/body
E; class; [CN]/JavaScriptModuleRegistration/[CS]/JavaScriptModuleRegistration(Class<? extends JavaScriptModule>)/body
E; class; [CN]/TouchTargetHelper/[MT]/isTransformedTouchPointInView(float,float,ViewGroup,View,PointF)/parameters
E; class; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/addView(View,int)/body
E; class; [CN]/ReactToolbar/[MT]/getDrawableByName(String)/body
E; class; [CN]/UIViewOperationQueue/[CN]/DispatchUIFrameCallback/[MT]/doFrameGuarded(long)/body
E; class; [CN]/XReactInstanceManagerImpl/[MT]/createAllViewManagers(ReactApplicationContext)/body
E; class; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body
E; class; [CN]/ReactRootView/[MT]/attachToReactInstanceManager()/body
E; class; [CN]/UIViewOperationQueue/[MT]/dispatchViewUpdates(int)/body
E; class; [CN]/ReactRootView/[MT]/onAttachedToWindow()/body
E; class; [CN]/Timing/[MT]/deleteTimer(ExecutorToken,int)/body
E; class; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/removeViewAt(int)/body
E; class; [CN]/I18nManagerModule/[MT]/allowRTL(boolean)/body
E; class; [CN]/ReactModuleSpecProcessor/[MT]/process(Set<? extends TypeElement>,RoundEnvironment)/body
E; class; [CN]/ReactInstanceManager/[MT]/createReactContextInBackground()/body
E; class; [CN]/InterpolationAnimatedNode/[CS]/InterpolationAnimatedNode(ReadableMap)/body
E; class; [CN]/StatusBarModule/[MT]/setColor(int,boolean,Promise)/body
E; class; [CN]/ReactShadowNode/[MT]/removeAllChildren()/body
E; class; [CN]/ReactShadowNode/[MT]/updateNativeChildrenCountInParent(int)/body
E; class; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderAlpha(int,float)/body
E; class; [CN]/Timing/[CN]/TimerFrameCallback/[MT]/doFrame(long)/body
E; class; [CN]/JSCHeapCapture/[MT]/registerHeapCapture(JSCHeapCapture)/body
E; class; [CN]/ProgressBarContainerView/[MT]/apply()/body
E; class; [CN]/NativeViewHierarchyManager/[MT]/dropView(View)/body
E; class; [CN]/StatusBarModule/[MT]/setHidden(boolean,Promise)/body
E; class; [CN]/Timing/[MT]/setChoreographerCallback()/body
E; class; [CN]/ImageLoadEvent/[MT]/dispatch(RCTEventEmitter)/body
E; class; [CN]/AsyncStorageModule/[MT]/multiGet(ReadableArray,Callback)/body
E; class; [CN]/EventDispatcher/[CN]/ScheduleDispatchFrameCallback/[MT]/doFrame(long)/body
E; class; [CN]/ReactScrollViewCommandHelper/[MT]/receiveCommand(ScrollCommandHandler<T>,T,int,ReadableArray)/body
E; class; [CN]/NetworkingModule/[MT]/getEventEmitter(ExecutorToken)/body
E; class; [CN]/ReactRootView/[MT]/startReactApplication(ReactInstanceManager,String,Bundle)/body
E; class; [CN]/ReactImageView/[MT]/setSource(ReadableArray)/body
E; class; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>)/body
E; class; [CN]/Event/[MT]/dispose()/body
E; class; [CN]/NativeViewHierarchyManager/[MT]/removeRootView(int)/body
E; class; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/body
E; class; [CN]/NetworkingModule/[MT]/initialize()/body
E; class; [CN]/ReactContext/[MT]/hasCurrentActivity()/body
E; class; [CN]/Timing/[MT]/clearChoreographerCallback()/body
E; class; [CN]/ReactTextView/[MT]/onAttachedToWindow()/body
E; class; [CN]/UnpackingJSBundleLoader/[CN]/Builder/[CS]/Builder()/body
E; class; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
E; class; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
E; class; [CN]/CoreModulesPackage/[MT]/createJSModules()/body
E; class; [CN]/DevSupportManagerImpl/[MT]/showDevOptionsDialog()/body
E; class; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/body
E; class; [CN]/NativeViewHierarchyManager/[MT]/manageChildren(int,int[],ViewAtIndex[],int[])/body
E; class; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
E; class; [CN]/MessageQueueThreadImpl/[MT]/startNewBackgroundThread(String,QueueThreadExceptionHandler)/body
E; class; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/build()/body
E; class; [CN]/DevServerHelper/[MT]/downloadBundleFromURL(BundleDownloadCallback,String,File)/body
E; class; [CN]/FrescoModule/[MT]/initialize()/body
E; class; [CN]/ReactRootView/[MT]/onMeasure(int,int)/body
E; class; [CN]/EventDispatcher/[MT]/dispatchEvent(Event)/body
E; class; [CN]/ReactImageView/[MT]/maybeUpdateView()/body
E; class; [CN]/ReactTextShadowNode/[MT]/buildSpannedFromTextCSSNode(ReactTextShadowNode,SpannableStringBuilder,List<SetSpanOperation>)/body
E; package; src_main_java_com_facebook_react_views_modal_ReactModalHostManager.java
E; package; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollView.java
E; package; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
E; package; src_main_java_com_facebook_react_modules_storage_AsyncStorageModule.java
E; package; src_main_java_com_facebook_react_views_view_ReactViewBackgroundDrawable.java
E; package; src_main_java_com_facebook_react_views_swiperefresh_SwipeRefreshLayoutManager.java
E; package; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
E; package; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
E; package; src_main_java_com_facebook_react_views_picker_ReactPickerManager.java
E; package; src_main_java_com_facebook_react_devsupport_DevSupportManagerImpl.java
E; package; src_main_java_com_facebook_react_views_drawer_ReactDrawerLayoutManager.java
E; package; src_main_java_com_facebook_react_views_textinput_ReactTextInputManager.java
E; package; src_main_java_com_facebook_react_views_viewpager_ReactViewPager.java
E; package; src_main_java_com_facebook_react_ReactInstanceManager.java
E; package; src_main_java_com_facebook_react_uimanager_OnLayoutEvent.java
E; package; src_main_java_com_facebook_react_views_webview_ReactWebViewManager.java
E; package; src_main_java_com_facebook_react_views_view_ReactViewGroup.java
E; package; src_main_java_com_facebook_react_views_textinput_ReactTextInputShadowNode.java
E; package; src_main_java_com_facebook_react_views_image_ReactImageManager.java
E; package; src_main_java_com_facebook_react_views_toolbar_ReactToolbarManager.java
E; package; src_main_java_com_facebook_react_bridge_BaseJavaModule.java
E; package; src_main_java_com_facebook_react_views_image_ReactImageView.java
E; package; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
E; package; src_main_java_com_facebook_react_uimanager_JSTouchDispatcher.java
E; package; src_main_java_com_facebook_react_module_processing_ReactModuleSpecProcessor.java
E; package; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyOptimizer.java
E; package; src_main_java_com_facebook_react_uimanager_events_TouchesHelper.java
E; package; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
E; package; src_main_java_com_facebook_react_views_scroll_ReactHorizontalScrollView.java
E; package; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollViewManager.java
E; package; src_main_java_com_facebook_react_bridge_JavaScriptModuleRegistry.java
E; package; src_main_java_com_facebook_react_views_scroll_ReactScrollView.java
E; package; src_main_java_com_facebook_react_devsupport_JSCHeapCapture.java
E; package; src_main_java_com_facebook_react_bridge_ModuleSpec.java
E; package; src_main_java_com_facebook_react_bridge_ReactContext.java
E; package; src_main_java_com_facebook_react_views_modal_ReactModalHostView.java
E; package; src_main_java_com_facebook_react_ReactRootView.java
E; package; src_main_java_com_facebook_react_views_text_ReactTextShadowNode.java
E; package; src_main_java_com_facebook_react_views_toolbar_ReactToolbar.java
E; package; src_main_java_com_facebook_react_views_scroll_ReactScrollViewHelper.java
E; package; src_main_java_com_facebook_react_views_scroll_ReactScrollViewCommandHelper.java
E; package; src_main_java_com_facebook_react_XReactInstanceManagerImpl.java
E; package; src_main_java_com_facebook_react_modules_location_LocationModule.java
E; package; src_main_java_com_facebook_react_modules_storage_ReactDatabaseSupplier.java
E; package; src_main_java_com_facebook_react_devsupport_DevInternalSettings.java
E; package; src_main_java_com_facebook_react_views_view_ReactViewManager.java
E; package; src_main_java_com_facebook_react_animated_InterpolationAnimatedNode.java
E; package; src_main_java_com_facebook_csslayout_Spacing.java
E; package; src_main_java_com_facebook_react_uimanager_UIManagerModuleConstants.java
E; package; src_main_java_com_facebook_react_views_view_ReactDrawableHelper.java
E; package; src_main_java_com_facebook_react_modules_websocket_WebSocketModule.java
E; package; src_main_java_com_facebook_react_uimanager_ViewProps.java
E; package; src_main_java_com_facebook_react_views_text_ReactTextView.java
E; package; src_main_java_com_facebook_csslayout_CSSStyle.java
E; package; src_main_java_com_facebook_react_common_futures_SimpleSettableFuture.java
E; package; src_main_java_com_facebook_react_uimanager_UIImplementation.java
E; package; src_main_java_com_facebook_react_cxxbridge_UnpackingJSBundleLoader.java
E; package; src_main_java_com_facebook_react_uimanager_TouchTargetHelper.java
E; package; src_main_java_com_facebook_react_uimanager_events_TouchEventCoalescingKeyHelper.java
E; package; src_main_java_com_facebook_react_views_textinput_ReactEditText.java
E; package; src_main_java_com_facebook_react_bridge_queue_MessageQueueThreadImpl.java
E; package; src_main_java_com_facebook_react_modules_fresco_FrescoModule.java
E; package; src_main_java_com_facebook_react_views_image_ImageResizeMode.java
E; package; src_main_java_com_facebook_react_views_progressbar_ProgressBarContainerView.java
E; package; src_main_java_com_facebook_react_modules_statusbar_StatusBarModule.java
E; package; src_main_java_com_facebook_react_bridge_JavaScriptModuleRegistration.java
E; package; src_main_java_com_facebook_react_uimanager_UIViewOperationQueue.java
E; package; src_main_java_com_facebook_react_modules_core_Timing.java
E; package; src_main_java_com_facebook_react_modules_i18nmanager_I18nManagerModule.java
E; package; src_main_java_com_facebook_react_uimanager_ReactShadowNode.java
E; package; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyManager.java
E; package; src_main_java_com_facebook_react_views_image_ImageLoadEvent.java
E; package; src_main_java_com_facebook_react_uimanager_events_EventDispatcher.java
E; package; src_main_java_com_facebook_react_uimanager_events_Event.java
E; package; src_main_java_com_facebook_react_CoreModulesPackage.java
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/AsyncStorageModule/[MT]/multiRemove(ReadableArray,Callback)/body; [CN]/AsyncStorageModule/[MT]/multiGet(ReadableArray,Callback)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/drawRoundedBackgroundWithBorders(Canvas)/body; [CN]/ReactViewBackgroundDrawable/[MT]/draw(Canvas)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleLoader(JSBundleLoader)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactTextInputShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; [CN]/ReactTextView/[MT]/setText(ReactTextUpdate)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager()/body; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/BaseJavaModule/[MT]/getMethods()/body; [CN]/BaseJavaModule/[MT]/getSyncHooks()/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactModuleSpecProcessor/[MT]/init(ProcessingEnvironment)/body; [CN]/ReactModuleSpecProcessor/[MT]/getCodeBlockForReactModuleInfos(List<String>)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/body; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/parameters
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body; [CN]/ReactImageManager/[CS]/ReactImageManager()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body
R; depends-to; [CN]/ReactTextInputShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters
R; depends-to; [CN]/ReactHorizontalScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body; [CN]/ReactScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/parameters; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body
R; depends-to; [CN]/JavaScriptModuleRegistry/[CN]/JavaScriptModuleInvocationHandler/[MT]/invoke(Object,Method,Object[])/body; [CN]/JavaScriptModuleRegistration/[CS]/JavaScriptModuleRegistration(Class<? extends JavaScriptModule>)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/parameters; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body; [CN]/ReactHorizontalScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/JSCHeapCapture/[CS]/JSCHeapCapture(ReactApplicationContext)/body; [CN]/CoreModulesPackage/[MT]/createJSModules()/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>,ReactApplicationContext)/body; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>)/body
R; depends-to; [CN]/JSCHeapCapture/[MT]/unregisterHeapCapture(JSCHeapCapture)/body; [CN]/DevSupportManagerImpl/[MT]/showDevOptionsDialog()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactContext/[MT]/onHostPause()/body; [CN]/ReactContext/[MT]/onHostDestroy()/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactModalHostView/[MT]/onHostPause()/body; [CN]/ReactModalHostView/[MT]/onHostResume()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body; [CN]/ReactRootView/[MT]/startReactApplication(ReactInstanceManager,String,Bundle)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body; [CN]/NetworkingModule/[MT]/constructMultipartBody(ExecutorToken,ReadableArray,String,int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; [CN]/ReactTextInputShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactToolbar/[CS]/ReactToolbar(Context)/body; [CN]/ReactToolbar/[MT]/getDrawableByName(String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactScrollViewCommandHelper/[MT]/getCommandsMap()/body; [CN]/ReactScrollViewCommandHelper/[MT]/receiveCommand(ScrollCommandHandler<T>,T,int,ReadableArray)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body
R; depends-to; [CN]/LocationModule/[MT]/getCurrentPosition(ReadableMap,Callback,Callback)/body; [CN]/LocationModule/[MT]/startObserving(ReadableMap)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/NetworkingModule/[MT]/constructMultipartBody(ExecutorToken,ReadableArray,String,int)/body; [CN]/NetworkingModule/[MT]/getEventEmitter(ExecutorToken)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/setupReactContext(ReactApplicationContext)/body; [CN]/XReactInstanceManagerImpl/[MT]/createAllViewManagers(ReactApplicationContext)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/DevServerHelper/[MT]/startPollingOnChangeEndpoint(OnServerContentChangeListener)/body; [CN]/DevServerHelper/[MT]/stopPollingOnChangeEndpoint()/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactDatabaseSupplier/[MT]/deleteInstance()/body; [CN]/ReactDatabaseSupplier/[MT]/getInstance(Context)/body
R; depends-to; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactContext/[MT]/onHostDestroy()/body; [CN]/ReactContext/[MT]/onHostPause()/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactModalHostView/[MT]/onHostResume()/body; [CN]/ReactModalHostView/[MT]/onHostPause()/body
R; depends-to; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/InterpolationAnimatedNode/[MT]/update()/body; [CN]/InterpolationAnimatedNode/[CS]/InterpolationAnimatedNode(ReadableMap)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactHorizontalScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body; [CN]/ReactScrollView/[MT]/onTouchEvent(MotionEvent)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager()/body; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/Spacing/[MT]/reset()/body; [CN]/CSSStyle/[MT]/reset()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body; [CN]/ReactImageManager/[CS]/ReactImageManager()/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/UIManagerModuleConstants/[MT]/getConstants()/body; [CN]/ImageResizeMode/[MT]/toScaleType(String)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactDatabaseSupplier/[MT]/getInstance(Context)/body; [CN]/ReactDatabaseSupplier/[MT]/deleteInstance()/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleLoader(JSBundleLoader)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/draw(Canvas)/body; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager()/body; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderRGB(int,float)/body; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderAlpha(int,float)/body
R; depends-to; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/parameters; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactToolbar/[CS]/ReactToolbar(Context)/body; [CN]/ReactToolbar/[MT]/setOverflowIconSource(ReadableMap)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body; [CN]/ReactImageManager/[CS]/ReactImageManager()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ViewProps/[FE]/LAYOUT_ONLY_PROPS; [CN]/NativeViewHierarchyManager/[MT]/manageChildren(int,int[],ViewAtIndex[],int[])/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactTextView/[MT]/setText(ReactTextUpdate)/body; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body
R; depends-to; [CN]/WebSocketModule/[CS]/WebSocketModule(ReactApplicationContext)/body; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/LocationModule/[CN]/LocationOptions/[MT]/fromReactMap(ReadableMap)/body; [CN]/LocationModule/[MT]/startObserving(ReadableMap)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/DevServerHelper/[MT]/stopPollingOnChangeEndpoint()/body; [CN]/DevServerHelper/[MT]/enqueueOnChangeEndpointLongPolling()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/CSSStyle/[MT]/reset()/body; [CN]/Spacing/[MT]/reset()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/SimpleSettableFuture/[MT]/get(long,TimeUnit)/body; [CN]/SimpleSettableFuture/[MT]/get()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/UIImplementation/[CS]/UIImplementation(ReactApplicationContext,ViewManagerRegistry)/body; [CN]/UIImplementation/[MT]/createRootShadowNode()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/UnpackingJSBundleLoader/[CS]/UnpackingJSBundleLoader(Builder)/body; [CN]/UnpackingJSBundleLoader/[CN]/Builder/[CS]/Builder()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body
R; depends-to; [CN]/TouchTargetHelper/[MT]/findTargetTagForTouch(float,float,ViewGroup)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onTouchEvent(MotionEvent)/body; [CN]/ReactHorizontalScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactContext/[MT]/startActivityForResult(Intent,int,Bundle)/body; [CN]/ReactContext/[MT]/hasCurrentActivity()/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTL(Context)/body; [CN]/I18nManagerModule/[MT]/allowRTL(boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/updateJSError(String,ReadableArray,int)/body; [CN]/DevSupportManagerImpl/[MT]/showNewError(String,StackFrame[],int,ErrorType)/body
R; depends-to; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient,List<NetworkInterceptorCreator>)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/TouchEventCoalescingKeyHelper/[MT]/hasCoalescingKey(long)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactEditText/[MT]/onAttachedToWindow()/body; [CN]/ReactTextView/[MT]/onAttachedToWindow()/body
R; depends-to; [CN]/MessageQueueThreadImpl/[MT]/createForMainThread(String,QueueThreadExceptionHandler)/body; [CN]/MessageQueueThreadImpl/[MT]/startNewBackgroundThread(String,QueueThreadExceptionHandler)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleLoader(JSBundleLoader)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/build()/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body; [CN]/DevServerHelper/[MT]/downloadBundleFromURL(BundleDownloadCallback,String,File)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/DevServerHelper/[MT]/enqueueOnChangeEndpointLongPolling()/body; [CN]/DevServerHelper/[MT]/startPollingOnChangeEndpoint(OnServerContentChangeListener)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactModuleSpecProcessor/[MT]/init(ProcessingEnvironment)/body; [CN]/ReactModuleSpecProcessor/[MT]/process(Set<? extends TypeElement>,RoundEnvironment)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body; [CN]/ReactImageManager/[CS]/ReactImageManager()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body; [CN]/ReactViewBackgroundDrawable/[MT]/draw(Canvas)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/UIImplementation/[MT]/createRootShadowNode()/body; [CN]/UIImplementation/[CS]/UIImplementation(ReactApplicationContext,ViewManagerRegistry)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/JSCHeapCapture/[CS]/JSCHeapCapture(ReactApplicationContext)/body; [CN]/DevSupportManagerImpl/[MT]/showDevOptionsDialog()/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/TouchTargetHelper/[MT]/getTouchTargetForView(View,float,float)/parameters; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactModuleSpecProcessor/[MT]/getCodeBlockForReactModuleInfos(List<String>)/body; [CN]/ReactModuleSpecProcessor/[MT]/process(Set<? extends TypeElement>,RoundEnvironment)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/SimpleSettableFuture/[MT]/get()/body; [CN]/SimpleSettableFuture/[MT]/get(long,TimeUnit)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/FrescoModule/[CS]/FrescoModule(ReactApplicationContext)/body; [CN]/FrescoModule/[MT]/initialize()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/BaseJavaModule/[MT]/getSyncHooks()/body; [CN]/BaseJavaModule/[MT]/getMethods()/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/LocationModule/[MT]/startObserving(ReadableMap)/body; [CN]/LocationModule/[CN]/LocationOptions/[MT]/fromReactMap(ReadableMap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ImageResizeMode/[MT]/toScaleType(String)/body; [CN]/UIManagerModuleConstants/[MT]/getConstants()/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ProgressBarContainerView/[MT]/setStyle(String)/body; [CN]/ProgressBarContainerView/[MT]/apply()/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body; [CN]/ReactRootView/[MT]/onAttachedToWindow()/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body; [CN]/ReactViewBackgroundDrawable/[MT]/drawRoundedBackgroundWithBorders(Canvas)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient,List<NetworkInterceptorCreator>)/body; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/drawRoundedBackgroundWithBorders(Canvas)/body; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/showNewError(String,StackFrame[],int,ErrorType)/body; [CN]/DevSupportManagerImpl/[MT]/updateJSError(String,ReadableArray,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; [CN]/ReactTextView/[MT]/setText(ReactTextUpdate)/body
R; depends-to; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body
R; depends-to; [CN]/DevServerHelper/[MT]/stopPollingOnChangeEndpoint()/body; [CN]/DevServerHelper/[MT]/startPollingOnChangeEndpoint(OnServerContentChangeListener)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactToolbar/[MT]/setOverflowIconSource(ReadableMap)/body; [CN]/ReactToolbar/[CS]/ReactToolbar(Context)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body; [CN]/DevServerHelper/[MT]/downloadBundleFromURL(BundleDownloadCallback,String,File)/body
R; depends-to; [CN]/StatusBarModule/[MT]/setTranslucent(boolean,Promise)/body; [CN]/StatusBarModule/[MT]/setHidden(boolean,Promise)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body; [CN]/ReactRootView/[MT]/onMeasure(int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/DevServerHelper/[MT]/enqueueOnChangeEndpointLongPolling()/body; [CN]/DevServerHelper/[MT]/stopPollingOnChangeEndpoint()/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactModalHostView/[MT]/onHostDestroy()/body; [CN]/ReactModalHostView/[MT]/onHostPause()/body
R; depends-to; [CN]/JavaScriptModuleRegistration/[CS]/JavaScriptModuleRegistration(Class<? extends JavaScriptModule>)/body; [CN]/JavaScriptModuleRegistry/[CN]/JavaScriptModuleInvocationHandler/[MT]/invoke(Object,Method,Object[])/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/JSCHeapCapture/[MT]/unregisterHeapCapture(JSCHeapCapture)/body; [CN]/JSCHeapCapture/[MT]/registerHeapCapture(JSCHeapCapture)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/TouchTargetHelper/[MT]/isTransformedTouchPointInView(float,float,ViewGroup,View,PointF)/parameters; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/addView(View,int)/body; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/removeViewAt(int)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onTouchEvent(MotionEvent)/body; [CN]/ReactScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/StatusBarModule/[MT]/setTranslucent(boolean,Promise)/body; [CN]/StatusBarModule/[MT]/setColor(int,boolean,Promise)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactToolbar/[MT]/getDrawableByName(String)/body; [CN]/ReactToolbar/[CS]/ReactToolbar(Context)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactToolbar/[MT]/getDrawableByName(String)/body; [CN]/ReactToolbar/[MT]/setOverflowIconSource(ReadableMap)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactModalHostView/[MT]/onHostResume()/body; [CN]/ReactModalHostView/[MT]/onHostDestroy()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/UIViewOperationQueue/[CN]/DispatchUIFrameCallback/[MT]/doFrameGuarded(long)/body; [CN]/UIViewOperationQueue/[MT]/dispatchViewUpdates(int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/createAllViewManagers(ReactApplicationContext)/body; [CN]/XReactInstanceManagerImpl/[MT]/setupReactContext(ReactApplicationContext)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/ReactModuleSpecProcessor/[MT]/getCodeBlockForReactModuleInfos(List<String>)/body; [CN]/ReactModuleSpecProcessor/[MT]/init(ProcessingEnvironment)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager()/body; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactRootView/[MT]/attachToReactInstanceManager()/body; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/DevServerHelper/[MT]/startPollingOnChangeEndpoint(OnServerContentChangeListener)/body; [CN]/DevServerHelper/[MT]/enqueueOnChangeEndpointLongPolling()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/UIViewOperationQueue/[MT]/dispatchViewUpdates(int)/body; [CN]/UIViewOperationQueue/[CN]/DispatchUIFrameCallback/[MT]/doFrameGuarded(long)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/ReactModalHostView/[MT]/onHostDestroy()/body; [CN]/ReactModalHostView/[MT]/onHostResume()/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactRootView/[MT]/onAttachedToWindow()/body; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body
R; depends-to; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/Timing/[MT]/deleteTimer(ExecutorToken,int)/body; [CN]/Timing/[CN]/TimerFrameCallback/[MT]/doFrame(long)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/removeViewAt(int)/body; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/addView(View,int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/I18nManagerModule/[MT]/allowRTL(boolean)/body; [CN]/I18nUtil/[MT]/isRTL(Context)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body; [CN]/DevServerHelper/[MT]/downloadBundleFromURL(BundleDownloadCallback,String,File)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactToolbar/[MT]/setOverflowIconSource(ReadableMap)/body; [CN]/ReactToolbar/[MT]/getDrawableByName(String)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactModuleSpecProcessor/[MT]/process(Set<? extends TypeElement>,RoundEnvironment)/body; [CN]/ReactModuleSpecProcessor/[MT]/getCodeBlockForReactModuleInfos(List<String>)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body; [CN]/ReactInstanceManager/[MT]/createReactContextInBackground()/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactInstanceManager/[MT]/createReactContextInBackground()/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body
R; depends-to; [CN]/InterpolationAnimatedNode/[CS]/InterpolationAnimatedNode(ReadableMap)/body; [CN]/InterpolationAnimatedNode/[MT]/update()/body
R; depends-to; [CN]/TouchTargetHelper/[MT]/getTouchTargetForView(View,float,float)/parameters; [CN]/TouchTargetHelper/[MT]/findTargetTagForTouch(float,float,ViewGroup)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactTextView/[MT]/setText(ReactTextUpdate)/body; [CN]/ReactTextInputShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient)/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/StatusBarModule/[MT]/setColor(int,boolean,Promise)/body; [CN]/StatusBarModule/[MT]/setTranslucent(boolean,Promise)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/ReactShadowNode/[MT]/removeAllChildren()/body; [CN]/ReactShadowNode/[MT]/updateNativeChildrenCountInParent(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactShadowNode/[MT]/updateNativeChildrenCountInParent(int)/body; [CN]/ReactShadowNode/[MT]/removeAllChildren()/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/build()/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderAlpha(int,float)/body; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderRGB(int,float)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body
R; depends-to; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/LocationModule/[MT]/startObserving(ReadableMap)/body; [CN]/LocationModule/[MT]/getCurrentPosition(ReadableMap,Callback,Callback)/body
R; depends-to; [CN]/Timing/[CN]/TimerFrameCallback/[MT]/doFrame(long)/body; [CN]/Timing/[MT]/deleteTimer(ExecutorToken,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/JSCHeapCapture/[MT]/registerHeapCapture(JSCHeapCapture)/body; [CN]/JSCHeapCapture/[MT]/unregisterHeapCapture(JSCHeapCapture)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ProgressBarContainerView/[MT]/apply()/body; [CN]/ProgressBarContainerView/[MT]/setStyle(String)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager()/body; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body
R; depends-to; [CN]/NativeViewHierarchyManager/[MT]/dropView(View)/body; [CN]/NativeViewHierarchyManager/[MT]/manageChildren(int,int[],ViewAtIndex[],int[])/body
R; depends-to; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body
R; depends-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/StatusBarModule/[MT]/setHidden(boolean,Promise)/body; [CN]/StatusBarModule/[MT]/setColor(int,boolean,Promise)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/Timing/[MT]/setChoreographerCallback()/body; [CN]/Timing/[MT]/clearChoreographerCallback()/body
R; depends-to; [CN]/ImageLoadEvent/[MT]/dispatch(RCTEventEmitter)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactModalHostView/[MT]/onHostPause()/body; [CN]/ReactModalHostView/[MT]/onHostDestroy()/body
R; depends-to; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body
R; depends-to; [CN]/AsyncStorageModule/[MT]/multiGet(ReadableArray,Callback)/body; [CN]/AsyncStorageModule/[MT]/multiRemove(ReadableArray,Callback)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/EventDispatcher/[CN]/ScheduleDispatchFrameCallback/[MT]/doFrame(long)/body; [CN]/EventDispatcher/[MT]/dispatchEvent(Event)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body; [CN]/ReactScrollView/[MT]/onTouchEvent(MotionEvent)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactScrollViewCommandHelper/[MT]/receiveCommand(ScrollCommandHandler<T>,T,int,ReadableArray)/body; [CN]/ReactScrollViewCommandHelper/[MT]/getCommandsMap()/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/NetworkingModule/[MT]/getEventEmitter(ExecutorToken)/body; [CN]/NetworkingModule/[MT]/constructMultipartBody(ExecutorToken,ReadableArray,String,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/ViewProps/[FE]/LAYOUT_ONLY_PROPS; [CN]/NativeViewHierarchyManager/[MT]/removeRootView(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/ReactRootView/[MT]/startReactApplication(ReactInstanceManager,String,Bundle)/body; [CN]/ReactRootView/[MT]/onMeasure(int,int)/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/JSCHeapCapture/[MT]/registerHeapCapture(JSCHeapCapture)/body; [CN]/DevSupportManagerImpl/[MT]/showDevOptionsDialog()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient,List<NetworkInterceptorCreator>)/body; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body
R; depends-to; [CN]/ReactImageView/[MT]/setSource(ReadableArray)/body; [CN]/ReactImageView/[MT]/maybeUpdateView()/body
R; depends-to; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>)/body; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>,ReactApplicationContext)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body; [CN]/ReactImageManager/[CS]/ReactImageManager()/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body
R; depends-to; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body; [CN]/ReactRootView/[MT]/attachToReactInstanceManager()/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/Event/[MT]/dispose()/body; [CN]/EventDispatcher/[MT]/dispatchEvent(Event)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/NativeViewHierarchyManager/[MT]/removeRootView(int)/body; [CN]/ViewProps/[FE]/LAYOUT_ONLY_PROPS
R; depends-to; [CN]/ReactModuleSpecProcessor/[MT]/process(Set<? extends TypeElement>,RoundEnvironment)/body; [CN]/ReactModuleSpecProcessor/[MT]/init(ProcessingEnvironment)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/body; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/parameters
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/NetworkingModule/[MT]/constructMultipartBody(ExecutorToken,ReadableArray,String,int)/body; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body
R; depends-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body
R; depends-to; [CN]/NetworkingModule/[MT]/initialize()/body; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body
R; depends-to; [CN]/ReactContext/[MT]/hasCurrentActivity()/body; [CN]/ReactContext/[MT]/startActivityForResult(Intent,int,Bundle)/body
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/NativeViewHierarchyManager/[MT]/removeRootView(int)/body; [CN]/NativeViewHierarchyManager/[MT]/manageChildren(int,int[],ViewAtIndex[],int[])/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body
R; depends-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body
R; depends-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body
R; depends-to; [CN]/ReactRootView/[MT]/startReactApplication(ReactInstanceManager,String,Bundle)/body; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body; [CN]/DevServerHelper/[MT]/downloadBundleFromURL(BundleDownloadCallback,String,File)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body
R; depends-to; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; [CN]/ReactTextShadowNode/[MT]/buildSpannedFromTextCSSNode(ReactTextShadowNode,SpannableStringBuilder,List<SetSpanOperation>)/body
R; depends-to; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body
R; depends-to; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient,List<NetworkInterceptorCreator>)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/build()/body
R; depends-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body
R; depends-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body
R; depends-to; [CN]/Timing/[MT]/clearChoreographerCallback()/body; [CN]/Timing/[MT]/setChoreographerCallback()/body
R; depends-to; [CN]/StatusBarModule/[MT]/setHidden(boolean,Promise)/body; [CN]/StatusBarModule/[MT]/setTranslucent(boolean,Promise)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body; [CN]/NetworkingModule/[MT]/initialize()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactTextView/[MT]/onAttachedToWindow()/body; [CN]/ReactEditText/[MT]/onAttachedToWindow()/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body
R; depends-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; [CN]/DevSupportManagerImpl/[MT]/reload()/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; depends-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body
R; depends-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/draw(Canvas)/body; [CN]/ReactViewBackgroundDrawable/[MT]/drawRoundedBackgroundWithBorders(Canvas)/body
R; depends-to; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body
R; depends-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body
R; depends-to; [CN]/UnpackingJSBundleLoader/[CN]/Builder/[CS]/Builder()/body; [CN]/UnpackingJSBundleLoader/[CS]/UnpackingJSBundleLoader(Builder)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body
R; depends-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body
R; depends-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body
R; depends-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body
R; depends-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body
R; depends-to; [CN]/StatusBarModule/[MT]/setColor(int,boolean,Promise)/body; [CN]/StatusBarModule/[MT]/setHidden(boolean,Promise)/body
R; depends-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body
R; depends-to; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body
R; depends-to; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body
R; depends-to; [CN]/TouchTargetHelper/[MT]/findTargetTagForTouch(float,float,ViewGroup)/body; [CN]/TouchTargetHelper/[MT]/getTouchTargetForView(View,float,float)/parameters
R; depends-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body
R; depends-to; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body
R; depends-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body
R; pertains-to; [CN]/ReactModalHostManager/[MT]/addEventEmitters(ThemedReactContext,ReactModalHostView)/body; src_main_java_com_facebook_react_views_modal_ReactModalHostManager.java
R; pertains-to; [CN]/RecyclerViewBackedScrollView/[MT]/onTotalChildrenHeightChange(int)/body; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollView.java
R; pertains-to; [CN]/BaseViewManager/[MT]/setRotation(T,float)/body; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
R; pertains-to; [CN]/AsyncStorageModule/[MT]/multiRemove(ReadableArray,Callback)/body; src_main_java_com_facebook_react_modules_storage_AsyncStorageModule.java
R; pertains-to; [CN]/ReactViewBackgroundDrawable/[MT]/drawRoundedBackgroundWithBorders(Canvas)/body; src_main_java_com_facebook_react_views_view_ReactViewBackgroundDrawable.java
R; pertains-to; [CN]/SwipeRefreshLayoutManager/[MT]/addEventEmitters(ThemedReactContext,ReactSwipeRefreshLayout)/body; src_main_java_com_facebook_react_views_swiperefresh_SwipeRefreshLayoutManager.java
R; pertains-to; [CN]/DevServerHelper/[MT]/getSourceUrl(String)/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/JSPackagerWebSocketClient/[MT]/closeQuietly()/body; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
R; pertains-to; [CN]/ReactPickerManager/[CN]/PickerEventEmitter/[MT]/onItemSelected(int)/body; src_main_java_com_facebook_react_views_picker_ReactPickerManager.java
R; pertains-to; [CN]/DevSupportManagerImpl/[MT]/reload()/body; src_main_java_com_facebook_react_devsupport_DevSupportManagerImpl.java
R; pertains-to; [CN]/RecyclerViewBackedScrollView/[MT]/onScrollChanged(int,int,int,int)/body; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollView.java
R; pertains-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerStateChanged(int)/body; src_main_java_com_facebook_react_views_drawer_ReactDrawerLayoutManager.java
R; pertains-to; [CN]/ReactTextInputManager/[CN]/ReactTextInputTextWatcher/[MT]/onTextChanged(CharSequence,int,int,int)/body; src_main_java_com_facebook_react_views_textinput_ReactTextInputManager.java
R; pertains-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrollStateChanged(int)/body; src_main_java_com_facebook_react_views_viewpager_ReactViewPager.java
R; pertains-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerOpened(View)/body; src_main_java_com_facebook_react_views_drawer_ReactDrawerLayoutManager.java
R; pertains-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleLoader(JSBundleLoader)/body; src_main_java_com_facebook_react_ReactInstanceManager.java
R; pertains-to; [CN]/OnLayoutEvent/[MT]/init(int,int,int,int,int)/body; src_main_java_com_facebook_react_uimanager_OnLayoutEvent.java
R; pertains-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onPageStarted(WebView,String,Bitmap)/body; src_main_java_com_facebook_react_views_webview_ReactWebViewManager.java
R; pertains-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(Rect,int,int)/body; src_main_java_com_facebook_react_views_view_ReactViewGroup.java
R; pertains-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageSelected(int)/body; src_main_java_com_facebook_react_views_viewpager_ReactViewPager.java
R; pertains-to; [CN]/ReactTextInputShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; src_main_java_com_facebook_react_views_textinput_ReactTextInputShadowNode.java
R; pertains-to; [CN]/ReactImageManager/[CS]/ReactImageManager()/body; src_main_java_com_facebook_react_views_image_ReactImageManager.java
R; pertains-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/onReceivedError(WebView,int,String,String)/body; src_main_java_com_facebook_react_views_webview_ReactWebViewManager.java
R; pertains-to; [CN]/ReactToolbarManager/[MT]/addEventEmitters(ThemedReactContext,ReactToolbar)/body; src_main_java_com_facebook_react_views_toolbar_ReactToolbarManager.java
R; pertains-to; [CN]/JSPackagerWebSocketClient/[MT]/reconnect()/body; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
R; pertains-to; [CN]/BaseJavaModule/[MT]/getMethods()/body; src_main_java_com_facebook_react_bridge_BaseJavaModule.java
R; pertains-to; [CN]/ReactImageView/[MT]/setShouldNotifyLoadEvents(boolean)/body; src_main_java_com_facebook_react_views_image_ReactImageView.java
R; pertains-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/body; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
R; pertains-to; [CN]/JSTouchDispatcher/[MT]/dispatchCancelEvent(MotionEvent,EventDispatcher)/body; src_main_java_com_facebook_react_uimanager_JSTouchDispatcher.java
R; pertains-to; [CN]/BaseViewManager/[MT]/setTranslateX(T,float)/body; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
R; pertains-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/doUpdateVisitedHistory(WebView,String,boolean)/body; src_main_java_com_facebook_react_views_webview_ReactWebViewManager.java
R; pertains-to; [CN]/ReactModuleSpecProcessor/[MT]/init(ProcessingEnvironment)/body; src_main_java_com_facebook_react_module_processing_ReactModuleSpecProcessor.java
R; pertains-to; [CN]/ReactTextInputManager/[CN]/ReactSelectionWatcher/[MT]/onSelectionChanged(int,int)/body; src_main_java_com_facebook_react_views_textinput_ReactTextInputManager.java
R; pertains-to; [CN]/NativeViewHierarchyOptimizer/[MT]/isLayoutOnlyAndCollapsable(ReactStylesDiffMap)/body; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyOptimizer.java
R; pertains-to; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/body; src_main_java_com_facebook_react_uimanager_events_TouchesHelper.java
R; pertains-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerSlide(View,float)/body; src_main_java_com_facebook_react_views_drawer_ReactDrawerLayoutManager.java
R; pertains-to; [CN]/ReactImageManager/[CS]/ReactImageManager(AbstractDraweeControllerBuilder,Object)/body; src_main_java_com_facebook_react_views_image_ReactImageManager.java
R; pertains-to; [CN]/DevServerHelper/[MT]/getJSBundleURLForRemoteDebugging(String)/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/JSPackagerWebSocketClient/[MT]/abort(String,Throwable)/body; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
R; pertains-to; [CN]/I18nUtil/[MT]/isRTLAllowed(Context)/body; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
R; pertains-to; [CN]/ReactHorizontalScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body; src_main_java_com_facebook_react_views_scroll_ReactHorizontalScrollView.java
R; pertains-to; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/parameters; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollViewManager.java
R; pertains-to; [CN]/BaseViewManager/[MT]/setTranslateY(T,float)/body; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
R; pertains-to; [CN]/ReactDrawerLayoutManager/[CN]/DrawerEventEmitter/[MT]/onDrawerClosed(View)/body; src_main_java_com_facebook_react_views_drawer_ReactDrawerLayoutManager.java
R; pertains-to; [CN]/JavaScriptModuleRegistry/[CN]/JavaScriptModuleInvocationHandler/[MT]/invoke(Object,Method,Object[])/body; src_main_java_com_facebook_react_bridge_JavaScriptModuleRegistry.java
R; pertains-to; [CN]/JSPackagerWebSocketClient/[MT]/onClose(int,String)/body; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
R; pertains-to; [CN]/TouchesHelper/[MT]/createsPointersArray(int,TouchEvent)/parameters; src_main_java_com_facebook_react_uimanager_events_TouchesHelper.java
R; pertains-to; [CN]/ReactScrollView/[MT]/onInterceptTouchEvent(MotionEvent)/body; src_main_java_com_facebook_react_views_scroll_ReactScrollView.java
R; pertains-to; [CN]/JSPackagerWebSocketClient/[MT]/connect()/body; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
R; pertains-to; [CN]/JSCHeapCapture/[CS]/JSCHeapCapture(ReactApplicationContext)/body; src_main_java_com_facebook_react_devsupport_JSCHeapCapture.java
R; pertains-to; [CN]/JSTouchDispatcher/[MT]/handleTouchEvent(MotionEvent,EventDispatcher)/body; src_main_java_com_facebook_react_uimanager_JSTouchDispatcher.java
R; pertains-to; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>,ReactApplicationContext)/body; src_main_java_com_facebook_react_bridge_ModuleSpec.java
R; pertains-to; [CN]/JSCHeapCapture/[MT]/unregisterHeapCapture(JSCHeapCapture)/body; src_main_java_com_facebook_react_devsupport_JSCHeapCapture.java
R; pertains-to; [CN]/ReactContext/[MT]/onHostPause()/body; src_main_java_com_facebook_react_bridge_ReactContext.java
R; pertains-to; [CN]/ReactModalHostView/[MT]/onHostPause()/body; src_main_java_com_facebook_react_views_modal_ReactModalHostView.java
R; pertains-to; [CN]/BaseViewManager/[MT]/setScaleX(T,float)/body; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
R; pertains-to; [CN]/DevSupportManagerImpl/[CS]/DevSupportManagerImpl(Context,ReactInstanceDevCommandsHandler,String,boolean,RedBoxHandler)/body; src_main_java_com_facebook_react_devsupport_DevSupportManagerImpl.java
R; pertains-to; [CN]/ReactRootView/[MT]/onDetachedFromWindow()/body; src_main_java_com_facebook_react_ReactRootView.java
R; pertains-to; [CN]/NetworkingModule/[MT]/abortRequest(ExecutorToken,int)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/ReactViewGroup/[MT]/updateSubviewClipStatus(View)/body; src_main_java_com_facebook_react_views_view_ReactViewGroup.java
R; pertains-to; [CN]/ReactTextShadowNode/[MT]/onCollectExtraUpdates(UIViewOperationQueue)/body; src_main_java_com_facebook_react_views_text_ReactTextShadowNode.java
R; pertains-to; [CN]/ReactToolbar/[CS]/ReactToolbar(Context)/body; src_main_java_com_facebook_react_views_toolbar_ReactToolbar.java
R; pertains-to; [CN]/ReactTextInputManager/[MT]/addEventEmitters(ThemedReactContext,ReactEditText)/body; src_main_java_com_facebook_react_views_textinput_ReactTextInputManager.java
R; pertains-to; [CN]/ReactScrollViewHelper/[MT]/emitScrollEvent(ViewGroup,ScrollEventType)/body; src_main_java_com_facebook_react_views_scroll_ReactScrollViewHelper.java
R; pertains-to; [CN]/ReactScrollViewCommandHelper/[MT]/getCommandsMap()/body; src_main_java_com_facebook_react_views_scroll_ReactScrollViewCommandHelper.java
R; pertains-to; [CN]/XReactInstanceManagerImpl/[MT]/destroy()/body; src_main_java_com_facebook_react_XReactInstanceManagerImpl.java
R; pertains-to; [CN]/LocationModule/[MT]/getCurrentPosition(ReadableMap,Callback,Callback)/body; src_main_java_com_facebook_react_modules_location_LocationModule.java
R; pertains-to; [CN]/ReactWebViewManager/[CN]/ReactWebViewClient/[MT]/emitFinishEvent(WebView,String)/body; src_main_java_com_facebook_react_views_webview_ReactWebViewManager.java
R; pertains-to; [CN]/NetworkingModule/[MT]/constructMultipartBody(ExecutorToken,ReadableArray,String,int)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/BaseViewManager/[MT]/setTransform(T,ReadableArray)/body; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
R; pertains-to; [CN]/XReactInstanceManagerImpl/[MT]/setupReactContext(ReactApplicationContext)/body; src_main_java_com_facebook_react_XReactInstanceManagerImpl.java
R; pertains-to; [CN]/ReactViewPager/[CN]/PageChangeListener/[MT]/onPageScrolled(int,float,int)/body; src_main_java_com_facebook_react_views_viewpager_ReactViewPager.java
R; pertains-to; [CN]/NativeViewHierarchyOptimizer/[MT]/handleCreateView(ReactShadowNode,ThemedReactContext,ReactStylesDiffMap)/body; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyOptimizer.java
R; pertains-to; [CN]/DevServerHelper/[MT]/startPollingOnChangeEndpoint(OnServerContentChangeListener)/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/ReactDatabaseSupplier/[MT]/deleteInstance()/body; src_main_java_com_facebook_react_modules_storage_ReactDatabaseSupplier.java
R; pertains-to; [CN]/DevInternalSettings/[MT]/onSharedPreferenceChanged(SharedPreferences,String)/body; src_main_java_com_facebook_react_devsupport_DevInternalSettings.java
R; pertains-to; [CN]/ReactContext/[MT]/onHostDestroy()/body; src_main_java_com_facebook_react_bridge_ReactContext.java
R; pertains-to; [CN]/ReactScrollView/[MT]/onScrollChanged(int,int,int,int)/body; src_main_java_com_facebook_react_views_scroll_ReactScrollView.java
R; pertains-to; [CN]/ReactModalHostView/[MT]/onHostResume()/body; src_main_java_com_facebook_react_views_modal_ReactModalHostView.java
R; pertains-to; [CN]/I18nUtil/[MT]/allowRTL(Context,boolean)/body; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
R; pertains-to; [CN]/ReactViewManager/[MT]/setNativeBackground(ReactViewGroup,ReadableMap)/body; src_main_java_com_facebook_react_views_view_ReactViewManager.java
R; pertains-to; [CN]/ReactTextInputManager/[MT]/setInlineImageLeft(ReactEditText,String)/body; src_main_java_com_facebook_react_views_textinput_ReactTextInputManager.java
R; pertains-to; [CN]/InterpolationAnimatedNode/[MT]/update()/body; src_main_java_com_facebook_react_animated_InterpolationAnimatedNode.java
R; pertains-to; [CN]/BaseViewManager/[MT]/setScaleY(T,float)/body; src_main_java_com_facebook_react_uimanager_BaseViewManager.java
R; pertains-to; [CN]/Spacing/[MT]/reset()/body; src_main_java_com_facebook_csslayout_Spacing.java
R; pertains-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/UIManagerModuleConstants/[MT]/getConstants()/body; src_main_java_com_facebook_react_uimanager_UIManagerModuleConstants.java
R; pertains-to; [CN]/ReactDatabaseSupplier/[MT]/getInstance(Context)/body; src_main_java_com_facebook_react_modules_storage_ReactDatabaseSupplier.java
R; pertains-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float,int)/body; src_main_java_com_facebook_react_views_view_ReactViewGroup.java
R; pertains-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setJSBundleFile(String)/body; src_main_java_com_facebook_react_ReactInstanceManager.java
R; pertains-to; [CN]/ReactViewBackgroundDrawable/[MT]/draw(Canvas)/body; src_main_java_com_facebook_react_views_view_ReactViewBackgroundDrawable.java
R; pertains-to; [CN]/ReactDrawableHelper/[MT]/createDrawableFromJSDescription(Context,ReadableMap)/body; src_main_java_com_facebook_react_views_view_ReactDrawableHelper.java
R; pertains-to; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderRGB(int,float)/body; src_main_java_com_facebook_react_views_view_ReactViewBackgroundDrawable.java
R; pertains-to; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/parameters; src_main_java_com_facebook_react_modules_websocket_WebSocketModule.java
R; pertains-to; [CN]/JSPackagerWebSocketClient/[MT]/onFailure(IOException,Response)/body; src_main_java_com_facebook_react_devsupport_JSPackagerWebSocketClient.java
R; pertains-to; [CN]/ReactImageView/[MT]/setLoadingIndicatorSource(String)/body; src_main_java_com_facebook_react_views_image_ReactImageView.java
R; pertains-to; [CN]/ViewProps/[FE]/LAYOUT_ONLY_PROPS; src_main_java_com_facebook_react_uimanager_ViewProps.java
R; pertains-to; [CN]/ReactTextView/[MT]/setText(ReactTextUpdate)/body; src_main_java_com_facebook_react_views_text_ReactTextView.java
R; pertains-to; [CN]/WebSocketModule/[CS]/WebSocketModule(ReactApplicationContext)/body; src_main_java_com_facebook_react_modules_websocket_WebSocketModule.java
R; pertains-to; [CN]/LocationModule/[CN]/LocationOptions/[MT]/fromReactMap(ReadableMap)/body; src_main_java_com_facebook_react_modules_location_LocationModule.java
R; pertains-to; [CN]/I18nUtil/[MT]/isRTLForced(Context)/body; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
R; pertains-to; [CN]/ReactViewGroup/[MT]/setBorderRadius(float)/body; src_main_java_com_facebook_react_views_view_ReactViewGroup.java
R; pertains-to; [CN]/DevServerHelper/[MT]/stopPollingOnChangeEndpoint()/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/CSSStyle/[MT]/reset()/body; src_main_java_com_facebook_csslayout_CSSStyle.java
R; pertains-to; [CN]/SimpleSettableFuture/[MT]/get(long,TimeUnit)/body; src_main_java_com_facebook_react_common_futures_SimpleSettableFuture.java
R; pertains-to; [CN]/UIImplementation/[CS]/UIImplementation(ReactApplicationContext,ViewManagerRegistry)/body; src_main_java_com_facebook_react_uimanager_UIImplementation.java
R; pertains-to; [CN]/UnpackingJSBundleLoader/[CS]/UnpackingJSBundleLoader(Builder)/body; src_main_java_com_facebook_react_cxxbridge_UnpackingJSBundleLoader.java
R; pertains-to; [CN]/I18nUtil/[MT]/forceRTL(Context,boolean)/parameters; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
R; pertains-to; [CN]/TouchTargetHelper/[MT]/findTargetTagForTouch(float,float,ViewGroup)/body; src_main_java_com_facebook_react_uimanager_TouchTargetHelper.java
R; pertains-to; [CN]/ReactScrollView/[MT]/onTouchEvent(MotionEvent)/body; src_main_java_com_facebook_react_views_scroll_ReactScrollView.java
R; pertains-to; [CN]/ReactImageManager/[MT]/createViewInstance(ThemedReactContext)/body; src_main_java_com_facebook_react_views_image_ReactImageManager.java
R; pertains-to; [CN]/ReactContext/[MT]/startActivityForResult(Intent,int,Bundle)/body; src_main_java_com_facebook_react_bridge_ReactContext.java
R; pertains-to; [CN]/I18nUtil/[MT]/isRTL(Context)/body; src_main_java_com_facebook_react_modules_i18nmanager_I18nUtil.java
R; pertains-to; [CN]/DevSupportManagerImpl/[MT]/updateJSError(String,ReadableArray,int)/body; src_main_java_com_facebook_react_devsupport_DevSupportManagerImpl.java
R; pertains-to; [CN]/TouchEventCoalescingKeyHelper/[MT]/hasCoalescingKey(long)/body; src_main_java_com_facebook_react_uimanager_events_TouchEventCoalescingKeyHelper.java
R; pertains-to; [CN]/ReactEditText/[MT]/onAttachedToWindow()/body; src_main_java_com_facebook_react_views_textinput_ReactEditText.java
R; pertains-to; [CN]/MessageQueueThreadImpl/[MT]/createForMainThread(String,QueueThreadExceptionHandler)/body; src_main_java_com_facebook_react_bridge_queue_MessageQueueThreadImpl.java
R; pertains-to; [CN]/DevServerHelper/[MT]/enqueueOnChangeEndpointLongPolling()/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/ReactViewBackgroundDrawable/[MT]/updatePath()/body; src_main_java_com_facebook_react_views_view_ReactViewBackgroundDrawable.java
R; pertains-to; [CN]/UIImplementation/[MT]/createRootShadowNode()/body; src_main_java_com_facebook_react_uimanager_UIImplementation.java
R; pertains-to; [CN]/TouchTargetHelper/[MT]/getTouchTargetForView(View,float,float)/parameters; src_main_java_com_facebook_react_uimanager_TouchTargetHelper.java
R; pertains-to; [CN]/ReactModuleSpecProcessor/[MT]/getCodeBlockForReactModuleInfos(List<String>)/body; src_main_java_com_facebook_react_module_processing_ReactModuleSpecProcessor.java
R; pertains-to; [CN]/SimpleSettableFuture/[MT]/get()/body; src_main_java_com_facebook_react_common_futures_SimpleSettableFuture.java
R; pertains-to; [CN]/FrescoModule/[CS]/FrescoModule(ReactApplicationContext)/body; src_main_java_com_facebook_react_modules_fresco_FrescoModule.java
R; pertains-to; [CN]/BaseJavaModule/[MT]/getSyncHooks()/body; src_main_java_com_facebook_react_bridge_BaseJavaModule.java
R; pertains-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/setBundleAssetName(String)/body; src_main_java_com_facebook_react_ReactInstanceManager.java
R; pertains-to; [CN]/LocationModule/[MT]/startObserving(ReadableMap)/body; src_main_java_com_facebook_react_modules_location_LocationModule.java
R; pertains-to; [CN]/ImageResizeMode/[MT]/toScaleType(String)/body; src_main_java_com_facebook_react_views_image_ImageResizeMode.java
R; pertains-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/ProgressBarContainerView/[MT]/setStyle(String)/body; src_main_java_com_facebook_react_views_progressbar_ProgressBarContainerView.java
R; pertains-to; [CN]/NetworkingModule/[CS]/NetworkingModule(ReactApplicationContext,String,OkHttpClient,List<NetworkInterceptorCreator>)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/DevServerHelper/[MT]/getSourceMapUrl(String)/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/DevSupportManagerImpl/[MT]/showNewError(String,StackFrame[],int,ErrorType)/body; src_main_java_com_facebook_react_devsupport_DevSupportManagerImpl.java
R; pertains-to; [CN]/ReactToolbar/[MT]/setOverflowIconSource(ReadableMap)/body; src_main_java_com_facebook_react_views_toolbar_ReactToolbar.java
R; pertains-to; [CN]/StatusBarModule/[MT]/setTranslucent(boolean,Promise)/body; src_main_java_com_facebook_react_modules_statusbar_StatusBarModule.java
R; pertains-to; [CN]/ReactModalHostView/[MT]/onHostDestroy()/body; src_main_java_com_facebook_react_views_modal_ReactModalHostView.java
R; pertains-to; [CN]/JavaScriptModuleRegistration/[CS]/JavaScriptModuleRegistration(Class<? extends JavaScriptModule>)/body; src_main_java_com_facebook_react_bridge_JavaScriptModuleRegistration.java
R; pertains-to; [CN]/TouchTargetHelper/[MT]/isTransformedTouchPointInView(float,float,ViewGroup,View,PointF)/parameters; src_main_java_com_facebook_react_uimanager_TouchTargetHelper.java
R; pertains-to; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/addView(View,int)/body; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollView.java
R; pertains-to; [CN]/ReactToolbar/[MT]/getDrawableByName(String)/body; src_main_java_com_facebook_react_views_toolbar_ReactToolbar.java
R; pertains-to; [CN]/UIViewOperationQueue/[CN]/DispatchUIFrameCallback/[MT]/doFrameGuarded(long)/body; src_main_java_com_facebook_react_uimanager_UIViewOperationQueue.java
R; pertains-to; [CN]/XReactInstanceManagerImpl/[MT]/createAllViewManagers(ReactApplicationContext)/body; src_main_java_com_facebook_react_XReactInstanceManagerImpl.java
R; pertains-to; [CN]/NetworkingModule/[MT]/onCatalystInstanceDestroy()/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/ReactRootView/[MT]/attachToReactInstanceManager()/body; src_main_java_com_facebook_react_ReactRootView.java
R; pertains-to; [CN]/UIViewOperationQueue/[MT]/dispatchViewUpdates(int)/body; src_main_java_com_facebook_react_uimanager_UIViewOperationQueue.java
R; pertains-to; [CN]/ReactRootView/[MT]/onAttachedToWindow()/body; src_main_java_com_facebook_react_ReactRootView.java
R; pertains-to; [CN]/Timing/[MT]/deleteTimer(ExecutorToken,int)/body; src_main_java_com_facebook_react_modules_core_Timing.java
R; pertains-to; [CN]/RecyclerViewBackedScrollView/[CN]/ReactListAdapter/[MT]/removeViewAt(int)/body; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollView.java
R; pertains-to; [CN]/I18nManagerModule/[MT]/allowRTL(boolean)/body; src_main_java_com_facebook_react_modules_i18nmanager_I18nManagerModule.java
R; pertains-to; [CN]/ReactModuleSpecProcessor/[MT]/process(Set<? extends TypeElement>,RoundEnvironment)/body; src_main_java_com_facebook_react_module_processing_ReactModuleSpecProcessor.java
R; pertains-to; [CN]/ReactInstanceManager/[MT]/createReactContextInBackground()/body; src_main_java_com_facebook_react_ReactInstanceManager.java
R; pertains-to; [CN]/InterpolationAnimatedNode/[CS]/InterpolationAnimatedNode(ReadableMap)/body; src_main_java_com_facebook_react_animated_InterpolationAnimatedNode.java
R; pertains-to; [CN]/StatusBarModule/[MT]/setColor(int,boolean,Promise)/body; src_main_java_com_facebook_react_modules_statusbar_StatusBarModule.java
R; pertains-to; [CN]/ReactShadowNode/[MT]/removeAllChildren()/body; src_main_java_com_facebook_react_uimanager_ReactShadowNode.java
R; pertains-to; [CN]/ReactShadowNode/[MT]/updateNativeChildrenCountInParent(int)/body; src_main_java_com_facebook_react_uimanager_ReactShadowNode.java
R; pertains-to; [CN]/ReactViewBackgroundDrawable/[MT]/setBorderAlpha(int,float)/body; src_main_java_com_facebook_react_views_view_ReactViewBackgroundDrawable.java
R; pertains-to; [CN]/Timing/[CN]/TimerFrameCallback/[MT]/doFrame(long)/body; src_main_java_com_facebook_react_modules_core_Timing.java
R; pertains-to; [CN]/JSCHeapCapture/[MT]/registerHeapCapture(JSCHeapCapture)/body; src_main_java_com_facebook_react_devsupport_JSCHeapCapture.java
R; pertains-to; [CN]/ProgressBarContainerView/[MT]/apply()/body; src_main_java_com_facebook_react_views_progressbar_ProgressBarContainerView.java
R; pertains-to; [CN]/NativeViewHierarchyManager/[MT]/dropView(View)/body; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyManager.java
R; pertains-to; [CN]/StatusBarModule/[MT]/setHidden(boolean,Promise)/body; src_main_java_com_facebook_react_modules_statusbar_StatusBarModule.java
R; pertains-to; [CN]/Timing/[MT]/setChoreographerCallback()/body; src_main_java_com_facebook_react_modules_core_Timing.java
R; pertains-to; [CN]/ImageLoadEvent/[MT]/dispatch(RCTEventEmitter)/body; src_main_java_com_facebook_react_views_image_ImageLoadEvent.java
R; pertains-to; [CN]/AsyncStorageModule/[MT]/multiGet(ReadableArray,Callback)/body; src_main_java_com_facebook_react_modules_storage_AsyncStorageModule.java
R; pertains-to; [CN]/EventDispatcher/[CN]/ScheduleDispatchFrameCallback/[MT]/doFrame(long)/body; src_main_java_com_facebook_react_uimanager_events_EventDispatcher.java
R; pertains-to; [CN]/ReactScrollViewCommandHelper/[MT]/receiveCommand(ScrollCommandHandler<T>,T,int,ReadableArray)/body; src_main_java_com_facebook_react_views_scroll_ReactScrollViewCommandHelper.java
R; pertains-to; [CN]/NetworkingModule/[MT]/getEventEmitter(ExecutorToken)/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/ReactRootView/[MT]/startReactApplication(ReactInstanceManager,String,Bundle)/body; src_main_java_com_facebook_react_ReactRootView.java
R; pertains-to; [CN]/ReactImageView/[MT]/setSource(ReadableArray)/body; src_main_java_com_facebook_react_views_image_ReactImageView.java
R; pertains-to; [CN]/ModuleSpec/[MT]/simple(Class<? extends NativeModule>)/body; src_main_java_com_facebook_react_bridge_ModuleSpec.java
R; pertains-to; [CN]/Event/[MT]/dispose()/body; src_main_java_com_facebook_react_uimanager_events_Event.java
R; pertains-to; [CN]/NativeViewHierarchyManager/[MT]/removeRootView(int)/body; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyManager.java
R; pertains-to; [CN]/RecyclerViewBackedScrollViewManager/[MT]/scrollTo(RecyclerViewBackedScrollView,ReactScrollViewCommandHelper.ScrollToCommandData)/body; src_main_java_com_facebook_react_views_recyclerview_RecyclerViewBackedScrollViewManager.java
R; pertains-to; [CN]/NetworkingModule/[MT]/initialize()/body; src_main_java_com_facebook_react_modules_network_NetworkingModule.java
R; pertains-to; [CN]/ReactContext/[MT]/hasCurrentActivity()/body; src_main_java_com_facebook_react_bridge_ReactContext.java
R; pertains-to; [CN]/Timing/[MT]/clearChoreographerCallback()/body; src_main_java_com_facebook_react_modules_core_Timing.java
R; pertains-to; [CN]/ReactTextView/[MT]/onAttachedToWindow()/body; src_main_java_com_facebook_react_views_text_ReactTextView.java
R; pertains-to; [CN]/UnpackingJSBundleLoader/[CN]/Builder/[CS]/Builder()/body; src_main_java_com_facebook_react_cxxbridge_UnpackingJSBundleLoader.java
R; pertains-to; [CN]/Timing/[MT]/createTimer(ExecutorToken,int,int,double,boolean)/body; src_main_java_com_facebook_react_modules_core_Timing.java
R; pertains-to; [CN]/ReactScrollView/[CS]/ReactScrollView(ReactContext,FpsListener)/body; src_main_java_com_facebook_react_views_scroll_ReactScrollView.java
R; pertains-to; [CN]/CoreModulesPackage/[MT]/createJSModules()/body; src_main_java_com_facebook_react_CoreModulesPackage.java
R; pertains-to; [CN]/DevSupportManagerImpl/[MT]/showDevOptionsDialog()/body; src_main_java_com_facebook_react_devsupport_DevSupportManagerImpl.java
R; pertains-to; [CN]/WebSocketModule/[MT]/connect(String,ReadableArray,ReadableMap,int)/body; src_main_java_com_facebook_react_modules_websocket_WebSocketModule.java
R; pertains-to; [CN]/NativeViewHierarchyManager/[MT]/manageChildren(int,int[],ViewAtIndex[],int[])/body; src_main_java_com_facebook_react_uimanager_NativeViewHierarchyManager.java
R; pertains-to; [CN]/TouchTargetHelper/[MT]/findTouchTargetView(float[],ViewGroup)/body; src_main_java_com_facebook_react_uimanager_TouchTargetHelper.java
R; pertains-to; [CN]/MessageQueueThreadImpl/[MT]/startNewBackgroundThread(String,QueueThreadExceptionHandler)/body; src_main_java_com_facebook_react_bridge_queue_MessageQueueThreadImpl.java
R; pertains-to; [CN]/ReactInstanceManager/[CN]/Builder/[MT]/build()/body; src_main_java_com_facebook_react_ReactInstanceManager.java
R; pertains-to; [CN]/DevServerHelper/[MT]/downloadBundleFromURL(BundleDownloadCallback,String,File)/body; src_main_java_com_facebook_react_devsupport_DevServerHelper.java
R; pertains-to; [CN]/FrescoModule/[MT]/initialize()/body; src_main_java_com_facebook_react_modules_fresco_FrescoModule.java
R; pertains-to; [CN]/ReactRootView/[MT]/onMeasure(int,int)/body; src_main_java_com_facebook_react_ReactRootView.java
R; pertains-to; [CN]/EventDispatcher/[MT]/dispatchEvent(Event)/body; src_main_java_com_facebook_react_uimanager_events_EventDispatcher.java
R; pertains-to; [CN]/ReactImageView/[MT]/maybeUpdateView()/body; src_main_java_com_facebook_react_views_image_ReactImageView.java
R; pertains-to; [CN]/ReactTextShadowNode/[MT]/buildSpannedFromTextCSSNode(ReactTextShadowNode,SpannableStringBuilder,List<SetSpanOperation>)/body; src_main_java_com_facebook_react_views_text_ReactTextShadowNode.java
