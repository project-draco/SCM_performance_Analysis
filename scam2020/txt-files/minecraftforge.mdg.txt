E; class; [MT]/download_file/body
E; class; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
E; class; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body
E; class; [CN]/CommandTreeBase/[MT]/isUsernameIndex(String[],int)/body
E; class; [CN]/PotionBrewEvent/[MT]/getLength()/body
E; class; [CN]/ExplosionEvent/[FE]/explosion
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
E; class; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
E; class; package
E; class; package
E; class; package
E; class; package
E; class; package
E; class; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body
E; class; [CN]/PotionBrewEvent/[FE]/stacks
E; class; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
E; class; [CN]/RelaunchClassLoader/[FE]/sources
E; class; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
E; class; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
E; class; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
E; class; [CN]/Downloader/[MT]/makeDialog()/body
E; class; [CN]/FMLCommonHandler/[MT]/handleWorldDataLoad(SaveHandler,WorldInfo,NBTTagCompound)/body
E; class; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
E; class; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
E; class; [CN]/BaseMod/[MT]/doTickInGUI(TickType,boolean,Object,Object)/body
E; class; [CN]/GameData/[FE]/clientValidationLatch
E; class; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
E; class; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body
E; class; [CN]/GameData/[FE]/difference
E; class; [CN]/ItemLayerModel/[MT]/getQuadsForSprite(int,TextureAtlasSprite,VertexFormat,TRSRTransformation)/body
E; class; [CN]/ModClassLoader/[MT]/getParentSources()/body
E; class; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/parameters
E; class; [CN]/GameData/[MT]/releaseGate(boolean)/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
E; class; [CN]/ConfigCategory/[MT]/setComment(String)/body
E; class; [CN]/GameData/[FE]/serverValidationLatch
E; class; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
E; class; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
E; class; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
E; class; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body
E; class; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
E; class; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
E; class; [CN]/PotionBrewEvent/[CN]/Post/extend
E; class; [CN]/GameRegistry/[MT]/register(K,ResourceLocation)/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
E; class; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
E; class; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
E; class; [CN]/FakePlayer/extend
E; class; [MT]/post_decompile/parameters
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
E; class; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
E; class; [CN]/WorldRendererConsumer/[FE]/offset
E; class; [CN]/FOVUpdateEvent/[FE]/entity
E; class; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
E; class; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
E; class; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
E; class; [CN]/GameData/[FE]/MIN_ITEM_ID
E; class; [CN]/GameData/[FE]/shouldContinue
E; class; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/parameters
E; class; [CN]/ForgeChunkManager/[MT]/captureConfig(File)/body
E; class; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
E; class; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
E; class; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
E; class; [CN]/ModLoaderConnectionHandler/[MT]/connectionOpened(NetHandler,String,int,NetworkManager)/body
E; class; [CN]/GameData/[FE]/idMap
E; class; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
E; class; [CN]/GuiScrollingList/[MT]/overlayBackground(int,int,int,int)/body
E; class; [CN]/GameData/[MT]/registerBlock(Block,String,int)/body
E; class; [CN]/PotionBrewEvent/extend
E; class; [CN]/FOVUpdateEvent/[FE]/newfov
E; class; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
E; class; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
E; class; [CN]/GameData/[MT]/newItemAdded(Item)/body
E; class; [CN]/PotionBrewEvent/[CN]/Pre/extend
E; class; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
E; class; [MT]/setup_fml/parameters
E; class; [CN]/LivingHealEvent/[FE]/amount
E; class; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body
E; class; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
E; class; [CN]/ExplosionEvent/[FE]/world
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body
E; class; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
E; class; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
E; class; [CN]/AccessTransformer/[MT]/readMapFile(String)/body
E; class; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
E; class; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
E; class; [CN]/Loader/[FE]/mccversion
E; class; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
E; class; [MT]/zip_start/body
E; class; [CN]/ModClassLoader/[FE]/mainClassLoader
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
E; class; [CN]/AccessTransformer/[CS]/AccessTransformer()/body
E; class; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
E; class; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
E; class; [MT]/file_backup/parameters
E; class; [CN]/FMLCommonHandler/[MT]/tickStart(TickType,Object)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
E; class; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
E; class; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
E; class; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
E; class; [CN]/DimensionManager/[MT]/createProviderFor(int)/body
E; class; [MT]/extract_fml_obfed/parameters
E; class; [CN]/PotionBrewedEvent/extend
E; class; [CN]/GameRegistry/[MT]/register(K)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
E; class; [CN]/FMLRelaunchLog/[CN]/ConsoleLogWrapper/[MT]/publish(LogRecord)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
E; class; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
E; class; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
E; class; [CN]/ExplosionEvent/[CN]/Detonate/extend
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
E; class; [CN]/FMLClientHandler/[MT]/registerTextureOverrides(RenderEngine)/body
E; class; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
E; class; [CN]/GameData/[MT]/initializeServerGate(int)/body
E; class; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
E; class; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
E; class; [CN]/FluidStack/[MT]/copy()/body
E; class; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body
E; class; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body
E; class; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
E; class; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
E; class; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
E; class; [CN]/ModTextureStatic/[MT]/func_76845_a(RenderEngine)/parameters
E; class; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
E; class; [CN]/ModelLoader/[CN]/UVLock/[MT]/apply(IModelPart)/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
E; class; [CN]/ExplosionEvent/extend
E; class; [CN]/FMLModContainer/[MT]/getVersion()/body
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; other
E; class; [CN]/GameData/[FE]/isSaveValid
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
E; class; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
E; class; [MT]/get_merged_info/parameters
E; class; [MT]/download_file/parameters
E; class; [CN]/NetworkModHandler/[CS]/NetworkModHandler(ModContainer,NetworkMod)/body
E; class; [CN]/GameRegistry/[MT]/getRegistry().conflicted0/body
E; class; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body
E; class; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body
E; class; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
E; class; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body
E; class; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
E; class; [CN]/PlaySoundAtEntityEvent/[FE]/newVolume
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
E; class; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
E; class; [CN]/MCPMerger/[MT]/processMethods(ClassNode,ClassNode,ClassInfo)/body
E; class; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
E; class; [CN]/Loader/[MT]/initializeMods()/body
E; class; [CN]/Loader/[MT]/initializeMods()/body
E; class; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
E; class; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
E; class; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body
E; class; [CN]/FMLLaunchHandler/[MT]/setupHome()/body
E; class; [CN]/Loader/[MT]/attemptDirLoad(File)/body
E; class; [CN]/GameData/[MT]/register(Object,String,int)/body
E; class; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
E; class; [CN]/FOVUpdateEvent/[FE]/fov
E; class; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
E; class; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
E; class; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
E; class; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body
E; class; [CN]/ModLoaderModContainer/[MT]/getPreDepends()/body
E; class; [CN]/ItemData/[MT]/toString()/body
E; class; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int,int,int)/body
E; class; [MT]/finish_setup_fml/parameters
E; class; [CN]/ModClassLoader/[MT]/loadClass(String)/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
E; class; [CN]/Loader/[MT]/preModInit()/body
E; class; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body
E; class; [CN]/FluidTank/[MT]/drain(int,boolean)/body
E; class; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body
E; class; [CN]/DungeonLoot/[MT]/equals(ItemStack,int,int)/body
E; class; [CN]/FluidStack/[MT]/hashCode()/body
E; class; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
E; class; [CN]/GameRegistry/[MT]/onPlayerLogout(EntityPlayer)/body
E; class; [CN]/UnpackedBakedQuad/[CN]/Builder/[MT]/build()/body
E; class; [CN]/ExplosionEvent/[CN]/Start/extend
E; class; [CN]/DimensionManager/[MT]/init()/body
E; class; [CN]/ModListRequestPacket/[MT]/consumePacket(byte[])/body
E; class; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
E; class; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
E; class; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly
E; class; [MT]/main/body
E; class; [MT]/main/body
E; class; [MT]/main/body
E; class; [MT]/main/body
E; class; [MT]/main/body
E; class; [MT]/main/body
E; class; [MT]/main/body
E; class; [MT]/post_decompile/body
E; class; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
E; class; [CN]/Loader/[MT]/attemptFileLoad(File)/body
E; class; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
E; class; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body
E; class; [CN]/FMLInterModComms/[CN]/IMCEvent/[MT]/getMessages()/body
E; class; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
E; class; [CN]/FOVUpdateEvent/extend
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/loadDummied(Set<ResourceLocation>)/body
E; class; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/parameters
E; class; [CN]/ObjectHolderRef/[MT]/getRegistryForType(Field)/body
E; class; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body
E; class; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,ResourceLocation,boolean)/body
E; class; [CN]/TextureFXManager/[MT]/registerTextureOverrides(RenderEngine)/body
E; class; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
E; class; [CN]/ForgeChunkManager/[MT]/loadConfiguration()/body
E; class; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body
E; class; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body
E; class; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body
E; class; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body
E; class; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters
E; class; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER
E; class; [CN]/GuiSlotModList/[MT]/getContentHeight()/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body
E; class; [CN]/LanguageRegistry/[MT]/reloadLanguageTable()/body
E; class; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
E; class; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body
E; class; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body
E; class; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body
E; class; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body
E; class; [CN]/RelaunchClassLoader/[MT]/getSources()/body
E; class; [CN]/GuiModList/[MT]/func_572_a(GuiButton)/body
E; class; [CN]/LiquidStack/[MT]/equals(Object)/body
E; class; [CN]/PlayerWakeUpEvent/[FE]/updateWorld
E; class; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
E; class; [CN]/GuiModList/[MT]/func_6448_a()/body
E; class; [MT]/make_changelog/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
E; class; [CN]/RelaunchLibraryManager/[MT]/downloadFile(File,String,String,String)/body
E; class; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body
E; class; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body
E; class; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
E; class; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body
E; class; [MT]/apply_patches/body
E; class; [CN]/ItemLayerModel/[MT]/addSideQuad(ImmutableList.Builder<BakedQuad>,BitSet,VertexFormat,TRSRTransformation,EnumFacing,int,TextureAtlasSprite,int,int,int,int)/parameters
E; class; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body
E; class; [CN]/ModTextureAnimation/[CS]/ModTextureAnimation(int,int,String,BufferedImage,int)/body
E; class; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body
E; class; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
E; class; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
E; class; [CN]/FMLTweaker/[MT]/getLaunchArguments()/body
E; class; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
E; class; [CN]/ObjectHolderRef/[MT]/apply()/body
E; class; [CN]/ObjectHolderRef/[MT]/apply()/body
E; class; [CN]/GameData/[FE]/MAX_ITEM_ID
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
E; class; [CN]/BaseModTicker/[MT]/sendTick(EnumSet<TickType>,boolean,Object)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
E; class; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
E; class; [CN]/ModLoaderModContainer/[MT]/configureMod()/body
E; class; [CN]/GuiControlsScrollPanel/[MT]/drawScreen(int,int,float)/body
E; class; [CN]/GuiControlsScrollPanel/[MT]/drawScreen(int,int,float)/body
E; class; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
E; class; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
E; class; [CN]/GameData/[MT]/registerItem(Item,String,int)/body
E; class; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
E; class; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body
E; class; [MT]/pre_decompile/parameters
E; class; [CN]/Loader/[MT]/load()/body
E; class; [CN]/BiomeManager/[MT]/addBiome(BiomeType,BiomeEntry)/body
E; class; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
E; class; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body
E; class; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body
E; class; [CN]/ModLoaderModContainer/[MT]/toString()/body
E; class; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/getTrades(int)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,ResourceLocation,I)/body
E; class; [CN]/DimensionManager/[MT]/getNextFreeDimId()/body
E; class; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
E; class; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
E; class; [CN]/BiomeManager/[MT]/setupBiomes()/body
E; class; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
E; class; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body
E; class; [CN]/RotationHelper/[MT]/rotateVanillaBlock(Block,World,int,int,int,ForgeDirection)/body
E; class; [CN]/FluidStack/[MT]/getFluid()/body
E; class; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body
E; class; [CN]/RenderPlayerEvent/[CN]/Specials/[CS]/Specials(EntityPlayer,RenderPlayer,float)/body
E; class; [CN]/Configuration/[MT]/save()/body
E; class; [CN]/Configuration/[MT]/save()/body
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body
E; class; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
E; class; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
E; class; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
E; class; [CN]/ModelLoader/[MT]/loadModel(ResourceLocation)/body
E; class; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
E; class; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body
E; class; [CN]/TechneModel/[MT]/bindTexture()/body
E; class; [CN]/TechneModel/[MT]/renderPart(String)/body
E; class; [CN]/CommandTreeBase/[MT]/getTabCompletionOptions(MinecraftServer,ICommandSender,String[],BlockPos)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
E; class; [CN]/FMLClientHandler/[MT]/logMissingTextureErrors()/body
E; class; [CN]/PacketModList/[MT]/toString(boolean)/body
E; class; [CN]/GuiModItemsMissing/[MT]/func_73863_a(int,int,float)/body
E; class; [CN]/ModListHelper/[MT]/parseListFile(String)/body
E; class; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
E; class; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters
E; class; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
E; class; [MT]/apply_patches/parameters
E; class; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters
E; class; [CN]/GameData/[FE]/MIN_BLOCK_ID
E; class; [CN]/FMLTweaker/[MT]/acceptOptions(List<String>,File,File,String)/body
E; class; [CN]/ModLoaderConnectionHandler/[MT]/connectionClosed(NetworkManager)/body
E; class; [CN]/ZipperUtil/[MT]/backupWorld(String,String)/body
E; class; [CN]/OreDictionary/[MT]/getOres(String,boolean)/body
E; class; [CN]/GuiModItemsMissing/[MT]/func_73866_w_()/body
E; class; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
E; class; [CN]/ForgeModContainer/[MT]/onConfigChanged(OnConfigChangedEvent)/body
E; class; [MT]/read_mc_versions/body
E; class; [CN]/ClassPatchManager/[MT]/readPatch(JarEntry,JarInputStream)/body
E; class; [CN]/mod_MinecraftForge/extend
E; class; [CN]/GameData/[FE]/MAX_BIOME_ID
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/markDummy(ResourceLocation,Integer,I)/body
E; class; [CN]/LivingHealEvent/extend
E; class; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body
E; class; [CN]/RelaunchClassLoader/[MT]/registerTransformer(String)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body
E; class; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body
E; class; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body
E; class; [CN]/DispenseFluidContainer/[MT]/dumpContainer(IBlockSource,ItemStack)/body
E; class; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body
E; class; [CN]/ModLoaderModContainer/[MT]/getPostDepends()/body
E; class; [CN]/FMLClientHandler/[MT]/finishMinecraftLoading()/body
E; class; [MT]/setup_fml/body
E; class; [MT]/setup_fml/body
E; class; [CN]/DimensionManager/[MT]/getIDs()/body
E; class; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body
E; class; [CN]/ModTextureStatic/[MT]/update()/body
E; class; [CN]/CoreModManager/[MT]/handleCascadingTweak(File,JarFile,String,LaunchClassLoader,Integer)/body
E; class; [CN]/LiquidStack/[MT]/isLiquidEqual(LiquidStack)/body
E; class; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body
E; class; [CN]/CoreModManager/[MT]/loadCoreMod(LaunchClassLoader,String,File)/body
E; class; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters
E; class; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body
E; class; [CN]/UsernameCache/[MT]/load()/body
E; class; [CN]/ItemLayerModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
E; class; [CN]/BakedFluid/[CS]/BakedFluid(Optional<TRSRTransformation>,ImmutableMap<TransformType,TRSRTransformation>,VertexFormat,int,TextureAtlasSprite,TextureAtlasSprite,boolean,boolean,int[],int)/body
E; class; [CN]/DungeonLoot/[MT]/equals(ItemStack)/body
E; class; [MT]/extract_fml_obfed/body
E; class; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body
E; class; [CN]/Loader/[MT]/modInit()/body
E; class; [CN]/PersistentRegistryManager/[MT]/loadPersistentDataToStagingRegistry(boolean,Map<ResourceLocation,Map<ResourceLocation,Integer[]>>,LinkedHashMap<ResourceLocation,Map<ResourceLocation,Integer>>,Map.Entry<ResourceLocation,GameDataSnapshot.Entry>,Class<T>)/body
E; class; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters
E; class; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body
E; class; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body
E; class; [CN]/ModTextureStatic/[CS]/ModTextureStatic(int,int,String,BufferedImage)/body
E; class; [CN]/ModAccessTransformer/[MT]/addJar(JarFile)/body
E; class; [CN]/ModLoaderHelper/[MT]/updateGUITicks(BaseMod,boolean,boolean)/body
E; class; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body
E; class; [MT]/fml_main/body
E; class; [CN]/InjectedModContainer/[CS]/InjectedModContainer(ModContainer,File)/body
E; class; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body
E; class; [CN]/PacketModList/[MT]/readData(DataInputStream)/body
E; class; [CN]/FMLClientHandler/[MT]/launchIntegratedServerCallback(String,String)/body
E; class; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted1/body
E; class; [CN]/ZipperUtil/[MT]/backupWorld()/body
E; class; [CN]/ModTextureStatic/[MT]/func_76846_a()/body
E; class; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
E; class; [CN]/Loader/[MT]/attemptFileLoad(File,SourceType)/body
E; class; [MT]/getBuildInfo/parameters
E; class; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body
E; class; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body
E; class; [CN]/Configuration/[MT]/load()/body
E; class; [CN]/Configuration/[MT]/load()/body
E; class; [CN]/PacketHandlerClient/[MT]/onPacketData(NetworkManager,String,byte[])/body
E; class; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body
E; class; [CN]/FMLEmbeddingRelauncher/[MT]/setupHome()/body
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/getMethodMap(String)/body
E; class; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
E; class; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body
E; class; [CN]/SplashProgress/[MT]/finish()/body
E; class; [CN]/ForgeVersion/[MT]/getStatus()/body
E; class; [CN]/FakePlayerFactory/[MT]/getMinecraft(World)/body
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/mergeSuperMaps(String,String,String[])/body
E; class; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body
E; class; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body
E; class; [CN]/GuiModList/[MT]/selectModIndex(int)/body
E; class; [CN]/DimensionManager/[MT]/getWorlds()/body
E; class; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body
E; class; [CN]/ModListHelper/[MT]/tryAddFile(String,File,String)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
E; class; [CN]/BiomeDictionary/[MT]/makeBestGuess(BiomeGenBase)/body
E; class; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/parseField(String[])/body
E; class; [CN]/GameRegistry/[MT]/onPlayerLogin(EntityPlayer)/body
E; class; [CN]/ModelLoader/[MT]/setupModelRegistry()/body
E; class; [CN]/FMLConfigGuiFactory/[MT]/getHandlerFor(RuntimeOptionCategoryElement)/body
E; class; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,String,boolean)/body
E; class; [CN]/Loader/[MT]/serverStopped()/body
E; class; [CN]/FMLClientHandler/[MT]/onInitializationComplete()/body
E; class; [CN]/DimensionManager/[MT]/initDimension(int)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/getRaw(String)/body
E; class; [CN]/DeobfuscationTransformer/[MT]/unmapClassName(String)/body
E; class; [CN]/ForgeVersion/[MT]/getTarget()/body
E; class; [MT]/file_backup/body
E; class; [CN]/Downloader/[MT]/requestClose(String)/body
E; class; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body
E; class; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body
E; class; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters
E; class; [CN]/GameData/[FE]/MAX_POTION_ID
E; class; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body
E; class; [CN]/RotationHelper/[MT]/getValidVanillaBlockRotations(Block)/body
E; class; [CN]/MultiModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
E; class; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings
E; class; [CN]/FMLModContainer/[MT]/parseSimpleFieldAnnotation(SetMultimap<String,ASMData>,String,Function<ModContainer,Object>)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,ResourceLocation,I)/body
E; class; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
E; class; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body
E; class; [CN]/OBJBakedModel/[MT]/getQuads(IBlockState,EnumFacing,long)/body
E; class; [CN]/FluidTank/[MT]/fill(FluidStack,boolean)/body
E; class; [CN]/FMLModContainer/[MT]/getSortingRules()/body
E; class; [CN]/ForgeVersion/[MT]/startVersionCheck()/body
E; class; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/value
E; class; [CN]/EntityRegistry/[MT]/validateAndClaimId(int)/body
E; class; [CN]/Loader/[MT]/postModInit()/body
E; class; [MT]/build_forge_dev/body
E; class; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body
E; class; [CN]/FMLMissingMappingsEvent/[MT]/applyModContainer(ModContainer)/body
E; class; [CN]/MCPMerger/[MT]/readMapFile(File)/body
E; class; [MT]/download_minecraft/body
E; class; [MT]/load_mc_version/parameters
E; class; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/toBytes(ByteBuf)/body
E; class; [CN]/PlayerWakeUpEvent/[FE]/setSpawn
E; class; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body
E; class; [CN]/DirectoryDiscoverer/[MT]/exploreFileSystem(String,File,List<ModContainer>,ModCandidate,MetadataCollection)/body
E; class; [CN]/OreDictionary/[MT]/getOres(String,boolean)/parameters
E; class; [CN]/GameData/[MT]/set(GameData)/body
E; class; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted0/body
E; class; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/addAlias(String,String)/body
E; class; [CN]/OreDictionary/[MT]/itemMatches(ItemStack,ItemStack,boolean)/body
E; class; [CN]/BiomeDictionary/[MT]/registerBiomeType(BiomeGenBase,Type)/body
E; class; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/addTrade(int,ITradeList)/body
E; class; [CN]/ModLoader/[MT]/sendPacket(Packet)/body
E; class; [CN]/FMLConfigGuiFactory/[MT]/runtimeGuiCategories()/body
E; class; [CN]/ModTextureStatic/[MT]/func_76846_a()/parameters
E; class; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend
E; class; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/sender
E; class; [CN]/ModelLoader/[MT]/registerVariant(ModelBlockDefinition,ModelResourceLocation)/body
E; class; [CN]/AttachCapabilitiesEvent/[CN]/World/[CS]/World(net.minecraft.world.World)/body
E; class; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
E; class; [CN]/GameData/[MT]/isModIgnoredForIdValidation(String)/body
E; class; [CN]/ForgeChunkManager/[MT]/fetchDormantChunk(long,World)/body
E; class; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body
E; class; [CN]/NetworkDispatcher/[MT]/handleServerSideCustomPacket(C17PacketCustomPayload,ChannelHandlerContext)/body
E; class; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters
E; class; [CN]/EntityRegistry/[CS]/EntityRegistry()/body
E; class; [CN]/NetworkDispatcher/[MT]/channelRead0(ChannelHandlerContext,Packet)/body
E; class; [CN]/GameData/[FE]/MIN_POTION_ID
E; class; [CN]/FMLTweaker/[MT]/injectIntoClassLoader(LaunchClassLoader)/body
E; class; [CN]/Loader/[MT]/loadMods()/body
E; class; [CN]/ForgeChunkManager/[MT]/saveWorld(World)/body
E; class; [CN]/AttachCapabilitiesEvent/[CN]/World/extend
E; class; [CN]/RelaunchClassLoader/[MT]/runTransformers(String,String,byte[])/body
E; class; [CN]/LiquidStack/[MT]/hashCode()/body
E; class; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body
E; class; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body
E; class; [CN]/LanguageRegistry/[MT]/getStringLocalization(String)/body
E; class; [CN]/FMLMissingMappingsEvent/[MT]/get()/body
E; class; [CN]/MCPMerger/[CN]/MethodWrapper/[MT]/equals(Object)/body
E; class; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/body
E; class; [CN]/FluidRegistry/[MT]/getFluidID(Fluid)/body
E; class; [CN]/GameData/[FE]/MAX_BLOCK_ID
E; class; [CN]/CoreModManager/[MT]/handleLaunch(File,LaunchClassLoader,FMLTweaker)/body
E; class; [CN]/OreDictionary/[MT]/doesOreNameExist(String)/parameters
E; class; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
E; class; [CN]/BiomeManager/[MT]/removeBiome(BiomeType,BiomeEntry)/body
E; class; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body
E; class; [CN]/DungeonLoot/[MT]/generateStack(Random)/body
E; class; [CN]/ModTextureStatic/[MT]/toString()/body
E; class; [CN]/NetworkDispatcher/[MT]/completeHandshake(Side)/body
E; class; [CN]/ShapedOreRecipe/[CS]/ShapedOreRecipe(ItemStack,Object)/body
E; class; [CN]/CommandTreeBase/[MT]/getSubCommands()/body
E; class; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/body
E; class; [MT]/decompile_minecraft/body
E; class; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body
E; class; [CN]/FMLInterModComms/[MT]/sendMessage(String,String,String)/body
E; class; [CN]/RenderPlayerEvent/[CN]/SetArmorModel/[CS]/SetArmorModel(EntityPlayer,RenderPlayer,int,float,ItemStack)/body
E; class; [CN]/FMLModContainer/[MT]/setMetadata(ModMetadata)/body
E; class; [CN]/GameData/[MT]/registerItem(Item,String)/body
E; class; [MT]/download_mcp/parameters
E; class; [CN]/GameRegistry/[MT]/onPlayerRespawn(EntityPlayer)/body
E; class; [MT]/fml_main/parameters
E; class; [CN]/FMLServerHandler/[MT]/queryUser(StartupQuery)/body
E; class; [CN]/ModelLoader/[MT]/loadItemModels()/body
E; class; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body
E; class; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body
E; class; [CN]/Downloader/[MT]/makeHeadless()/body
E; class; [CN]/Property/[MT]/setName(String)/body
E; class; [CN]/DispenseFluidContainer/[MT]/fillContainer(IBlockSource,ItemStack)/body
E; class; [CN]/LoadController/[MT]/buildModList(FMLLoadEvent)/body
E; class; [CN]/DefaultArtifactVersion/[MT]/getVersionString()/body
E; class; [CN]/PlaySoundAtEntityEvent/[FE]/newPitch
E; class; [CN]/GameData/[FE]/MIN_BIOME_ID
E; class; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int)/body
E; class; [CN]/ModelLoader/[CN]/WeightedRandomModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
E; class; [CN]/NetworkDispatcher/[MT]/handleClientSideCustomPacket(S3FPacketCustomPayload,ChannelHandlerContext)/body
E; class; [CN]/FMLNetworkHandler/[MT]/handleClientConnection(NetLoginHandler,MinecraftServer,SocketAddress,String)/body
E; class; [CN]/FluidRegistry/[MT]/getFluidID(String)/body
E; class; [CN]/FMLModContainer/[MT]/getMetadata()/body
E; class; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/fromBytes(ByteBuf)/body
E; class; [CN]/GameRegistry/[MT]/getRegistry().conflicted1/body
E; class; [CN]/ModLoader/[MT]/addArmor(String)/body
E; class; [CN]/GameData/[MT]/registerBlock(Block,String)/body
E; class; [CN]/RenderingRegistry/[MT]/addTextureOverride(String,String)/body
E; class; [MT]/apply_fml_patches/parameters
E; class; [CN]/FMLClientHandler/[MT]/trackMissingTexture(ResourceLocation)/body
E; class; [CN]/TechneModel/[MT]/loadTechneModel(URL)/body
E; class; [CN]/ModelLoader/[CN]/UVLock/[CS]/UVLock(IModelState)/parameters
E; class; [CN]/Configuration/[MT]/getOrCreateProperty(String,String,String)/body
E; class; [MT]/build_installer/parameters
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/unmap(String)/body
E; class; [CN]/Loader/[MT]/serverStopping()/body
E; class; [CN]/RenderingRegistry/[MT]/getUniqueTextureIndex(String)/body
E; class; [CN]/BlockFluidClassic/[MT]/canFlowInto(IBlockAccess,int,int,int)/body
E; class; [CN]/FMLClientHandler/[MT]/enhanceServerListEntry(ServerListEntryNormal,ServerData,int,int,int,int,int)/body
E; class; [CN]/BlockFluidBase/[MT]/displaceIfPossible(World,int,int,int)/body
E; class; [CN]/GameRegistry/[MT]/registerItem(Item,String)/body
E; class; [MT]/runcmd/body
E; class; [CN]/GameRegistry/[MT]/registerItem(Item)/body
E; class; [CN]/ForgeModContainer/[CS]/ForgeModContainer()/body
E; class; [CN]/ForgeMessage/[CN]/FluidIdMapMessage/[MT]/toBytes(ByteBuf)/body
E; class; [CN]/ModAccessTransformer/[CS]/ModAccessTransformer()/body
E; class; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/body
E; class; [CN]/BakedFluid/[MT]/putVertex(UnpackedBakedQuad.Builder,EnumFacing,float,float,float,float,float)/body
E; class; [CN]/ASMModParser/[CS]/ASMModParser(InputStream)/body
E; class; [CN]/FMLCommonHandler/[MT]/tickEnd(TickType,Object)/body
E; class; [CN]/FMLIndexedMessageToMessageCodec/[MT]/decode(ChannelHandlerContext,FMLProxyPacket,List<Object>)/body
E; class; [CN]/ForgeChunkManager/[MT]/releaseTicket(Ticket)/body
E; class; [CN]/LiquidStack/[MT]/writeToNBT(NBTTagCompound)/body
E; class; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
E; class; [CN]/ForgeChunkManager/[MT]/loadWorld(World)/body
E; class; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
E; class; [CN]/Loader/[MT]/getCrashInformation()/body
E; class; [MT]/download_deps/body
E; class; [CN]/FMLRelaunchLog/[MT]/configureLogging()/body
E; class; [CN]/FMLClientHandler/[MT]/onLoadComplete()/body
E; class; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
E; class; [MT]/pre_decompile/body
E; class; [CN]/NetworkModHandler/[CS]/NetworkModHandler(ModContainer,Class<?>,ASMDataTable)/body
E; class; [CN]/ClassPatchManager/[MT]/setup(Side)/body
E; class; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
E; class; [CN]/VertexLighterFlat/[MT]/processQuad()/body
E; class; [CN]/FMLInterModComms/[CN]/IMCEvent/[MT]/applyModContainer(ModContainer)/body
E; class; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body
E; class; [CN]/ModLoaderClientHelper/[MT]/handleFinishLoadingFor(ModLoaderModContainer,Minecraft)/body
E; class; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
E; class; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
E; class; [CN]/ModClassLoader/[MT]/addFile(File)/body
E; class; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
E; class; [CN]/FMLCommonHandler/[MT]/loadMetadataFor(ModContainer)/body
E; class; [MT]/apply_fml_patches/body
E; class; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
E; class; [CN]/GameData/[MT]/fixBrokenIds(Map<String,Integer>,Set<Integer>)/body
E; class; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,Set<Integer>,Map<String,String>,Map<String,String>,boolean,boolean)/body
E; class; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
E; class; [CN]/CoreModManager/[MT]/discoverCoreMods(File,LaunchClassLoader)/body
E; class; [CN]/BaseMod/[MT]/doTickInGame(TickType,boolean,Object,Object)/body
E; class; [CN]/ForgeModContainer/[MT]/syncConfig(boolean)/body
E; class; [CN]/FMLCorePlugin/[MT]/getASMTransformerClass()/body
E; class; [CN]/Loader/[MT]/preinitializeMods()/body
E; class; [CN]/CoreModManager/[MT]/injectTransformers(LaunchClassLoader)/body
E; class; [CN]/BaseModTicker/[MT]/tickBaseMod(EnumSet<TickType>,boolean,Object)/body
E; class; [CN]/MinecraftForge/[MT]/initialize()/body
E; class; [CN]/Loader/[MT]/identifyMods()/body
E; class; [CN]/FMLClientHandler/[MT]/onRenderTickStart(float)/body
E; class; [CN]/Configuration/[MT]/getOrCreateBlockIdProperty(String,int)/body
E; class; [CN]/SplashProgress/[MT]/start()/body
E; class; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
E; class; [CN]/ForgeHooksClient/[MT]/renderInventoryItem(RenderBlocks,RenderEngine,ItemStack,boolean,float,float,float)/body
E; class; [CN]/FMLDeobfuscatingRemapper/[MT]/map(String)/body
E; class; [CN]/FMLModContainer/[MT]/bindMetadata(MetadataCollection)/body
E; class; [CN]/Loader/[MT]/sortModList()/body
E; class; [CN]/MCPMerger/[MT]/copyClass(ZipFile,ZipEntry,ZipOutputStream,ZipOutputStream,boolean)/body
E; class; [CN]/JarDiscoverer/[MT]/discover(ModCandidate,ASMDataTable)/body
E; class; [CN]/OreDictionary/[MT]/initVanillaEntries()/body
E; class; [CN]/FMLClientHandler/[MT]/onPreWorldTick()/body
E; class; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body
E; class; [CN]/FMLRelauncher/[MT]/showWindow(boolean)/body
E; class; [CN]/RelaunchClassLoader/[MT]/findClass(String)/body
E; class; [CN]/GameData/[MT]/processIdRematches(Iterable<MissingMapping>,boolean,GameData,Map<String,Integer[]>)/body
E; class; [CN]/ClassPatchManager/[MT]/applyPatch(String,String,byte[])/body
E; class; [CN]/FMLClientHandler/[MT]/bindServerListData(ServerData,ServerStatusResponse)/body
E; class; [CN]/FMLModContainer/[MT]/constructMod(FMLConstructionEvent)/body
E; class; [MT]/setup_mcp/body
E; class; [CN]/FMLCommonHandler/[MT]/getBrandingStrings(String)/body
E; class; [MT]/finish_setup_fml/body
E; class; [CN]/FMLModContainer/[MT]/gatherAnnotations(Class<?>)/body
E; package; fml.py
E; package; FMLDummyContainer.java
E; package; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
E; package; LiquidStack.java
E; package; src_main_java_net_minecraftforge_server_command_CommandTreeBase.java
E; package; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
E; package; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
E; package; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
E; package; src_main_java_net_minecraftforge_event_entity_living_LivingHealEvent.java
E; package; FMLDeobfuscatingRemapper.java
E; package; src_main_java_net_minecraftforge_event_brewing_PotionBrewedEvent.java
E; package; RelaunchClassLoader.java
E; package; src_main_java_net_minecraftforge_fml_client_config_GuiConfigEntries.java
E; package; KeyBindingRegistry.java
E; package; GuiIngameForge.java
E; package; FOVUpdateEvent.java
E; package; Downloader.java
E; package; src_main_java_cpw_mods_fml_common_FMLCommonHandler.java
E; package; GameData.java
E; package; BaseMod.java
E; package; src_main_java_net_minecraftforge_fml_client_config_GuiUtils.java
E; package; src_main_java_net_minecraftforge_client_model_ItemLayerModel.java
E; package; ModClassLoader.java
E; package; src_main_java_cpw_mods_fml_common_registry_GameRegistry.java
E; package; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
E; package; src_main_java_net_minecraftforge_common_config_ConfigCategory.java
E; package; src_main_java_net_minecraftforge_fluids_FluidStack.java
E; package; src_main_java_net_minecraftforge_fml_client_GuiModList.java
E; package; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
E; package; ModLoaderKeyBindingHandler.java
E; package; FakePlayer.java
E; package; src_main_java_net_minecraftforge_client_model_pipeline_WorldRendererConsumer.java
E; package; src_main_java_cpw_mods_fml_common_registry_GameData.java
E; package; ModLoaderModContainer.java
E; package; ForgeChunkManager.java
E; package; ModIdMapPacket.java
E; package; ModLoaderConnectionHandler.java
E; package; src_main_java_net_minecraftforge_fml_client_GuiScrollingList.java
E; package; FMLCommonHandler.java
E; package; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
E; package; AccessTransformer.java
E; package; Loader.java
E; package; release.py
E; package; FMLRemappingAdapter.java
E; package; DimensionManager.java
E; package; FMLRelaunchLog.java
E; package; FMLClientHandler.java
E; package; src_main_java_cpw_mods_fml_common_EnhancedRuntimeException.java
E; package; ModListResponsePacket.java
E; package; src_main_java_net_minecraftforge_client_model_pipeline_ForgeBlockModelRenderer.java
E; package; ModTextureStatic.java
E; package; src_main_java_net_minecraftforge_fluids_FluidRegistry.java
E; package; src_main_java_net_minecraftforge_client_model_ModelLoader.java
E; package; FMLModContainer.java
E; package; applypatches.py
E; package; packages.py
E; package; NetworkModHandler.java
E; package; src_main_java_net_minecraftforge_event_entity_PlaySoundAtEntityEvent.java
E; package; MCPMerger.java
E; package; src_main_java_net_minecraftforge_fml_client_config_GuiConfig.java
E; package; src_net_minecraft_src_forge_ForgeHooksClient.java
E; package; FMLLaunchHandler.java
E; package; ForgeHooksClient.java
E; package; ItemData.java
E; package; ModLoader.java
E; package; src_main_java_net_minecraftforge_event_entity_player_PlayerWakeUpEvent.java
E; package; src_main_java_net_minecraftforge_fluids_FluidTank.java
E; package; FMLModLoaderContainer.java
E; package; src_forge_DungeonLoot.java
E; package; GameRegistry.java
E; package; src_main_java_net_minecraftforge_client_model_pipeline_UnpackedBakedQuad.java
E; package; ModListRequestPacket.java
E; package; setup.py
E; package; FMLServerHandler.java
E; package; FMLInterModComms.java
E; package; src_main_java_net_minecraftforge_fml_common_registry_FMLControlledNamespacedRegistry.java
E; package; ForgePacketHandler.java
E; package; src_main_java_net_minecraftforge_fml_common_registry_ObjectHolderRef.java
E; package; TextureFXManager.java
E; package; src_net_minecraft_src_forge_ForgeHooksServer.java
E; package; src_main_java_cpw_mods_fml_common_network_FMLIndexedMessageToMessageCodec.java
E; package; GuiSlotModList.java
E; package; LanguageRegistry.java
E; package; src_net_minecraft_src_forge_PacketHandlerServer.java
E; package; FMLHandler.java
E; package; GuiModList.java
E; package; FMLEmbeddingRelauncher.java
E; package; changelog.py
E; package; RelaunchLibraryManager.java
E; package; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
E; package; ModTextureAnimation.java
E; package; src_main_java_net_minecraftforge_fml_client_config_GuiSelectString.java
E; package; FMLTweaker.java
E; package; src_main_java_cpw_mods_fml_common_registry_ObjectHolderRef.java
E; package; BaseModTicker.java
E; package; src_net_minecraft_src_forge_GuiControlsScrollPanel.java
E; package; src_main_java_net_minecraftforge_fml_client_config_GuiEditArray.java
E; package; src_main_java_net_minecraftforge_common_BiomeManager.java
E; package; forge.py
E; package; src_main_java_net_minecraftforge_fml_common_registry_VillagerRegistry.java
E; package; getversion.py
E; package; RotationHelper.java
E; package; src_main_java_net_minecraftforge_event_world_WorldEvent.java
E; package; RenderPlayerEvent.java
E; package; src_forge_Configuration.java
E; package; FMLRelauncher.java
E; package; TechneModel.java
E; package; src_main_java_cpw_mods_fml_client_FMLClientHandler.java
E; package; src_forge_packets_PacketModList.java
E; package; src_main_java_cpw_mods_fml_client_GuiModItemsMissing.java
E; package; src_main_java_cpw_mods_fml_common_Loader.java
E; package; install.py
E; package; src_main_java_cpw_mods_fml_relauncher_ModListHelper.java
E; package; src_main_java_cpw_mods_fml_common_ZipperUtil.java
E; package; src_main_java_net_minecraftforge_oredict_OreDictionary.java
E; package; src_main_java_net_minecraftforge_common_ForgeModContainer.java
E; package; ClassPatchManager.java
E; package; src_net_minecraft_src_mod__MinecraftForge.java
E; package; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
E; package; src_main_java_net_minecraftforge_fluids_DispenseFluidContainer.java
E; package; CoreModManager.java
E; package; src_main_java_net_minecraftforge_common_UsernameCache.java
E; package; src_main_java_net_minecraftforge_client_model_ModelFluid.java
E; package; src_main_java_net_minecraftforge_fml_common_registry_PersistentRegistryManager.java
E; package; ModLoaderHelper.java
E; package; src_net_minecraft_src_forge_PacketHandlerClient.java
E; package; src_main_java_net_minecraftforge_fml_common_EnhancedRuntimeException.java
E; package; src_main_java_cpw_mods_fml_common_asm_transformers_ModAccessTransformer.java
E; package; InjectedModContainer.java
E; package; src_main_java_net_minecraftforge_event_world_NoteBlockEvent.java
E; package; src_main_java_cpw_mods_fml_client_SplashProgress.java
E; package; src_main_java_net_minecraftforge_common_ForgeVersion.java
E; package; FakePlayerFactory.java
E; package; src_main_java_net_minecraftforge_common_BiomeDictionary.java
E; package; src_main_java_cpw_mods_fml_client_FMLConfigGuiFactory.java
E; package; DeobfuscationTransformer.java
E; package; FMLBukkitHandler.java
E; package; GuiScrollingList.java
E; package; src_main_java_net_minecraftforge_client_model_MultiModel.java
E; package; src_main_java_net_minecraftforge_client_model_obj_OBJModel.java
E; package; EntityRegistry.java
E; package; src_main_java_net_minecraftforge_fml_common_network_internal_FMLMessage.java
E; package; DirectoryDiscoverer.java
E; package; OreDictionary.java
E; package; src_main_java_net_minecraftforge_event_AttachCapabilitiesEvent.java
E; package; Configuration.java
E; package; src_main_java_net_minecraftforge_common_ForgeChunkManager.java
E; package; src_main_java_cpw_mods_fml_common_network_handshake_NetworkDispatcher.java
E; package; src_main_java_net_minecraftforge_client_GuiIngameForge.java
E; package; ModMissingPacket.java
E; package; build.py
E; package; ShapedOreRecipe.java
E; package; FMLHooks.java
E; package; src_main_java_cpw_mods_fml_server_FMLServerHandler.java
E; package; src_main_java_net_minecraftforge_common_config_Property.java
E; package; src_main_java_cpw_mods_fml_common_LoadController.java
E; package; DefaultArtifactVersion.java
E; package; FMLNetworkHandler.java
E; package; RenderingRegistry.java
E; package; GuiControlsScrollPanel.java
E; package; BlockFluidClassic.java
E; package; BlockFluidBase.java
E; package; patches.py
E; package; src_main_java_net_minecraftforge_common_network_ForgeMessage.java
E; package; ASMModParser.java
E; package; src_main_java_cpw_mods_fml_common_FMLContainer.java
E; package; src_main_java_net_minecraftforge_client_model_pipeline_VertexLighterFlat.java
E; package; ModLoaderClientHelper.java
E; package; src_main_java_net_minecraftforge_fluids_FluidContainerRegistry.java
E; package; src_main_java_cpw_mods_fml_relauncher_CoreModManager.java
E; package; FMLCorePlugin.java
E; package; src_main_java_net_minecraftforge_common_MinecraftForge.java
E; package; JarDiscoverer.java
R; depends-to; [MT]/download_file/body; other
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body; [CN]/LiquidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/CommandTreeBase/[MT]/isUsernameIndex(String[],int)/body; [CN]/CommandTreeBase/[MT]/getTabCompletionOptions(MinecraftServer,ICommandSender,String[],BlockPos)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; package; [CN]/LivingHealEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; package
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mergeSuperMaps(String,String,String[])/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
R; depends-to; package; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/Downloader/[MT]/makeDialog()/body; [CN]/Downloader/[MT]/makeHeadless()/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/handleWorldDataLoad(SaveHandler,WorldInfo,NBTTagCompound)/body; [CN]/FMLClientHandler/[MT]/launchIntegratedServerCallback(String,String)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/BaseMod/[MT]/doTickInGUI(TickType,boolean,Object,Object)/body; [CN]/ModLoaderHelper/[MT]/updateGUITicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/ItemLayerModel/[MT]/getQuadsForSprite(int,TextureAtlasSprite,VertexFormat,TRSRTransformation)/body; [CN]/ItemLayerModel/[MT]/addSideQuad(ImmutableList.Builder<BakedQuad>,BitSet,VertexFormat,TRSRTransformation,EnumFacing,int,TextureAtlasSprite,int,int,int,int)/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/parameters; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; package
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/parameters; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/ConfigCategory/[MT]/setComment(String)/body; [CN]/Property/[MT]/setName(String)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidStack/[MT]/hashCode()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/GameRegistry/[MT]/register(K,ResourceLocation)/body; [CN]/GameRegistry/[MT]/register(K)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; package
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FakePlayer/extend; [CN]/FakePlayerFactory/[MT]/getMinecraft(World)/body
R; depends-to; [MT]/post_decompile/parameters; [MT]/post_decompile/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/GameData/[FE]/MIN_ITEM_ID; [CN]/GameData/[FE]/MIN_BLOCK_ID
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/parameters; [CN]/ModLoaderModContainer/[MT]/configureMod()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ForgeChunkManager/[MT]/captureConfig(File)/body; [CN]/ForgeChunkManager/[MT]/loadWorld(World)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ModLoaderConnectionHandler/[MT]/connectionOpened(NetHandler,String,int,NetworkManager)/body; [CN]/ModLoaderConnectionHandler/[MT]/connectionClosed(NetworkManager)/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/GuiScrollingList/[MT]/overlayBackground(int,int,int,int)/body; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/registerBlock(Block,String,int)/body; [CN]/GameData/[MT]/registerItem(Item,String,int)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [MT]/setup_fml/parameters; [MT]/fml_main/body
R; depends-to; [MT]/download_file/body; [MT]/file_backup/body
R; depends-to; [CN]/LivingHealEvent/[FE]/amount; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/AccessTransformer/[MT]/readMapFile(String)/body; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/Loader/[FE]/mccversion; [CN]/Loader/[MT]/getCrashInformation()/body
R; depends-to; [CN]/Loader/[FE]/mccversion; [MT]/main/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [MT]/zip_start/body; other
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/AccessTransformer/[CS]/AccessTransformer()/body; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body
R; depends-to; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [MT]/file_backup/parameters; [MT]/download_deps/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickStart(TickType,Object)/body; [CN]/FMLCommonHandler/[MT]/tickEnd(TickType,Object)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/DimensionManager/[MT]/createProviderFor(int)/body; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [MT]/extract_fml_obfed/parameters; [MT]/build_forge_dev/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/GameRegistry/[MT]/register(K)/body; [CN]/GameRegistry/[MT]/register(K,ResourceLocation)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/FMLRelaunchLog/[CN]/ConsoleLogWrapper/[MT]/publish(LogRecord)/body; [CN]/FMLRelaunchLog/[MT]/configureLogging()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/FMLClientHandler/[MT]/registerTextureOverrides(RenderEngine)/body; [CN]/FMLClientHandler/[MT]/onLoadComplete()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; package
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/ModTextureStatic/[MT]/func_76845_a(RenderEngine)/parameters; [CN]/ModTextureStatic/[MT]/func_76846_a()/body
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[MT]/copy()/body
R; depends-to; [CN]/ModelLoader/[CN]/UVLock/[MT]/apply(IModelPart)/body; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/FMLModContainer/[MT]/getVersion()/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; other; [MT]/main/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [MT]/get_merged_info/parameters; other
R; depends-to; [MT]/download_file/parameters; [MT]/pre_decompile/body
R; depends-to; [CN]/NetworkModHandler/[CS]/NetworkModHandler(ModContainer,NetworkMod)/body; [CN]/NetworkModHandler/[CS]/NetworkModHandler(ModContainer,Class<?>,ASMDataTable)/body
R; depends-to; [CN]/GameRegistry/[MT]/getRegistry().conflicted0/body; [CN]/GameRegistry/[MT]/getRegistry().conflicted1/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body; [CN]/ModLoaderModContainer/[MT]/toString()/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PlaySoundAtEntityEvent/[FE]/newVolume; [CN]/PlaySoundAtEntityEvent/[FE]/newPitch
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
R; depends-to; [CN]/MCPMerger/[MT]/processMethods(ClassNode,ClassNode,ClassInfo)/body; [CN]/MCPMerger/[CN]/MethodWrapper/[MT]/equals(Object)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/ExplosionEvent/extend; package
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body
R; depends-to; package; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/FMLLaunchHandler/[MT]/setupHome()/body; [CN]/ClassPatchManager/[MT]/setup(Side)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/GameData/[MT]/register(Object,String,int)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; package
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
R; depends-to; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/getPreDepends()/body; [CN]/ModLoaderModContainer/[MT]/getPostDepends()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/ItemData/[MT]/toString()/body; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int,int,int)/body; [MT]/setup_fml/body
R; depends-to; [MT]/finish_setup_fml/parameters; [MT]/fml_main/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body; [CN]/PlayerWakeUpEvent/[FE]/updateWorld
R; depends-to; [CN]/FluidTank/[MT]/drain(int,boolean)/body; [CN]/FluidTank/[MT]/fill(FluidStack,boolean)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/DungeonLoot/[MT]/equals(ItemStack,int,int)/body; [CN]/DungeonLoot/[MT]/generateStack(Random)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidStack/[MT]/hashCode()/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/GameRegistry/[MT]/onPlayerLogout(EntityPlayer)/body; [CN]/GameRegistry/[MT]/onPlayerLogin(EntityPlayer)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; package; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/UnpackedBakedQuad/[CN]/Builder/[MT]/build()/body; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/GameData/[MT]/register(Object,String,int)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/getNextFreeDimId()/body
R; depends-to; [CN]/ModListRequestPacket/[MT]/consumePacket(byte[])/body; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; package
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly; [CN]/PlayerWakeUpEvent/[FE]/updateWorld
R; depends-to; [MT]/main/body; other
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [MT]/post_decompile/body; other
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/FMLInterModComms/[CN]/IMCEvent/[MT]/getMessages()/body; [CN]/FMLInterModComms/[CN]/IMCEvent/[MT]/applyModContainer(ModContainer)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/getWorlds()/body
R; depends-to; [MT]/file_backup/parameters; [MT]/pre_decompile/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body; [CN]/LivingHealEvent/[FE]/amount
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/FOVUpdateEvent/extend; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/loadDummied(Set<ResourceLocation>)/body; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body
R; depends-to; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/parameters; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ObjectHolderRef/[MT]/getRegistryForType(Field)/body; [CN]/ObjectHolderRef/[MT]/apply()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body; [CN]/DimensionManager/[MT]/createProviderFor(int)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,ResourceLocation,boolean)/body; [CN]/ObjectHolderRef/[MT]/apply()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; package
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/TextureFXManager/[MT]/registerTextureOverrides(RenderEngine)/body; [CN]/ModLoaderClientHelper/[MT]/handleFinishLoadingFor(ModLoaderModContainer,Minecraft)/body
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [MT]/setup_fml/parameters; [MT]/pre_decompile/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/ForgeChunkManager/[MT]/loadConfiguration()/body; [CN]/ForgeChunkManager/[MT]/captureConfig(File)/body
R; depends-to; [CN]/Loader/[FE]/mccversion; other
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/GameRegistry/[MT]/onPlayerLogout(EntityPlayer)/body; [CN]/GameRegistry/[MT]/onPlayerRespawn(EntityPlayer)/body
R; depends-to; [CN]/AccessTransformer/[MT]/readMapFile(String)/body; [CN]/AccessTransformer/[CS]/AccessTransformer()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; package; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body; [CN]/PacketModList/[MT]/toString(boolean)/body
R; depends-to; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body; [CN]/ItemData/[MT]/toString()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body; [CN]/DimensionManager/[MT]/init()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body; [CN]/DimensionManager/[MT]/getIDs()/body
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER; [CN]/FMLIndexedMessageToMessageCodec/[MT]/decode(ChannelHandlerContext,FMLProxyPacket,List<Object>)/body
R; depends-to; [CN]/GuiSlotModList/[MT]/getContentHeight()/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; package; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/LanguageRegistry/[MT]/reloadLanguageTable()/body; [CN]/LanguageRegistry/[MT]/getStringLocalization(String)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; package
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[MT]/hashCode()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/UnpackedBakedQuad/[CN]/Builder/[MT]/build()/body; [CN]/OBJBakedModel/[MT]/getQuads(IBlockState,EnumFacing,long)/body
R; depends-to; package; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/DimensionManager/[MT]/createProviderFor(int)/body; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/FOVUpdateEvent/extend; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GuiModList/[MT]/func_572_a(GuiButton)/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/LiquidStack/[MT]/equals(Object)/body; [CN]/LiquidStack/[MT]/hashCode()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; package
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/LivingHealEvent/[FE]/amount; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/updateWorld; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters
R; depends-to; [CN]/DimensionManager/[MT]/createProviderFor(int)/body; [CN]/DimensionManager/[MT]/getIDs()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/FMLCommonHandler/[MT]/loadMetadataFor(ModContainer)/body
R; depends-to; [MT]/make_changelog/body; [MT]/getBuildInfo/parameters
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/RelaunchLibraryManager/[MT]/downloadFile(File,String,String,String)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body; [CN]/AccessTransformer/[MT]/readMapFile(String)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLNetworkHandler/[MT]/handleClientConnection(NetLoginHandler,MinecraftServer,SocketAddress,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [MT]/apply_patches/body; [MT]/apply_fml_patches/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/ItemLayerModel/[MT]/addSideQuad(ImmutableList.Builder<BakedQuad>,BitSet,VertexFormat,TRSRTransformation,EnumFacing,int,TextureAtlasSprite,int,int,int,int)/parameters; [CN]/ItemLayerModel/[MT]/getQuadsForSprite(int,TextureAtlasSprite,VertexFormat,TRSRTransformation)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [MT]/file_backup/parameters; [MT]/download_file/parameters
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [MT]/post_decompile/body; [MT]/pre_decompile/parameters
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body
R; depends-to; [CN]/PotionBrewEvent/extend; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/ModTextureAnimation/[CS]/ModTextureAnimation(int,int,String,BufferedImage,int)/body; [CN]/ModTextureStatic/[CS]/ModTextureStatic(int,int,String,BufferedImage)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/FMLTweaker/[MT]/getLaunchArguments()/body; [CN]/FMLTweaker/[MT]/acceptOptions(List<String>,File,File,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; package
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/ObjectHolderRef/[MT]/apply()/body; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,String,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/GameData/[FE]/MAX_ITEM_ID; [CN]/GameData/[MT]/fixBrokenIds(Map<String,Integer>,Set<Integer>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/BaseModTicker/[MT]/sendTick(EnumSet<TickType>,boolean,Object)/body; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ForgeChunkManager/[MT]/loadConfiguration()/body; [CN]/ForgeChunkManager/[MT]/loadWorld(World)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/isSaveValid; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/ModLoaderModContainer/[MT]/configureMod()/body; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/body
R; depends-to; [CN]/GuiControlsScrollPanel/[MT]/drawScreen(int,int,float)/body; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/GameData/[MT]/registerItem(Item,String,int)/body; [CN]/GameData/[MT]/registerBlock(Block,String,int)/body
R; depends-to; package; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [MT]/pre_decompile/parameters; other
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[MT]/getFluid()/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/BiomeManager/[MT]/addBiome(BiomeType,BiomeEntry)/body; [CN]/BiomeManager/[MT]/removeBiome(BiomeType,BiomeEntry)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/toString()/body; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/ItemData/[MT]/toString()/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/getTrades(int)/body; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/addTrade(int,ITradeList)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,ResourceLocation,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/DimensionManager/[MT]/getNextFreeDimId()/body; [CN]/DimensionManager/[MT]/init()/body
R; depends-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; other; other
R; depends-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/BiomeManager/[MT]/setupBiomes()/body; [CN]/BiomeManager/[MT]/addBiome(BiomeType,BiomeEntry)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,Set<Integer>,Map<String,String>,Map<String,String>,boolean,boolean)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; other; [CN]/Loader/[MT]/getCrashInformation()/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; package
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/RotationHelper/[MT]/rotateVanillaBlock(Block,World,int,int,int,ForgeDirection)/body; [CN]/RotationHelper/[MT]/getValidVanillaBlockRotations(Block)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; package; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidStack/[MT]/copy()/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; package; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/GameData/[MT]/register(Object,String,int)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/RenderPlayerEvent/[CN]/Specials/[CS]/Specials(EntityPlayer,RenderPlayer,float)/body; [CN]/RenderPlayerEvent/[CN]/SetArmorModel/[CS]/SetArmorModel(EntityPlayer,RenderPlayer,int,float,ItemStack)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; package
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/Configuration/[MT]/save()/body; [CN]/Configuration/[MT]/load()/body
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; package
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/getMethodMap(String)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FOVUpdateEvent/extend; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; package
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; package; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [MT]/post_decompile/parameters; other
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters
R; depends-to; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLNetworkHandler/[MT]/handleClientConnection(NetLoginHandler,MinecraftServer,SocketAddress,String)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/ModelLoader/[MT]/loadModel(ResourceLocation)/body; [CN]/ModelLoader/[MT]/setupModelRegistry()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [MT]/finish_setup_fml/parameters; [MT]/setup_fml/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GuiSlotModList/[MT]/getContentHeight()/body; [CN]/GuiModList/[MT]/func_6448_a()/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [MT]/setup_fml/parameters; [MT]/fml_main/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/TechneModel/[MT]/bindTexture()/body; [CN]/TechneModel/[MT]/renderPart(String)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body
R; depends-to; [CN]/TechneModel/[MT]/renderPart(String)/body; [CN]/TechneModel/[MT]/loadTechneModel(URL)/body
R; depends-to; [CN]/CommandTreeBase/[MT]/getTabCompletionOptions(MinecraftServer,ICommandSender,String[],BlockPos)/body; [CN]/CommandTreeBase/[MT]/getSubCommands()/body
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/FMLClientHandler/[MT]/logMissingTextureErrors()/body; [CN]/FMLClientHandler/[MT]/trackMissingTexture(ResourceLocation)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; package
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/PacketModList/[MT]/toString(boolean)/body; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body
R; depends-to; [MT]/apply_patches/body; [MT]/setup_fml/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body
R; depends-to; [CN]/GuiModItemsMissing/[MT]/func_73863_a(int,int,float)/body; [CN]/GuiModItemsMissing/[MT]/func_73866_w_()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/loadMods()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/ModListHelper/[MT]/parseListFile(String)/body; [CN]/CoreModManager/[MT]/discoverCoreMods(File,LaunchClassLoader)/body
R; depends-to; package; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [MT]/apply_patches/parameters; [MT]/apply_patches/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body
R; depends-to; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [MT]/download_file/parameters; other
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
R; depends-to; [CN]/ModelLoader/[MT]/loadModel(ResourceLocation)/body; [CN]/ModelLoader/[MT]/registerVariant(ModelBlockDefinition,ModelResourceLocation)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body
R; depends-to; [CN]/GameData/[FE]/MIN_BLOCK_ID; [CN]/GameData/[FE]/MAX_ITEM_ID
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/FMLTweaker/[MT]/acceptOptions(List<String>,File,File,String)/body; [CN]/FMLTweaker/[MT]/injectIntoClassLoader(LaunchClassLoader)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ModLoaderConnectionHandler/[MT]/connectionClosed(NetworkManager)/body; [CN]/ModLoaderConnectionHandler/[MT]/connectionOpened(NetHandler,String,int,NetworkManager)/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ZipperUtil/[MT]/backupWorld(String,String)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[FE]/offset
R; depends-to; [CN]/OreDictionary/[MT]/getOres(String,boolean)/body; [CN]/OreDictionary/[MT]/doesOreNameExist(String)/parameters
R; depends-to; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body; [CN]/BaseMod/[MT]/doTickInGame(TickType,boolean,Object,Object)/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; package
R; depends-to; [CN]/GuiModItemsMissing/[MT]/func_73866_w_()/body; [CN]/GuiModItemsMissing/[MT]/func_73863_a(int,int,float)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [MT]/download_file/parameters; [MT]/download_minecraft/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/ForgeModContainer/[MT]/onConfigChanged(OnConfigChangedEvent)/body; [CN]/ForgeModContainer/[MT]/syncConfig(boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [MT]/read_mc_versions/body; [MT]/decompile_minecraft/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/ClassPatchManager/[MT]/readPatch(JarEntry,JarInputStream)/body; [CN]/ClassPatchManager/[MT]/setup(Side)/body
R; depends-to; [CN]/mod_MinecraftForge/extend; [CN]/mod_MinecraftForge/extend
R; depends-to; [CN]/GameData/[FE]/MAX_BIOME_ID; [CN]/GameData/[FE]/MIN_BIOME_ID
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/markDummy(ResourceLocation,Integer,I)/body; [CN]/PersistentRegistryManager/[MT]/loadPersistentDataToStagingRegistry(boolean,Map<ResourceLocation,Map<ResourceLocation,Integer[]>>,LinkedHashMap<ResourceLocation,Map<ResourceLocation,Integer>>,Map.Entry<ResourceLocation,GameDataSnapshot.Entry>,Class<T>)/body
R; depends-to; [CN]/LivingHealEvent/extend; [CN]/LivingHealEvent/[FE]/amount
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; package; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/registerTransformer(String)/body; [CN]/FMLCorePlugin/[MT]/getASMTransformerClass()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/WorldRendererConsumer/[FE]/offset
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; package
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [MT]/download_file/parameters; [MT]/download_file/body
R; depends-to; [CN]/DispenseFluidContainer/[MT]/dumpContainer(IBlockSource,ItemStack)/body; [CN]/DispenseFluidContainer/[MT]/fillContainer(IBlockSource,ItemStack)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/preinitializeMods()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body; [CN]/ItemData/[MT]/toString()/body
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; package
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/createProviderFor(int)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/getPostDepends()/body; [CN]/ModLoaderModContainer/[MT]/getPreDepends()/body
R; depends-to; [CN]/FMLClientHandler/[MT]/finishMinecraftLoading()/body; [CN]/FMLClientHandler/[MT]/onInitializationComplete()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; other; [MT]/get_merged_info/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; package
R; depends-to; [MT]/setup_fml/body; [MT]/main/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/loadDummied(Set<ResourceLocation>)/body; [CN]/PersistentRegistryManager/[MT]/loadPersistentDataToStagingRegistry(boolean,Map<ResourceLocation,Map<ResourceLocation,Integer[]>>,LinkedHashMap<ResourceLocation,Map<ResourceLocation,Integer>>,Map.Entry<ResourceLocation,GameDataSnapshot.Entry>,Class<T>)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body; [CN]/LiquidStack/[MT]/equals(Object)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/DimensionManager/[MT]/getIDs()/body; [CN]/DimensionManager/[MT]/createProviderFor(int)/body
R; depends-to; [CN]/CommandTreeBase/[MT]/isUsernameIndex(String[],int)/body; [CN]/CommandTreeBase/[MT]/getSubCommands()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body
R; depends-to; [MT]/setup_fml/parameters; other
R; depends-to; [CN]/ModTextureStatic/[MT]/update()/body; [CN]/ModTextureStatic/[CS]/ModTextureStatic(int,int,String,BufferedImage)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body
R; depends-to; [CN]/GuiScrollingList/[MT]/overlayBackground(int,int,int,int)/body; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/CoreModManager/[MT]/handleCascadingTweak(File,JarFile,String,LaunchClassLoader,Integer)/body; [CN]/CoreModManager/[MT]/injectTransformers(LaunchClassLoader)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/LiquidStack/[MT]/isLiquidEqual(LiquidStack)/body; [CN]/LiquidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/FMLEmbeddingRelauncher/[MT]/setupHome()/body
R; depends-to; [CN]/FMLTweaker/[MT]/acceptOptions(List<String>,File,File,String)/body; [CN]/FMLTweaker/[MT]/getLaunchArguments()/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/CoreModManager/[MT]/loadCoreMod(LaunchClassLoader,String,File)/body; [CN]/CoreModManager/[MT]/injectTransformers(LaunchClassLoader)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/BaseModTicker/[MT]/sendTick(EnumSet<TickType>,boolean,Object)/body; [CN]/BaseModTicker/[MT]/tickBaseMod(EnumSet<TickType>,boolean,Object)/body
R; depends-to; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body; [CN]/AccessTransformer/[MT]/readMapFile(String)/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/UsernameCache/[MT]/load()/body; [CN]/MinecraftForge/[MT]/initialize()/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/ItemLayerModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/DimensionManager/[MT]/createProviderFor(int)/body; [CN]/DimensionManager/[MT]/init()/body
R; depends-to; [CN]/BakedFluid/[CS]/BakedFluid(Optional<TRSRTransformation>,ImmutableMap<TransformType,TRSRTransformation>,VertexFormat,int,TextureAtlasSprite,TextureAtlasSprite,boolean,boolean,int[],int)/body; [CN]/OBJBakedModel/[MT]/getQuads(IBlockState,EnumFacing,long)/body
R; depends-to; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body; [CN]/AccessTransformer/[CS]/AccessTransformer()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [MT]/post_decompile/body; [MT]/download_deps/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/DungeonLoot/[MT]/equals(ItemStack)/body; [CN]/DungeonLoot/[MT]/equals(ItemStack,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; other; [MT]/setup_fml/body
R; depends-to; [MT]/extract_fml_obfed/body; [MT]/main/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body; [CN]/PlayerWakeUpEvent/[FE]/setSpawn
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; package; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; package
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/PersistentRegistryManager/[MT]/loadPersistentDataToStagingRegistry(boolean,Map<ResourceLocation,Map<ResourceLocation,Integer[]>>,LinkedHashMap<ResourceLocation,Map<ResourceLocation,Integer>>,Map.Entry<ResourceLocation,GameDataSnapshot.Entry>,Class<T>)/body; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidStack/[MT]/copy()/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/[FE]/amount
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend
R; depends-to; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body; [CN]/ModLoaderHelper/[MT]/updateGUITicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body
R; depends-to; package; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/FOVUpdateEvent/extend; package
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [MT]/download_file/parameters; [MT]/file_backup/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; package; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
R; depends-to; [CN]/ModTextureStatic/[CS]/ModTextureStatic(int,int,String,BufferedImage)/body; [CN]/ModTextureAnimation/[CS]/ModTextureAnimation(int,int,String,BufferedImage,int)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,ResourceLocation,I)/body; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/GameData/[FE]/difference; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body; [CN]/GameData/[MT]/register(Object,String,int)/body
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/ModAccessTransformer/[MT]/addJar(JarFile)/body; [CN]/ModAccessTransformer/[CS]/ModAccessTransformer()/body
R; depends-to; package; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/toString()/body; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters
R; depends-to; [CN]/PotionBrewedEvent/extend; package
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderHelper/[MT]/updateGUITicks(BaseMod,boolean,boolean)/body; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [MT]/fml_main/body; [MT]/fml_main/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/InjectedModContainer/[CS]/InjectedModContainer(ModContainer,File)/body; [CN]/Loader/[MT]/identifyMods()/body
R; depends-to; [MT]/main/body; [MT]/main/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body; [CN]/FMLClientHandler/[MT]/onRenderTickStart(float)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body; [CN]/GameData/[MT]/register(Object,String,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; package; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body
R; depends-to; [CN]/DimensionManager/[MT]/getIDs()/body; [CN]/DimensionManager/[MT]/init()/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body
R; depends-to; [CN]/PacketModList/[MT]/readData(DataInputStream)/body; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body
R; depends-to; [CN]/FMLClientHandler/[MT]/launchIntegratedServerCallback(String,String)/body; [CN]/FMLCommonHandler/[MT]/handleWorldDataLoad(SaveHandler,WorldInfo,NBTTagCompound)/body
R; depends-to; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted1/body; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted0/body
R; depends-to; [MT]/setup_fml/parameters; [MT]/post_decompile/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/ZipperUtil/[MT]/backupWorld()/body; [CN]/ZipperUtil/[MT]/backupWorld(String,String)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,ResourceLocation,boolean)/body; [CN]/ObjectHolderRef/[MT]/getRegistryForType(Field)/body
R; depends-to; [CN]/ModTextureStatic/[MT]/func_76846_a()/body; [CN]/ModTextureStatic/[MT]/func_76846_a()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File,SourceType)/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [MT]/getBuildInfo/parameters; other
R; depends-to; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body
R; depends-to; [MT]/file_backup/parameters; [MT]/setup_fml/body
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER
R; depends-to; [CN]/Configuration/[MT]/load()/body; [CN]/Configuration/[MT]/getOrCreateProperty(String,String,String)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/PacketHandlerClient/[MT]/onPacketData(NetworkManager,String,byte[])/body; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/AccessTransformer/[MT]/readMapFile(String)/body; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/ForgeChunkManager/[MT]/captureConfig(File)/body; [CN]/ForgeChunkManager/[MT]/loadConfiguration()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/FOVUpdateEvent/extend; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [MT]/post_decompile/parameters; [MT]/pre_decompile/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/setupHome()/body; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/getMethodMap(String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; package; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/Configuration/[MT]/save()/body; [CN]/Configuration/[MT]/getOrCreateBlockIdProperty(String,int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body
R; depends-to; [MT]/extract_fml_obfed/body; [MT]/build_forge_dev/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body; [CN]/PacketHandlerClient/[MT]/onPacketData(NetworkManager,String,byte[])/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; package
R; depends-to; package; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/markDummy(ResourceLocation,Integer,I)/body; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body
R; depends-to; [CN]/ModListHelper/[MT]/parseListFile(String)/body; [CN]/ModListHelper/[MT]/tryAddFile(String,File,String)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [MT]/download_file/body; [MT]/download_deps/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body; [CN]/DimensionManager/[MT]/init()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidStack/[MT]/getFluid()/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [MT]/download_file/body; [MT]/download_minecraft/body
R; depends-to; [CN]/SplashProgress/[MT]/finish()/body; [CN]/SplashProgress/[MT]/start()/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/ForgeVersion/[MT]/getStatus()/body; [CN]/ForgeVersion/[MT]/getTarget()/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body
R; depends-to; [CN]/GameData/[FE]/MIN_BLOCK_ID; [CN]/GameData/[FE]/MAX_BLOCK_ID
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/FakePlayerFactory/[MT]/getMinecraft(World)/body; [CN]/FakePlayer/extend
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body
R; depends-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mergeSuperMaps(String,String,String[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; package; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/parseField(String[])/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; package
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [MT]/pre_decompile/parameters; [MT]/setup_fml/body
R; depends-to; [CN]/GameData/[MT]/registerItem(Item,String,int)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body
R; depends-to; package; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
R; depends-to; [MT]/setup_fml/parameters; [MT]/setup_fml/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [MT]/download_file/body; [MT]/download_file/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/BiomeManager/[MT]/setupBiomes()/body; [CN]/BiomeManager/[MT]/removeBiome(BiomeType,BiomeEntry)/body
R; depends-to; [CN]/GuiModList/[MT]/selectModIndex(int)/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
R; depends-to; package; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body
R; depends-to; [CN]/DimensionManager/[MT]/getWorlds()/body; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; other; [MT]/getBuildInfo/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; package
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; package; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
R; depends-to; [CN]/ModListHelper/[MT]/tryAddFile(String,File,String)/body; [CN]/ModListHelper/[MT]/parseListFile(String)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/LivingHealEvent/[FE]/amount; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; package; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/BiomeDictionary/[MT]/makeBestGuess(BiomeGenBase)/body; [CN]/BiomeDictionary/[MT]/registerBiomeType(BiomeGenBase,Type)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [MT]/setup_fml/parameters; [MT]/post_decompile/body
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/parseField(String[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/GameRegistry/[MT]/onPlayerLogin(EntityPlayer)/body; [CN]/GameRegistry/[MT]/onPlayerLogout(EntityPlayer)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [MT]/file_backup/parameters; [MT]/download_file/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body
R; depends-to; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
R; depends-to; [CN]/ZipperUtil/[MT]/backupWorld(String,String)/body; [CN]/ZipperUtil/[MT]/backupWorld()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [MT]/make_changelog/body; other
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; package
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; package
R; depends-to; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body; [CN]/LiquidStack/[MT]/isLiquidEqual(LiquidStack)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ModelLoader/[MT]/setupModelRegistry()/body; [CN]/ModelLoader/[MT]/registerVariant(ModelBlockDefinition,ModelResourceLocation)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters; package
R; depends-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/FMLConfigGuiFactory/[MT]/getHandlerFor(RuntimeOptionCategoryElement)/body; [CN]/FMLConfigGuiFactory/[MT]/runtimeGuiCategories()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; package
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,String,boolean)/body; [CN]/ObjectHolderRef/[MT]/apply()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/Loader/[MT]/serverStopped()/body; [CN]/Loader/[MT]/serverStopping()/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body; [CN]/FMLIndexedMessageToMessageCodec/[MT]/decode(ChannelHandlerContext,FMLProxyPacket,List<Object>)/body
R; depends-to; [CN]/FMLClientHandler/[MT]/onInitializationComplete()/body; [CN]/FMLClientHandler/[MT]/finishMinecraftLoading()/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ObjectHolderRef/[MT]/apply()/body; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,ResourceLocation,boolean)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/LiquidStack/[MT]/isLiquidEqual(LiquidStack)/body; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mergeSuperMaps(String,String,String[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body
R; depends-to; package; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters
R; depends-to; [CN]/DimensionManager/[MT]/initDimension(int)/body; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getRaw(String)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/MIN_BLOCK_ID; [CN]/GameData/[MT]/fixBrokenIds(Map<String,Integer>,Set<Integer>)/body
R; depends-to; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/DeobfuscationTransformer/[MT]/unmapClassName(String)/body; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/markDummy(ResourceLocation,Integer,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/loadDummied(Set<ResourceLocation>)/body
R; depends-to; [CN]/ForgeVersion/[MT]/getTarget()/body; [CN]/ForgeVersion/[MT]/getStatus()/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/DimensionManager/[MT]/initDimension(int)/body; [CN]/ForgeHooksClient/[MT]/renderInventoryItem(RenderBlocks,RenderEngine,ItemStack,boolean,float,float,float)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [MT]/file_backup/body; [MT]/pre_decompile/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/Downloader/[MT]/requestClose(String)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/Downloader/[MT]/requestClose(String)/body; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [MT]/zip_start/body; [MT]/main/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/[FE]/amount
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [MT]/post_decompile/body; [MT]/post_decompile/parameters
R; depends-to; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/map(String)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body; [CN]/PacketModList/[MT]/readData(DataInputStream)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/GameData/[FE]/MAX_POTION_ID; [CN]/GameData/[FE]/MIN_POTION_ID
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [MT]/file_backup/parameters; [MT]/file_backup/body
R; depends-to; [MT]/get_merged_info/parameters; [MT]/main/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body; [CN]/FMLIndexedMessageToMessageCodec/[MT]/decode(ChannelHandlerContext,FMLProxyPacket,List<Object>)/body
R; depends-to; [CN]/RotationHelper/[MT]/getValidVanillaBlockRotations(Block)/body; [CN]/RotationHelper/[MT]/rotateVanillaBlock(Block,World,int,int,int,ForgeDirection)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/MultiModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/FMLModContainer/[MT]/parseSimpleFieldAnnotation(SetMultimap<String,ASMData>,String,Function<ModContainer,Object>)/body; [CN]/FMLModContainer/[MT]/bindMetadata(MetadataCollection)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ForgeVersion/[MT]/getStatus()/body; [CN]/ForgeModContainer/[CS]/ForgeModContainer()/body
R; depends-to; [CN]/Configuration/[MT]/load()/body; [CN]/Configuration/[MT]/getOrCreateBlockIdProperty(String,int)/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; package; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; package; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/CoreModManager/[MT]/loadCoreMod(LaunchClassLoader,String,File)/body; [CN]/CoreModManager/[MT]/handleLaunch(File,LaunchClassLoader,FMLTweaker)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/GuiSlotModList/[MT]/getContentHeight()/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,ResourceLocation,I)/body; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body
R; depends-to; [MT]/pre_decompile/parameters; [MT]/post_decompile/parameters
R; depends-to; [CN]/ForgeVersion/[MT]/getTarget()/body; [CN]/ForgeVersion/[MT]/startVersionCheck()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidStack/[MT]/getFluid()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; package; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidStack/[MT]/copy()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/OBJBakedModel/[MT]/getQuads(IBlockState,EnumFacing,long)/body; [CN]/UnpackedBakedQuad/[CN]/Builder/[MT]/build()/body
R; depends-to; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FluidTank/[MT]/fill(FluidStack,boolean)/body; [CN]/FluidTank/[MT]/drain(int,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; package; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/ItemData/[MT]/toString()/body; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; package; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/FMLModContainer/[MT]/getSortingRules()/body; [CN]/Loader/[MT]/sortModList()/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body; [CN]/DimensionManager/[MT]/getWorlds()/body
R; depends-to; [CN]/ForgeVersion/[MT]/startVersionCheck()/body; [CN]/ForgeModContainer/[CS]/ForgeModContainer()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/value; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/sender
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/toString()/body; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/EntityRegistry/[MT]/validateAndClaimId(int)/body; [CN]/EntityRegistry/[CS]/EntityRegistry()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,ResourceLocation,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; package
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
R; depends-to; [CN]/DimensionManager/[MT]/getWorlds()/body; [CN]/DimensionManager/[MT]/init()/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body; [CN]/BaseMod/[MT]/doTickInGame(TickType,boolean,Object,Object)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/ForgeVersion/[MT]/startVersionCheck()/body; [CN]/ForgeChunkManager/[MT]/fetchDormantChunk(long,World)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidStack/[MT]/hashCode()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [MT]/build_forge_dev/body; [MT]/main/body
R; depends-to; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body; [CN]/FMLClientHandler/[MT]/onRenderTickStart(float)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; package; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[MT]/applyModContainer(ModContainer)/body; [CN]/FMLMissingMappingsEvent/[MT]/get()/body
R; depends-to; [CN]/FMLTweaker/[MT]/getLaunchArguments()/body; [CN]/FMLTweaker/[MT]/injectIntoClassLoader(LaunchClassLoader)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/FMLLaunchHandler/[MT]/setupHome()/body; [CN]/FMLTweaker/[MT]/injectIntoClassLoader(LaunchClassLoader)/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/MCPMerger/[MT]/readMapFile(File)/body; [CN]/MCPMerger/[MT]/copyClass(ZipFile,ZipEntry,ZipOutputStream,ZipOutputStream,boolean)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; package
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters; [CN]/PlayerWakeUpEvent/[FE]/setSpawn
R; depends-to; package; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [MT]/download_minecraft/body; [MT]/file_backup/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [MT]/file_backup/body; [MT]/file_backup/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/ForgeVersion/[MT]/startVersionCheck()/body; [CN]/MinecraftForge/[MT]/initialize()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; package
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body
R; depends-to; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; package
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/configureMod()/body; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/parameters
R; depends-to; [MT]/load_mc_version/parameters; [MT]/main/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/toBytes(ByteBuf)/body; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/fromBytes(ByteBuf)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [MT]/pre_decompile/parameters; [MT]/post_decompile/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; package
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/setSpawn; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [MT]/file_backup/body; other
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/DirectoryDiscoverer/[MT]/exploreFileSystem(String,File,List<ModContainer>,ModCandidate,MetadataCollection)/body; [CN]/JarDiscoverer/[MT]/discover(ModCandidate,ASMDataTable)/body
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
R; depends-to; [CN]/OreDictionary/[MT]/getOres(String,boolean)/parameters; [CN]/OreDictionary/[MT]/doesOreNameExist(String)/parameters
R; depends-to; [CN]/BiomeManager/[MT]/addBiome(BiomeType,BiomeEntry)/body; [CN]/BiomeManager/[MT]/setupBiomes()/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/parameters; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/GameData/[MT]/set(GameData)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [MT]/file_backup/parameters; [MT]/post_decompile/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted0/body; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted1/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; package
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; package
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [MT]/finish_setup_fml/parameters; [MT]/fml_main/parameters
R; depends-to; package; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addAlias(String,String)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/fov; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidStack/[MT]/copy()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/OreDictionary/[MT]/getOres(String,boolean)/parameters; [CN]/OreDictionary/[MT]/getOres(String,boolean)/body
R; depends-to; [CN]/PacketModList/[MT]/toString(boolean)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [MT]/post_decompile/parameters; [MT]/setup_fml/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/OreDictionary/[MT]/itemMatches(ItemStack,ItemStack,boolean)/body; [CN]/OreDictionary/[MT]/initVanillaEntries()/body
R; depends-to; [CN]/GuiSlotModList/[MT]/getContentHeight()/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/BiomeDictionary/[MT]/registerBiomeType(BiomeGenBase,Type)/body; [CN]/BiomeDictionary/[MT]/makeBestGuess(BiomeGenBase)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/addTrade(int,ITradeList)/body; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/getTrades(int)/body
R; depends-to; [CN]/GameData/[FE]/MIN_ITEM_ID; [CN]/GameData/[FE]/MAX_BLOCK_ID
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [MT]/setup_fml/parameters; [MT]/pre_decompile/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/ModLoader/[MT]/sendPacket(Packet)/body; [CN]/ModLoader/[MT]/addArmor(String)/body
R; depends-to; [CN]/FMLConfigGuiFactory/[MT]/runtimeGuiCategories()/body; [CN]/FMLConfigGuiFactory/[MT]/getHandlerFor(RuntimeOptionCategoryElement)/body
R; depends-to; [CN]/ModTextureStatic/[MT]/func_76846_a()/parameters; [CN]/ModTextureStatic/[MT]/func_76845_a(RenderEngine)/parameters
R; depends-to; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body; [CN]/FMLClientHandler/[MT]/onPreWorldTick()/body
R; depends-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/GuiSlotModList/[MT]/getContentHeight()/body; [CN]/FMLCommonHandler/[MT]/loadMetadataFor(ModContainer)/body
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; package; [CN]/LivingHealEvent/[FE]/amount
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/sender; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/value
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/ModelLoader/[MT]/registerVariant(ModelBlockDefinition,ModelResourceLocation)/body; [CN]/ModelLoader/[MT]/setupModelRegistry()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; package
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/AttachCapabilitiesEvent/[CN]/World/[CS]/World(net.minecraft.world.World)/body; [CN]/AttachCapabilitiesEvent/[CN]/World/extend
R; depends-to; [MT]/file_backup/parameters; [MT]/download_minecraft/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/extend
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/LivingHealEvent/[FE]/amount; [CN]/LivingHealEvent/extend
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; package
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body; [CN]/FMLClientHandler/[MT]/onRenderTickStart(float)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; package; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; package
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addAlias(String,String)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/AccessTransformer/[CS]/AccessTransformer()/body; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body
R; depends-to; [CN]/GameData/[MT]/isModIgnoredForIdValidation(String)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/ForgeChunkManager/[MT]/fetchDormantChunk(long,World)/body; [CN]/ForgeVersion/[MT]/startVersionCheck()/body
R; depends-to; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body
R; depends-to; [CN]/BaseMod/[MT]/doTickInGUI(TickType,boolean,Object,Object)/body; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body
R; depends-to; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/map(String)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; package
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/NetworkDispatcher/[MT]/handleServerSideCustomPacket(C17PacketCustomPayload,ChannelHandlerContext)/body; [CN]/NetworkDispatcher/[MT]/handleClientSideCustomPacket(S3FPacketCustomPayload,ChannelHandlerContext)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/DimensionManager/[MT]/getIDs()/body; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[FE]/difference
R; depends-to; [MT]/finish_setup_fml/parameters; other
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters; [CN]/ModLoaderModContainer/[MT]/toString()/body
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body
R; depends-to; [CN]/EntityRegistry/[CS]/EntityRegistry()/body; [CN]/EntityRegistry/[MT]/validateAndClaimId(int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/NetworkDispatcher/[MT]/channelRead0(ChannelHandlerContext,Packet)/body; [CN]/NetworkDispatcher/[MT]/completeHandshake(Side)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body; [CN]/FMLRelauncher/[MT]/showWindow(boolean)/body
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; other; [MT]/make_changelog/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/FMLModContainer/[MT]/getSortingRules()/body; [CN]/FMLModContainer/[MT]/bindMetadata(MetadataCollection)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; package; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int,int,int)/body; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/GameData/[FE]/MIN_POTION_ID; [CN]/GameData/[FE]/MAX_POTION_ID
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/ModelLoader/[CN]/UVLock/[MT]/apply(IModelPart)/body; [CN]/ModelLoader/[CN]/UVLock/[CS]/UVLock(IModelState)/parameters
R; depends-to; [CN]/FMLTweaker/[MT]/injectIntoClassLoader(LaunchClassLoader)/body; [CN]/FMLTweaker/[MT]/acceptOptions(List<String>,File,File,String)/body
R; depends-to; [CN]/Loader/[MT]/loadMods()/body; [CN]/Loader/[MT]/preinitializeMods()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/setSpawn; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters; [CN]/PlayerWakeUpEvent/[FE]/updateWorld
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body; [CN]/FMLClientHandler/[MT]/onPreWorldTick()/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/GameData/[FE]/MIN_BLOCK_ID; [CN]/GameData/[FE]/MIN_ITEM_ID
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/ForgeChunkManager/[MT]/saveWorld(World)/body; [CN]/ForgeChunkManager/[MT]/loadWorld(World)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [MT]/pre_decompile/parameters; [MT]/pre_decompile/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/AttachCapabilitiesEvent/[CN]/World/extend; [CN]/AttachCapabilitiesEvent/[CN]/World/[CS]/World(net.minecraft.world.World)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/ModListHelper/[MT]/tryAddFile(String,File,String)/body; [CN]/CoreModManager/[MT]/discoverCoreMods(File,LaunchClassLoader)/body
R; depends-to; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/runTransformers(String,String,byte[])/body; [CN]/RelaunchClassLoader/[MT]/findClass(String)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters; package
R; depends-to; [CN]/LiquidStack/[MT]/hashCode()/body; [CN]/LiquidStack/[MT]/equals(Object)/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; package
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [MT]/post_decompile/parameters; [MT]/setup_fml/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
R; depends-to; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/sender; [CN]/FMLInterModComms/[MT]/sendMessage(String,String,String)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/LanguageRegistry/[MT]/getStringLocalization(String)/body; [CN]/LanguageRegistry/[MT]/reloadLanguageTable()/body
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; package
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[MT]/get()/body; [CN]/FMLMissingMappingsEvent/[MT]/applyModContainer(ModContainer)/body
R; depends-to; package; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/WorldRendererConsumer/[FE]/offset
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body
R; depends-to; [CN]/MCPMerger/[CN]/MethodWrapper/[MT]/equals(Object)/body; [CN]/MCPMerger/[MT]/processMethods(ClassNode,ClassNode,ClassInfo)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; package; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/body; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidID(Fluid)/body; [CN]/FluidRegistry/[MT]/getFluidID(String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/GameData/[FE]/MAX_BLOCK_ID; [CN]/GameData/[MT]/fixBrokenIds(Map<String,Integer>,Set<Integer>)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/DimensionManager/[MT]/getNextFreeDimId()/body; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/CoreModManager/[MT]/handleLaunch(File,LaunchClassLoader,FMLTweaker)/body; [CN]/CoreModManager/[MT]/injectTransformers(LaunchClassLoader)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [CN]/OreDictionary/[MT]/doesOreNameExist(String)/parameters; [CN]/OreDictionary/[MT]/getOres(String,boolean)/parameters
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/GameData/[FE]/MAX_BLOCK_ID; [CN]/GameData/[FE]/MAX_ITEM_ID
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; package; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/BiomeManager/[MT]/removeBiome(BiomeType,BiomeEntry)/body; [CN]/BiomeManager/[MT]/addBiome(BiomeType,BiomeEntry)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [MT]/post_decompile/body; [MT]/pre_decompile/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body
R; depends-to; [CN]/DungeonLoot/[MT]/generateStack(Random)/body; [CN]/DungeonLoot/[MT]/equals(ItemStack,int,int)/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/AccessTransformer/[CS]/AccessTransformer()/body; [CN]/AccessTransformer/[MT]/readMapFile(String)/body
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [MT]/finish_setup_fml/parameters; [MT]/setup_fml/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body; [CN]/LivingHealEvent/extend
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [MT]/apply_patches/body; [MT]/apply_patches/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; package; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/ModTextureStatic/[MT]/toString()/body; [CN]/ModTextureAnimation/[CS]/ModTextureAnimation(int,int,String,BufferedImage,int)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; package; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; package; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
R; depends-to; other; [MT]/build_forge_dev/body
R; depends-to; [CN]/CommandTreeBase/[MT]/getTabCompletionOptions(MinecraftServer,ICommandSender,String[],BlockPos)/body; [CN]/CommandTreeBase/[MT]/isUsernameIndex(String[],int)/body
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ForgeVersion/[MT]/startVersionCheck()/body; [CN]/ForgeVersion/[MT]/getTarget()/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; [CN]/GameData/[MT]/processIdRematches(Iterable<MissingMapping>,boolean,GameData,Map<String,Integer[]>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/LiquidStack/[MT]/equals(Object)/body; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body
R; depends-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters
R; depends-to; [CN]/NetworkDispatcher/[MT]/completeHandshake(Side)/body; [CN]/NetworkDispatcher/[MT]/channelRead0(ChannelHandlerContext,Packet)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; package; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidStack/[MT]/getFluid()/body
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/ShapedOreRecipe/[CS]/ShapedOreRecipe(ItemStack,Object)/body; [CN]/OreDictionary/[MT]/initVanillaEntries()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/CommandTreeBase/[MT]/getSubCommands()/body; [CN]/CommandTreeBase/[MT]/isUsernameIndex(String[],int)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/body; [CN]/ModLoaderModContainer/[MT]/configureMod()/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; package; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [MT]/decompile_minecraft/body; [MT]/read_mc_versions/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters; [CN]/LivingHealEvent/extend
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/FMLInterModComms/[MT]/sendMessage(String,String,String)/body; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/value
R; depends-to; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
R; depends-to; [CN]/RenderPlayerEvent/[CN]/SetArmorModel/[CS]/SetArmorModel(EntityPlayer,RenderPlayer,int,float,ItemStack)/body; [CN]/RenderPlayerEvent/[CN]/Specials/[CS]/Specials(EntityPlayer,RenderPlayer,float)/body
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body
R; depends-to; package; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/LivingHealEvent/extend; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body
R; depends-to; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body
R; depends-to; [CN]/FMLModContainer/[MT]/setMetadata(ModMetadata)/body; [CN]/FMLModContainer/[MT]/getMetadata()/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; package
R; depends-to; [MT]/setup_fml/parameters; [MT]/finish_setup_fml/parameters
R; depends-to; [CN]/GameData/[MT]/registerItem(Item,String)/body; [CN]/GameData/[MT]/registerBlock(Block,String)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [MT]/download_mcp/parameters; other
R; depends-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/FOVUpdateEvent/extend; [CN]/FOVUpdateEvent/[FE]/newfov
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/LivingHealEvent/extend; package
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/GameRegistry/[MT]/onPlayerRespawn(EntityPlayer)/body; [CN]/GameRegistry/[MT]/onPlayerLogout(EntityPlayer)/body
R; depends-to; [MT]/file_backup/parameters; other
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[FE]/MAX_BLOCK_ID; [CN]/GameData/[FE]/MIN_BLOCK_ID
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body; [CN]/PacketModList/[MT]/readData(DataInputStream)/body
R; depends-to; [MT]/fml_main/parameters; [MT]/fml_main/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/loadDummied(Set<ResourceLocation>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/markDummy(ResourceLocation,Integer,I)/body
R; depends-to; [CN]/PacketModList/[MT]/readData(DataInputStream)/body; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; package
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; package
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/FMLServerHandler/[MT]/queryUser(StartupQuery)/body; [CN]/LoadController/[MT]/buildModList(FMLLoadEvent)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ModTextureStatic/[MT]/func_76846_a()/parameters; [CN]/ModTextureStatic/[MT]/func_76846_a()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[FE]/MAX_ITEM_ID; [CN]/GameData/[FE]/MAX_BLOCK_ID
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/ModClassLoader/[MT]/addFile(File)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/ClassPatchManager/[MT]/readPatch(JarEntry,JarInputStream)/body; [CN]/ClassPatchManager/[MT]/applyPatch(String,String,byte[])/body
R; depends-to; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body
R; depends-to; [CN]/ModelLoader/[MT]/loadItemModels()/body; [CN]/ModelLoader/[MT]/setupModelRegistry()/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; package
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/WorldRendererConsumer/[FE]/offset
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidStack/[MT]/getFluid()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body; [CN]/GuiControlsScrollPanel/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; package; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body
R; depends-to; [MT]/extract_fml_obfed/parameters; [MT]/main/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
R; depends-to; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body; [CN]/DeobfuscationTransformer/[MT]/unmapClassName(String)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; package
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; package; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; package
R; depends-to; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body; [CN]/GuiModList/[MT]/func_6448_a()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/GameRegistry/[MT]/onPlayerLogin(EntityPlayer)/body; [CN]/GameRegistry/[MT]/onPlayerRespawn(EntityPlayer)/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body
R; depends-to; [CN]/Downloader/[MT]/makeHeadless()/body; [CN]/Downloader/[MT]/makeDialog()/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/OreDictionary/[MT]/doesOreNameExist(String)/parameters; [CN]/OreDictionary/[MT]/getOres(String,boolean)/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [MT]/download_minecraft/body; [MT]/file_backup/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body
R; depends-to; [CN]/ModTextureStatic/[MT]/func_76845_a(RenderEngine)/parameters; [CN]/ModTextureStatic/[MT]/func_76846_a()/parameters
R; depends-to; [CN]/Property/[MT]/setName(String)/body; [CN]/ConfigCategory/[MT]/setComment(String)/body
R; depends-to; [CN]/DispenseFluidContainer/[MT]/fillContainer(IBlockSource,ItemStack)/body; [CN]/DispenseFluidContainer/[MT]/dumpContainer(IBlockSource,ItemStack)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; package
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/GameData/[FE]/MAX_ITEM_ID; [CN]/GameData/[FE]/MIN_BLOCK_ID
R; depends-to; [CN]/LoadController/[MT]/buildModList(FMLLoadEvent)/body; [CN]/FMLServerHandler/[MT]/queryUser(StartupQuery)/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; [CN]/GuiScrollingList/[MT]/overlayBackground(int,int,int,int)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/DefaultArtifactVersion/[MT]/getVersionString()/body; [CN]/Loader/[MT]/sortModList()/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[FE]/MIN_ITEM_ID; [CN]/GameData/[FE]/MAX_ITEM_ID
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [MT]/extract_fml_obfed/parameters; [MT]/extract_fml_obfed/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [MT]/download_minecraft/body; [MT]/pre_decompile/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; package
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body
R; depends-to; [CN]/GuiModList/[MT]/selectModIndex(int)/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; package; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/PlaySoundAtEntityEvent/[FE]/newPitch; [CN]/PlaySoundAtEntityEvent/[FE]/newVolume
R; depends-to; [CN]/GameData/[FE]/shouldContinue; package
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidStack/[MT]/copy()/body
R; depends-to; [CN]/GameData/[FE]/MIN_BIOME_ID; [CN]/GameData/[FE]/MAX_BIOME_ID
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body; [CN]/GuiModList/[MT]/func_6448_a()/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int)/body; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int,int,int)/body
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/attemptFileLoad(File)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; package; [CN]/GameData/[FE]/difference
R; depends-to; [MT]/download_minecraft/body; [MT]/download_file/parameters
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/DimensionManager/[MT]/getWorlds()/body; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [CN]/ModelLoader/[CN]/WeightedRandomModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
R; depends-to; [MT]/getBuildInfo/parameters; [MT]/make_changelog/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/ModClassLoader/[FE]/mainClassLoader
R; depends-to; [CN]/FOVUpdateEvent/extend; [CN]/FOVUpdateEvent/[FE]/fov
R; depends-to; [CN]/BiomeManager/[MT]/removeBiome(BiomeType,BiomeEntry)/body; [CN]/BiomeManager/[MT]/setupBiomes()/body
R; depends-to; [MT]/download_file/body; [MT]/file_backup/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/NetworkDispatcher/[MT]/handleClientSideCustomPacket(S3FPacketCustomPayload,ChannelHandlerContext)/body; [CN]/NetworkDispatcher/[MT]/handleServerSideCustomPacket(C17PacketCustomPayload,ChannelHandlerContext)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/load()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; package
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/GameData/[MT]/register(Object,String,int)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body; [CN]/FMLClientHandler/[MT]/onPreWorldTick()/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body
R; depends-to; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/FMLNetworkHandler/[MT]/handleClientConnection(NetLoginHandler,MinecraftServer,SocketAddress,String)/body
R; depends-to; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/body; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/parameters
R; depends-to; package; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body; [CN]/Downloader/[MT]/requestClose(String)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/FMLNetworkHandler/[MT]/handleClientConnection(NetLoginHandler,MinecraftServer,SocketAddress,String)/body; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; [CN]/FOVUpdateEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidID(String)/body; [CN]/FluidRegistry/[MT]/getFluidID(Fluid)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/FMLModContainer/[MT]/getMetadata()/body; [CN]/FMLModContainer/[MT]/setMetadata(ModMetadata)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [MT]/download_minecraft/body; other
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/fromBytes(ByteBuf)/body; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/toBytes(ByteBuf)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/GameRegistry/[MT]/getRegistry().conflicted1/body; [CN]/GameRegistry/[MT]/getRegistry().conflicted0/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/setSpawn; [CN]/PlayerWakeUpEvent/[FE]/updateWorld
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/GameData/[FE]/MIN_ITEM_ID; [CN]/GameData/[MT]/fixBrokenIds(Map<String,Integer>,Set<Integer>)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/MAX_ITEM_ID; [CN]/GameData/[FE]/MIN_ITEM_ID
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [MT]/pre_decompile/parameters; [MT]/setup_fml/parameters
R; depends-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; package
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly; [CN]/PlayerWakeUpEvent/[FE]/setSpawn
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/ModLoader/[MT]/addArmor(String)/body; [CN]/ModLoader/[MT]/sendPacket(Packet)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/GameData/[MT]/registerBlock(Block,String)/body; [CN]/GameData/[MT]/registerItem(Item,String)/body
R; depends-to; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; package
R; depends-to; [CN]/RenderingRegistry/[MT]/addTextureOverride(String,String)/body; [CN]/RenderingRegistry/[MT]/getUniqueTextureIndex(String)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/explosion; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/WorldRendererConsumer/[FE]/offset; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body
R; depends-to; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters; [CN]/ModLoaderModContainer/[MT]/toString()/body
R; depends-to; [CN]/ForgeVersion/[MT]/getStatus()/body; [CN]/ForgeVersion/[MT]/startVersionCheck()/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
R; depends-to; [CN]/PacketHandlerClient/[MT]/onPacketData(NetworkManager,String,byte[])/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mergeSuperMaps(String,String,String[])/body
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [MT]/apply_fml_patches/parameters; [MT]/apply_fml_patches/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[FE]/serverValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body; [CN]/BaseMod/[MT]/doTickInGame(TickType,boolean,Object,Object)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/FMLClientHandler/[MT]/trackMissingTexture(ResourceLocation)/body; [CN]/FMLClientHandler/[MT]/logMissingTextureErrors()/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/TechneModel/[MT]/loadTechneModel(URL)/body; [CN]/TechneModel/[MT]/bindTexture()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidStack/[MT]/hashCode()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body
R; depends-to; [CN]/LivingHealEvent/extend; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body
R; depends-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [MT]/file_backup/body; [MT]/setup_fml/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; package
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; package; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/RelaunchClassLoader/[FE]/sources
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [MT]/post_decompile/body; [MT]/setup_fml/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/WorldRendererConsumer/[FE]/offset
R; depends-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [CN]/ModelLoader/[CN]/UVLock/[CS]/UVLock(IModelState)/parameters; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body
R; depends-to; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[MT]/getLength()/parameters
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/newfov; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/updateWorld; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/postModInit()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/setSpawn; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters
R; depends-to; [CN]/TechneModel/[MT]/renderPart(String)/body; [CN]/TechneModel/[MT]/bindTexture()/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body
R; depends-to; [CN]/ModelLoader/[CN]/UVLock/[CS]/UVLock(IModelState)/parameters; [CN]/ModelLoader/[CN]/UVLock/[MT]/apply(IModelPart)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/ModTextureStatic/[MT]/toString()/body; [CN]/ModTextureStatic/[CS]/ModTextureStatic(int,int,String,BufferedImage)/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; package
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body
R; depends-to; [CN]/Configuration/[MT]/getOrCreateProperty(String,String,String)/body; [CN]/Configuration/[MT]/load()/body
R; depends-to; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/ModTextureStatic/[MT]/func_76846_a()/body; [CN]/ModTextureStatic/[MT]/func_76845_a(RenderEngine)/parameters
R; depends-to; package; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [MT]/download_file/parameters; [MT]/file_backup/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [MT]/post_decompile/body; [MT]/file_backup/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/FOVUpdateEvent/[FE]/entity; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/ModClassLoader/[FE]/mainClassLoader; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body; [CN]/DimensionManager/[MT]/getNextFreeDimId()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body
R; depends-to; [CN]/GameRegistry/[MT]/onPlayerRespawn(EntityPlayer)/body; [CN]/GameRegistry/[MT]/onPlayerLogin(EntityPlayer)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body
R; depends-to; package; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [MT]/post_decompile/parameters; [MT]/pre_decompile/parameters
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/CommandTreeBase/[MT]/getSubCommands()/body; [CN]/CommandTreeBase/[MT]/getTabCompletionOptions(MinecraftServer,ICommandSender,String[],BlockPos)/body
R; depends-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addAlias(String,String)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body
R; depends-to; [CN]/RelaunchClassLoader/[FE]/sources; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body
R; depends-to; [MT]/build_installer/parameters; [MT]/main/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[FE]/isSaveValid
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/MAX_BLOCK_ID; [CN]/GameData/[FE]/MIN_ITEM_ID
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/unmap(String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/map(String)/body
R; depends-to; package; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; package
R; depends-to; [MT]/post_decompile/body; [MT]/file_backup/body
R; depends-to; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; package
R; depends-to; [CN]/ForgeVersion/[MT]/startVersionCheck()/body; [CN]/ForgeVersion/[MT]/getStatus()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; package; [CN]/FOVUpdateEvent/[FE]/entity
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/Loader/[MT]/serverStopping()/body; [CN]/Loader/[MT]/serverStopped()/body
R; depends-to; [CN]/TechneModel/[MT]/loadTechneModel(URL)/body; [CN]/TechneModel/[MT]/renderPart(String)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/body
R; depends-to; [CN]/RenderingRegistry/[MT]/getUniqueTextureIndex(String)/body; [CN]/RenderingRegistry/[MT]/addTextureOverride(String,String)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/updateWorld; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/BlockFluidClassic/[MT]/canFlowInto(IBlockAccess,int,int,int)/body; [CN]/BlockFluidBase/[MT]/displaceIfPossible(World,int,int,int)/body
R; depends-to; [CN]/LivingHealEvent/[FE]/amount; package
R; depends-to; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModListRequestPacket/[MT]/consumePacket(byte[])/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/FMLClientHandler/[MT]/enhanceServerListEntry(ServerListEntryNormal,ServerData,int,int,int,int,int)/body; [CN]/FMLClientHandler/[MT]/bindServerListData(ServerData,ServerStatusResponse)/body
R; depends-to; [CN]/ForgeVersion/[MT]/getTarget()/body; [CN]/ForgeModContainer/[CS]/ForgeModContainer()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/BlockFluidBase/[MT]/displaceIfPossible(World,int,int,int)/body; [CN]/BlockFluidClassic/[MT]/canFlowInto(IBlockAccess,int,int,int)/body
R; depends-to; [CN]/PotionBrewEvent/extend; [CN]/PotionBrewEvent/[MT]/getLength()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [MT]/download_minecraft/body; [MT]/download_file/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/LivingHealEvent/extend; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters
R; depends-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/FMLModContainer/[MT]/parseSimpleFieldAnnotation(SetMultimap<String,ASMData>,String,Function<ModContainer,Object>)/body; [CN]/FMLModContainer/[MT]/constructMod(FMLConstructionEvent)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/GameRegistry/[MT]/registerItem(Item,String)/body; [CN]/GameRegistry/[MT]/registerItem(Item)/body
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/value; [CN]/FMLInterModComms/[MT]/sendMessage(String,String,String)/body
R; depends-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewedEvent/extend
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body
R; depends-to; [CN]/PotionBrewedEvent/extend; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [MT]/runcmd/body; [MT]/setup_mcp/body
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[FE]/world
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[FE]/idMap
R; depends-to; other; [CN]/Loader/[FE]/mccversion
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [CN]/GameRegistry/[MT]/registerItem(Item)/body; [CN]/GameRegistry/[MT]/registerItem(Item,String)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/ModClassLoader/[MT]/getParentSources()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[FE]/difference
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/extend
R; depends-to; [CN]/DungeonLoot/[MT]/equals(ItemStack,int,int)/body; [CN]/DungeonLoot/[MT]/equals(ItemStack)/body
R; depends-to; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int)/body; [MT]/setup_fml/body
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[FE]/offset
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; [CN]/Loader/[MT]/preModInit()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/OBJBakedModel/[MT]/getQuads(IBlockState,EnumFacing,long)/body; [CN]/BakedFluid/[CS]/BakedFluid(Optional<TRSRTransformation>,ImmutableMap<TransformType,TRSRTransformation>,VertexFormat,int,TextureAtlasSprite,TextureAtlasSprite,boolean,boolean,int[],int)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; package; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters
R; depends-to; [CN]/GameData/[FE]/isSaveValid; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/TechneModel/[MT]/bindTexture()/body; [CN]/TechneModel/[MT]/loadTechneModel(URL)/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/ForgeModContainer/[CS]/ForgeModContainer()/body; [CN]/ForgeVersion/[MT]/startVersionCheck()/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [MT]/fml_main/body; other
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/initializeServerGate(int)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/GameData/[FE]/clientValidationLatch; [CN]/GameData/[FE]/idMap
R; depends-to; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/GuiModList/[MT]/func_6448_a()/body; [CN]/FMLCommonHandler/[MT]/getBrandingStrings(String)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body
R; depends-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; [CN]/GameData/[MT]/releaseGate(boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; package
R; depends-to; [CN]/ForgeMessage/[CN]/FluidIdMapMessage/[MT]/toBytes(ByteBuf)/body; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body
R; depends-to; [MT]/post_decompile/body; [MT]/finish_setup_fml/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [MT]/fml_main/parameters; other
R; depends-to; [CN]/FMLModContainer/[MT]/parseSimpleFieldAnnotation(SetMultimap<String,ASMData>,String,Function<ModContainer,Object>)/body; [CN]/FMLModContainer/[MT]/gatherAnnotations(Class<?>)/body
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body
R; depends-to; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; package
R; depends-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body
R; depends-to; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body; [CN]/ModLoaderHelper/[MT]/updateGUITicks(BaseMod,boolean,boolean)/body
R; depends-to; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body; [CN]/AccessTransformer/[CS]/AccessTransformer()/body
R; depends-to; [CN]/GameData/[FE]/shouldContinue; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters
R; depends-to; [CN]/ExplosionEvent/extend; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ModAccessTransformer/[CS]/ModAccessTransformer()/body; [CN]/ModAccessTransformer/[MT]/addJar(JarFile)/body
R; depends-to; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/body; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body
R; depends-to; package; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/FMLInterModComms/[MT]/sendMessage(String,String,String)/body; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/sender
R; depends-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
R; depends-to; [CN]/BakedFluid/[MT]/putVertex(UnpackedBakedQuad.Builder,EnumFacing,float,float,float,float,float)/body; [CN]/BakedFluid/[CS]/BakedFluid(Optional<TRSRTransformation>,ImmutableMap<TransformType,TRSRTransformation>,VertexFormat,int,TextureAtlasSprite,TextureAtlasSprite,boolean,boolean,int[],int)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [MT]/post_decompile/body; [MT]/setup_fml/parameters
R; depends-to; [CN]/BakedFluid/[CS]/BakedFluid(Optional<TRSRTransformation>,ImmutableMap<TransformType,TRSRTransformation>,VertexFormat,int,TextureAtlasSprite,TextureAtlasSprite,boolean,boolean,int[],int)/body; [CN]/BakedFluid/[MT]/putVertex(UnpackedBakedQuad.Builder,EnumFacing,float,float,float,float,float)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body; [CN]/FMLClientHandler/[MT]/onPreWorldTick()/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/GameData/[MT]/releaseGate(boolean)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[FE]/clientValidationLatch
R; depends-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; [CN]/FluidStack/[MT]/getFluid()/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/extend; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters
R; depends-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; package; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; [CN]/PotionBrewEvent/[FE]/stacks
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Start/extend
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body
R; depends-to; [CN]/DungeonLoot/[MT]/equals(ItemStack)/body; [CN]/DungeonLoot/[MT]/generateStack(Random)/body
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body
R; depends-to; [CN]/GameData/[FE]/difference; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [MT]/download_file/body; [MT]/pre_decompile/body
R; depends-to; [CN]/PotionBrewEvent/[FE]/stacks; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body
R; depends-to; [CN]/ObjectHolderRef/[MT]/getRegistryForType(Field)/body; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,ResourceLocation,boolean)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body
R; depends-to; [CN]/Configuration/[MT]/load()/body; [CN]/Configuration/[MT]/save()/body
R; depends-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; package
R; depends-to; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/body; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body
R; depends-to; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body
R; depends-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body
R; depends-to; [CN]/GameData/[FE]/idMap; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body
R; depends-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body
R; depends-to; [CN]/FluidStack/[MT]/copy()/body; [CN]/FluidStack/[MT]/hashCode()/body
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body
R; depends-to; [CN]/ObjectHolderRef/[MT]/apply()/body; [CN]/ObjectHolderRef/[MT]/getRegistryForType(Field)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body
R; depends-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/Loader/[MT]/load()/body; [CN]/Loader/[MT]/attemptDirLoad(File)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters
R; depends-to; [CN]/ExplosionEvent/[FE]/world; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body
R; depends-to; [CN]/ASMModParser/[CS]/ASMModParser(InputStream)/body; [CN]/JarDiscoverer/[MT]/discover(ModCandidate,ASMDataTable)/body
R; depends-to; package; [CN]/ExplosionEvent/extend
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body
R; depends-to; [CN]/OreDictionary/[MT]/getOres(String,boolean)/body; [CN]/OreDictionary/[MT]/getOres(String,boolean)/parameters
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; [CN]/GuiScrollingList/[MT]/overlayBackground(int,int,int,int)/body
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/PacketModList/[MT]/readData(DataInputStream)/body; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body
R; depends-to; [CN]/CoreModManager/[MT]/handleLaunch(File,LaunchClassLoader,FMLTweaker)/body; [CN]/CoreModManager/[MT]/loadCoreMod(LaunchClassLoader,String,File)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; package
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/ModClassLoader/[MT]/loadClass(String)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body
R; depends-to; [CN]/FMLCommonHandler/[MT]/tickEnd(TickType,Object)/body; [CN]/FMLCommonHandler/[MT]/tickStart(TickType,Object)/body
R; depends-to; [CN]/Loader/[MT]/initializeMods()/body; [CN]/Loader/[MT]/modInit()/body
R; depends-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; [CN]/RelaunchClassLoader/[MT]/getSources()/body
R; depends-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body
R; depends-to; [CN]/PlayerWakeUpEvent/[FE]/updateWorld; [CN]/PlayerWakeUpEvent/[FE]/setSpawn
R; depends-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; [CN]/PotionBrewEvent/[CN]/Pre/extend
R; depends-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; [CN]/VertexLighterFlat/[MT]/processQuad()/body
R; depends-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body
R; depends-to; [CN]/Loader/[MT]/loadMods()/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; [CN]/ExplosionEvent/[CN]/Detonate/extend
R; depends-to; [CN]/DungeonLoot/[MT]/generateStack(Random)/body; [CN]/DungeonLoot/[MT]/equals(ItemStack)/body
R; depends-to; [CN]/Loader/[MT]/postModInit()/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/DimensionManager/[MT]/init()/body; [CN]/DimensionManager/[MT]/getIDs()/body
R; depends-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body
R; depends-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body
R; depends-to; [MT]/build_installer/parameters; other
R; depends-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters
R; depends-to; [CN]/Loader/[MT]/modInit()/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body
R; depends-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters
R; depends-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/extend; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters
R; depends-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters
R; depends-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; [CN]/GameData/[MT]/initializeServerGate(int)/body
R; depends-to; [CN]/DimensionManager/[MT]/getIDs()/body; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; depends-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters
R; depends-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/decode(ChannelHandlerContext,FMLProxyPacket,List<Object>)/body; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body
R; depends-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters
R; depends-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body
R; depends-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters
R; depends-to; [CN]/FluidStack/[MT]/hashCode()/body; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/loadModClass(File,String,String)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters
R; depends-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body
R; depends-to; [CN]/GameData/[MT]/registerItem(Item,String,int)/body; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body
R; depends-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters
R; depends-to; package; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body
R; depends-to; [CN]/Loader/[MT]/preModInit()/body; [CN]/Loader/[MT]/initializeMods()/body
R; depends-to; [CN]/FluidStack/[MT]/getFluid()/body; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body
R; depends-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters
R; depends-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; [CN]/PotionBrewEvent/[CN]/Post/extend
R; depends-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; [CN]/ExplosionEvent/[FE]/explosion
R; depends-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; [CN]/GameData/[FE]/shouldContinue
R; depends-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/newItemAdded(Item)/parameters
R; depends-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; [CN]/GameData/[MT]/newItemAdded(Item)/body
R; depends-to; [CN]/ForgeChunkManager/[MT]/releaseTicket(Ticket)/body; [CN]/ForgeChunkManager/[MT]/loadWorld(World)/body
R; depends-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body
R; depends-to; [CN]/GameData/[FE]/serverValidationLatch; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters
R; pertains-to; [MT]/download_file/body; fml.py
R; pertains-to; [CN]/FMLDummyContainer/[MT]/getDataForWriting(SaveHandler,WorldInfo)/body; FMLDummyContainer.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/LiquidStack/[MT]/loadLiquidStackFromNBT(NBTTagCompound)/body; LiquidStack.java
R; pertains-to; [CN]/CommandTreeBase/[MT]/isUsernameIndex(String[],int)/body; src_main_java_net_minecraftforge_server_command_CommandTreeBase.java
R; pertains-to; [CN]/PotionBrewEvent/[MT]/getLength()/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/ExplosionEvent/[FE]/explosion; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/parameters; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onExplosionDetonate(World,Explosion,List<Entity>,double)/parameters; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; package; src_main_java_net_minecraftforge_event_entity_living_LivingHealEvent.java
R; pertains-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapFieldName(String,String,String)/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [CN]/PotionBrewEvent/[FE]/stacks; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/PotionBrewedEvent/[CS]/PotionBrewedEvent(ItemStack[])/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewedEvent.java
R; pertains-to; [CN]/RelaunchClassLoader/[FE]/sources; RelaunchClassLoader.java
R; pertains-to; [CN]/GuiConfigEntries/[CN]/ListEntryBase/[CS]/ListEntryBase(GuiConfig,GuiConfigEntries,IConfigElement)/body; src_main_java_net_minecraftforge_fml_client_config_GuiConfigEntries.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/repeatings; KeyBindingRegistry.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderExperience(int,int)/body; GuiIngameForge.java
R; pertains-to; package; FOVUpdateEvent.java
R; pertains-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/parameters; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/Downloader/[MT]/makeDialog()/body; Downloader.java
R; pertains-to; [CN]/FMLCommonHandler/[MT]/handleWorldDataLoad(SaveHandler,WorldInfo,NBTTagCompound)/body; src_main_java_cpw_mods_fml_common_FMLCommonHandler.java
R; pertains-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/parameters; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/parameters; GameData.java
R; pertains-to; [CN]/BaseMod/[MT]/doTickInGUI(TickType,boolean,Object,Object)/body; BaseMod.java
R; pertains-to; [CN]/GameData/[FE]/clientValidationLatch; GameData.java
R; pertains-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/body; src_main_java_net_minecraftforge_fml_client_config_GuiUtils.java
R; pertains-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/body; src_main_java_net_minecraftforge_event_entity_living_LivingHealEvent.java
R; pertains-to; [CN]/GameData/[FE]/difference; GameData.java
R; pertains-to; [CN]/ItemLayerModel/[MT]/getQuadsForSprite(int,TextureAtlasSprite,VertexFormat,TRSRTransformation)/body; src_main_java_net_minecraftforge_client_model_ItemLayerModel.java
R; pertains-to; [CN]/ModClassLoader/[MT]/getParentSources()/body; ModClassLoader.java
R; pertains-to; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/parameters; src_main_java_cpw_mods_fml_common_registry_GameRegistry.java
R; pertains-to; [CN]/GameData/[MT]/releaseGate(boolean)/body; GameData.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ConfigCategory/[MT]/setComment(String)/body; src_main_java_net_minecraftforge_common_config_ConfigCategory.java
R; pertains-to; [CN]/GameData/[FE]/serverValidationLatch; GameData.java
R; pertains-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/parameters; GameData.java
R; pertains-to; [CN]/FluidStack/[CS]/FluidStack(FluidStack,int)/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/PotionBrewEvent/[MT]/setItem(int,ItemStack)/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted0/body; src_main_java_net_minecraftforge_fml_client_GuiModList.java
R; pertains-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/body; GameData.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderGameOverlay(float,boolean,int,int)/body; GuiIngameForge.java
R; pertains-to; [CN]/PotionBrewEvent/[CN]/Post/extend; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GameRegistry/[MT]/register(K,ResourceLocation)/body; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/parameters; KeyBindingRegistry.java
R; pertains-to; [CN]/GameData/[MT]/releaseGate(boolean)/parameters; GameData.java
R; pertains-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; ModLoaderKeyBindingHandler.java
R; pertains-to; [CN]/FakePlayer/extend; FakePlayer.java
R; pertains-to; [MT]/post_decompile/parameters; fml.py
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/body; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/WorldRendererConsumer/[FE]/offset; src_main_java_net_minecraftforge_client_model_pipeline_WorldRendererConsumer.java
R; pertains-to; [CN]/FOVUpdateEvent/[FE]/entity; FOVUpdateEvent.java
R; pertains-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; ModLoaderKeyBindingHandler.java
R; pertains-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/body; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/parameters; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GameData/[FE]/MIN_ITEM_ID; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/GameData/[FE]/shouldContinue; GameData.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/parameters; ModLoaderModContainer.java
R; pertains-to; [CN]/ForgeChunkManager/[MT]/captureConfig(File)/body; ForgeChunkManager.java
R; pertains-to; [CN]/ExplosionEvent/[CS]/ExplosionEvent(World,Explosion)/parameters; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onPotionAttemptBreaw(ItemStack[])/parameters; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/ModIdMapPacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; ModIdMapPacket.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/parameters; KeyBindingRegistry.java
R; pertains-to; [CN]/ModLoaderConnectionHandler/[MT]/connectionOpened(NetHandler,String,int,NetworkManager)/body; ModLoaderConnectionHandler.java
R; pertains-to; [CN]/GameData/[FE]/idMap; GameData.java
R; pertains-to; [CN]/PotionBrewEvent/[MT]/getLength()/parameters; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GuiScrollingList/[MT]/overlayBackground(int,int,int,int)/body; src_main_java_net_minecraftforge_fml_client_GuiScrollingList.java
R; pertains-to; [CN]/GameData/[MT]/registerBlock(Block,String,int)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/PotionBrewEvent/extend; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/FOVUpdateEvent/[FE]/newfov; FOVUpdateEvent.java
R; pertains-to; [CN]/GuiUtils/[MT]/drawGradientRect(int,int,int,int,int,int,int)/parameters; src_main_java_net_minecraftforge_fml_client_config_GuiUtils.java
R; pertains-to; [CN]/ModLoaderKeyBindingHandler/[MT]/getLabel()/body; ModLoaderKeyBindingHandler.java
R; pertains-to; [CN]/GameData/[MT]/newItemAdded(Item)/body; GameData.java
R; pertains-to; [CN]/PotionBrewEvent/[CN]/Pre/extend; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/parameters; GameData.java
R; pertains-to; [MT]/setup_fml/parameters; fml.py
R; pertains-to; [CN]/LivingHealEvent/[FE]/amount; src_main_java_net_minecraftforge_event_entity_living_LivingHealEvent.java
R; pertains-to; [CN]/FMLCommonHandler/[MT]/tickEnd(EnumSet<TickType>,Object)/body; FMLCommonHandler.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/body; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/ExplosionEvent/[FE]/world; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/serializeInto(Map<String,Integer>)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/GuiScrollingList/[MT]/drawGradientRect(int,int,int,int,int,int)/body; src_main_java_net_minecraftforge_fml_client_GuiScrollingList.java
R; pertains-to; [CN]/ModClassLoader/[MT]/loadClass(String)/parameters; ModClassLoader.java
R; pertains-to; [CN]/AccessTransformer/[MT]/readMapFile(String)/body; AccessTransformer.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Start/[CS]/Start(World,Explosion)/parameters; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onPotionBrewed(ItemStack[])/parameters; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/Loader/[FE]/mccversion; Loader.java
R; pertains-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/body; FOVUpdateEvent.java
R; pertains-to; [MT]/zip_start/body; release.py
R; pertains-to; [CN]/ModClassLoader/[FE]/mainClassLoader; ModClassLoader.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedBlocks()/body; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/AccessTransformer/[CS]/AccessTransformer()/body; AccessTransformer.java
R; pertains-to; [CN]/FMLRemappingAdapter/[MT]/visit(int,int,String,String,String,String[])/body; FMLRemappingAdapter.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted0/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/GameData/[MT]/initializeServerGate(int)/parameters; GameData.java
R; pertains-to; [MT]/file_backup/parameters; fml.py
R; pertains-to; [CN]/FMLCommonHandler/[MT]/tickStart(TickType,Object)/body; FMLCommonHandler.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; KeyBindingRegistry.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/body; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/ModClassLoader/[CS]/ModClassLoader(ClassLoader)/body; ModClassLoader.java
R; pertains-to; [CN]/GameData/[MT]/buildWorldItemData(NBTTagList)/parameters; GameData.java
R; pertains-to; [CN]/DimensionManager/[MT]/createProviderFor(int)/body; DimensionManager.java
R; pertains-to; [MT]/extract_fml_obfed/parameters; release.py
R; pertains-to; [CN]/PotionBrewedEvent/extend; src_main_java_net_minecraftforge_event_brewing_PotionBrewedEvent.java
R; pertains-to; [CN]/GameRegistry/[MT]/register(K)/body; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; KeyBindingRegistry.java
R; pertains-to; [CN]/FMLRelaunchLog/[CN]/ConsoleLogWrapper/[MT]/publish(LogRecord)/body; FMLRelaunchLog.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/parameters; KeyBindingRegistry.java
R; pertains-to; [CN]/FMLDummyContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; FMLDummyContainer.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/parameters; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/body; ModLoaderKeyBindingHandler.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/extend; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/registerTextureOverrides(RenderEngine)/body; FMLClientHandler.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted6/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/addURL(URL)/body; RelaunchClassLoader.java
R; pertains-to; [CN]/GameData/[MT]/initializeServerGate(int)/body; GameData.java
R; pertains-to; [CN]/PotionBrewEvent/[CN]/Post/[CS]/Post(ItemStack[])/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GameData/[MT]/newItemAdded(Item)/parameters; GameData.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted5/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FluidStack/[MT]/copy()/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body; src_main_java_cpw_mods_fml_common_EnhancedRuntimeException.java
R; pertains-to; [CN]/ModListResponsePacket/[MT]/execute(INetworkManager,FMLNetworkHandler,NetHandler,String)/body; ModListResponsePacket.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/getSources()/parameters; RelaunchClassLoader.java
R; pertains-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelStandard(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; src_main_java_net_minecraftforge_client_model_pipeline_ForgeBlockModelRenderer.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ModTextureStatic/[MT]/func_76845_a(RenderEngine)/parameters; ModTextureStatic.java
R; pertains-to; [CN]/FluidRegistry/[MT]/getFluidName(FluidStack)/body; src_main_java_net_minecraftforge_fluids_FluidRegistry.java
R; pertains-to; [CN]/ModelLoader/[CN]/UVLock/[MT]/apply(IModelPart)/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ExplosionEvent/extend; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/FMLModContainer/[MT]/getVersion()/body; FMLModContainer.java
R; pertains-to; other; applypatches.py
R; pertains-to; [CN]/GameData/[FE]/isSaveValid; GameData.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/parameters; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [MT]/get_merged_info/parameters; packages.py
R; pertains-to; [MT]/download_file/parameters; fml.py
R; pertains-to; [CN]/NetworkModHandler/[CS]/NetworkModHandler(ModContainer,NetworkMod)/body; NetworkModHandler.java
R; pertains-to; [CN]/GameRegistry/[MT]/getRegistry().conflicted0/body; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
R; pertains-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/scheduledNow()/body; FMLCommonHandler.java
R; pertains-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/body; ModLoaderModContainer.java
R; pertains-to; [CN]/GameData/[MT]/gateWorldLoadingForValidation()/body; GameData.java
R; pertains-to; [CN]/GuiModList/[CN]/Info/[MT]/drawHeader(int,int,Tessellator)/body; src_main_java_net_minecraftforge_fml_client_GuiModList.java
R; pertains-to; [CN]/GameData/[MT]/writeItemData(NBTTagList)/body; GameData.java
R; pertains-to; [CN]/PlaySoundAtEntityEvent/[FE]/newVolume; src_main_java_net_minecraftforge_event_entity_PlaySoundAtEntityEvent.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/body; src_main_java_net_minecraftforge_client_model_pipeline_WorldRendererConsumer.java
R; pertains-to; [CN]/MCPMerger/[MT]/processMethods(ClassNode,ClassNode,ClassInfo)/body; MCPMerger.java
R; pertains-to; [CN]/PotionBrewEvent/[CS]/PotionBrewEvent(ItemStack[])/body; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[MT]/getAffectedEntities()/body; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/Loader/[MT]/initializeMods()/body; Loader.java
R; pertains-to; [CN]/GuiConfig/[MT]/drawToolTip(List<String>,int,int)/body; src_main_java_net_minecraftforge_fml_client_config_GuiConfig.java
R; pertains-to; [CN]/FMLCommonHandler/[MT]/tickStart(EnumSet<TickType>,Object)/body; FMLCommonHandler.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[FE]/keyBindings; KeyBindingRegistry.java
R; pertains-to; [CN]/ForgeHooksClient/[MT]/unbindTexture()/body; src_net_minecraft_src_forge_ForgeHooksClient.java
R; pertains-to; package; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/FMLLaunchHandler/[MT]/setupHome()/body; FMLLaunchHandler.java
R; pertains-to; [CN]/Loader/[MT]/attemptDirLoad(File)/body; Loader.java
R; pertains-to; [CN]/GameData/[MT]/register(Object,String,int)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/ForgeHooksClient/[MT]/getOffsetFOV(EntityPlayerSP,float)/parameters; ForgeHooksClient.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[FE]/entityList; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/FOVUpdateEvent/[FE]/fov; FOVUpdateEvent.java
R; pertains-to; [CN]/KeyBindingRegistry/[MT]/uploadKeyBindingsToGame(GameSettings)/body; KeyBindingRegistry.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted6/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; src_main_java_net_minecraftforge_fml_client_GuiScrollingList.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/onWorldLoadTick()/body; FMLClientHandler.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/getPreDepends()/body; ModLoaderModContainer.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted4/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ItemData/[MT]/toString()/body; ItemData.java
R; pertains-to; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int,int,int)/body; ModLoader.java
R; pertains-to; [MT]/finish_setup_fml/parameters; fml.py
R; pertains-to; [CN]/ModClassLoader/[MT]/loadClass(String)/body; ModClassLoader.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/Loader/[MT]/preModInit()/body; Loader.java
R; pertains-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/body; src_main_java_net_minecraftforge_event_entity_player_PlayerWakeUpEvent.java
R; pertains-to; [CN]/FluidTank/[MT]/drain(int,boolean)/body; src_main_java_net_minecraftforge_fluids_FluidTank.java
R; pertains-to; [CN]/FMLModLoaderContainer/[MT]/getMetadata()/body; FMLModLoaderContainer.java
R; pertains-to; [CN]/DungeonLoot/[MT]/equals(ItemStack,int,int)/body; src_forge_DungeonLoot.java
R; pertains-to; [CN]/FluidStack/[MT]/hashCode()/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/FluidStack/[MT]/isFluidEqual(FluidStack)/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/GameRegistry/[MT]/onPlayerLogout(EntityPlayer)/body; GameRegistry.java
R; pertains-to; [CN]/UnpackedBakedQuad/[CN]/Builder/[MT]/build()/body; src_main_java_net_minecraftforge_client_model_pipeline_UnpackedBakedQuad.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Start/extend; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/DimensionManager/[MT]/init()/body; DimensionManager.java
R; pertains-to; [CN]/ModListRequestPacket/[MT]/consumePacket(byte[])/body; ModListRequestPacket.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderCrosshairs(int,int)/body; GuiIngameForge.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/PlayerWakeUpEvent/[FE]/wakeImmediatly; src_main_java_net_minecraftforge_event_entity_player_PlayerWakeUpEvent.java
R; pertains-to; [MT]/main/body; setup.py
R; pertains-to; [MT]/post_decompile/body; fml.py
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted4/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FMLServerHandler/[MT]/finishServerLoading()/body; FMLServerHandler.java
R; pertains-to; [CN]/Loader/[MT]/attemptFileLoad(File)/body; Loader.java
R; pertains-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/body; src_main_java_net_minecraftforge_fml_client_config_GuiUtils.java
R; pertains-to; [CN]/GuiModList/[MT]/compare(String,String).conflicted1/body; src_main_java_net_minecraftforge_fml_client_GuiModList.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted1/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FMLInterModComms/[CN]/IMCEvent/[MT]/getMessages()/body; FMLInterModComms.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted7/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ModLoaderKeyBindingHandler/[MT]/keyDown(EnumSet<TickType>,KeyBinding,boolean,boolean)/parameters; ModLoaderKeyBindingHandler.java
R; pertains-to; [CN]/FOVUpdateEvent/extend; FOVUpdateEvent.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/loadDummied(Set<ResourceLocation>)/body; src_main_java_net_minecraftforge_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/parameters; ForgePacketHandler.java
R; pertains-to; [CN]/ObjectHolderRef/[MT]/getRegistryForType(Field)/body; src_main_java_net_minecraftforge_fml_common_registry_ObjectHolderRef.java
R; pertains-to; [CN]/DimensionManager/[MT]/registerDimension(int,int)/body; DimensionManager.java
R; pertains-to; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,ResourceLocation,boolean)/body; src_main_java_net_minecraftforge_fml_common_registry_ObjectHolderRef.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted2/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/TextureFXManager/[MT]/registerTextureOverrides(RenderEngine)/body; TextureFXManager.java
R; pertains-to; [CN]/WorldRendererConsumer/[MT]/put(int,float)/body; src_main_java_net_minecraftforge_client_model_pipeline_WorldRendererConsumer.java
R; pertains-to; [CN]/ForgeChunkManager/[MT]/loadConfiguration()/body; ForgeChunkManager.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/write(ChannelHandlerContext,Object,ChannelPromise)/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mapMethodName(String,String,String)/body; FMLDeobfuscatingRemapper.java
R; pertains-to; package; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [CN]/ForgeHooksServer/[MT]/sendModListRequest(NetworkManager)/body; src_net_minecraft_src_forge_ForgeHooksServer.java
R; pertains-to; [CN]/ItemData/[MT]/mayDifferByOrdinal(ItemData)/body; ItemData.java
R; pertains-to; [CN]/DimensionManager/[MT]/registerProviderType(int,Class<? extends WorldProvider>,boolean)/body; DimensionManager.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onLivingHeal(EntityLivingBase,float)/parameters; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/FMLIndexedMessageToMessageCodec/[FE]/INBOUNDPACKETTRACKER; src_main_java_cpw_mods_fml_common_network_FMLIndexedMessageToMessageCodec.java
R; pertains-to; [CN]/GuiSlotModList/[MT]/getContentHeight()/body; GuiSlotModList.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getEntriesNotIn(FMLControlledNamespacedRegistry<I>)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; package; GameData.java
R; pertains-to; [CN]/LanguageRegistry/[MT]/reloadLanguageTable()/body; LanguageRegistry.java
R; pertains-to; [CN]/ForgeBlockModelRenderer/[MT]/renderModelAmbientOcclusion(IBlockAccess,IBakedModel,Block,BlockPos,WorldRenderer,boolean)/body; src_main_java_net_minecraftforge_client_model_pipeline_ForgeBlockModelRenderer.java
R; pertains-to; [CN]/PacketHandlerServer/[MT]/doMissingMods(NetServerHandler,ArrayList<NetworkMod>)/body; src_net_minecraft_src_forge_PacketHandlerServer.java
R; pertains-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body; src_main_java_cpw_mods_fml_common_EnhancedRuntimeException.java
R; pertains-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/body; FMLHandler.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted1/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/getSources()/body; RelaunchClassLoader.java
R; pertains-to; [CN]/GuiModList/[MT]/func_572_a(GuiButton)/body; GuiModList.java
R; pertains-to; [CN]/LiquidStack/[MT]/equals(Object)/body; LiquidStack.java
R; pertains-to; [CN]/PlayerWakeUpEvent/[FE]/updateWorld; src_main_java_net_minecraftforge_event_entity_player_PlayerWakeUpEvent.java
R; pertains-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; FMLEmbeddingRelauncher.java
R; pertains-to; [CN]/GuiModList/[MT]/func_6448_a()/body; GuiModList.java
R; pertains-to; [MT]/make_changelog/body; changelog.py
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/getKeyBindings()/body; KeyBindingRegistry.java
R; pertains-to; [CN]/RelaunchLibraryManager/[MT]/downloadFile(File,String,String,String)/body; RelaunchLibraryManager.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/fail()/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/AccessTransformer/[CN]/Modifier/[MT]/setTargetAccess(String)/body; AccessTransformer.java
R; pertains-to; [CN]/ModListResponsePacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; ModListResponsePacket.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderHealthMount(int,int)/body; GuiIngameForge.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,String,I)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [MT]/apply_patches/body; fml.py
R; pertains-to; [CN]/ItemLayerModel/[MT]/addSideQuad(ImmutableList.Builder<BakedQuad>,BitSet,VertexFormat,TRSRTransformation,EnumFacing,int,TextureAtlasSprite,int,int,int,int)/parameters; src_main_java_net_minecraftforge_client_model_ItemLayerModel.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/warn()/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/ModTextureAnimation/[CS]/ModTextureAnimation(int,int,String,BufferedImage,int)/body; ModTextureAnimation.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderHotbar(int,int,float)/body; GuiIngameForge.java
R; pertains-to; [CN]/FOVUpdateEvent/[CS]/FOVUpdateEvent(EntityPlayerSP,float)/parameters; FOVUpdateEvent.java
R; pertains-to; [CN]/GuiSelectString/[MT]/drawToolTip(List<String>,int,int)/body; src_main_java_net_minecraftforge_fml_client_config_GuiSelectString.java
R; pertains-to; [CN]/FMLTweaker/[MT]/getLaunchArguments()/body; FMLTweaker.java
R; pertains-to; [CN]/FluidStack/[MT]/writeToNBT(NBTTagCompound)/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/ObjectHolderRef/[MT]/apply()/body; src_main_java_cpw_mods_fml_common_registry_ObjectHolderRef.java
R; pertains-to; [CN]/GameData/[FE]/MAX_ITEM_ID; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyTick(EnumSet<TickType>,boolean)/body; KeyBindingRegistry.java
R; pertains-to; [CN]/BaseModTicker/[MT]/sendTick(EnumSet<TickType>,boolean,Object)/body; BaseModTicker.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[MT]/keyUp(EnumSet<TickType>,KeyBinding,boolean)/body; KeyBindingRegistry.java
R; pertains-to; [CN]/KeyBindingRegistry/[CN]/KeyHandler/[CS]/KeyHandler(KeyBinding[],boolean[])/body; KeyBindingRegistry.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/configureMod()/body; ModLoaderModContainer.java
R; pertains-to; [CN]/GuiControlsScrollPanel/[MT]/drawScreen(int,int,float)/body; src_net_minecraft_src_forge_GuiControlsScrollPanel.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/ignore()/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/GameData/[MT]/registerItem(Item,String,int)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/GuiEditArray/[CS]/GuiEditArray(GuiScreen,IConfigElement,int,Object[],boolean)/body; src_main_java_net_minecraftforge_fml_client_config_GuiEditArray.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/tickStart(TickType,Object)/body; ModLoaderModContainer.java
R; pertains-to; [MT]/pre_decompile/parameters; fml.py
R; pertains-to; [CN]/Loader/[MT]/load()/body; Loader.java
R; pertains-to; [CN]/BiomeManager/[MT]/addBiome(BiomeType,BiomeEntry)/body; src_main_java_net_minecraftforge_common_BiomeManager.java
R; pertains-to; other; forge.py
R; pertains-to; [CN]/ForgeBlockModelRenderer/[FE]/wrSmooth; src_main_java_net_minecraftforge_client_model_pipeline_ForgeBlockModelRenderer.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted7/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/tickEnd(TickType,Object)/body; ModLoaderModContainer.java
R; pertains-to; [CN]/RelaunchLibraryManager/[MT]/performDownload(InputStream,int,String,File)/body; RelaunchLibraryManager.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/toString()/body; ModLoaderModContainer.java
R; pertains-to; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/getTrades(int)/body; src_main_java_net_minecraftforge_fml_common_registry_VillagerRegistry.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,ResourceLocation,I)/body; src_main_java_net_minecraftforge_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/DimensionManager/[MT]/getNextFreeDimId()/body; DimensionManager.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/bind(ResourceLocation)/body; GuiIngameForge.java
R; pertains-to; [CN]/GuiUtils/[MT]/drawHoveringText(List<String>,int,int,int,int,int,FontRenderer)/parameters; src_main_java_net_minecraftforge_fml_client_config_GuiUtils.java
R; pertains-to; [CN]/BiomeManager/[MT]/setupBiomes()/body; src_main_java_net_minecraftforge_common_BiomeManager.java
R; pertains-to; [CN]/GuiEditArray/[MT]/drawToolTip(List<String>,int,int)/body; src_main_java_net_minecraftforge_fml_client_config_GuiEditArray.java
R; pertains-to; [CN]/PotionBrewEvent/[CN]/Pre/[CS]/Pre(ItemStack[])/parameters; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/putObject(Object,Object)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; other; getversion.py
R; pertains-to; [CN]/RotationHelper/[MT]/rotateVanillaBlock(Block,World,int,int,int,ForgeDirection)/body; RotationHelper.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted5/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FluidStack/[MT]/getFluid()/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/body; src_main_java_net_minecraftforge_event_world_WorldEvent.java
R; pertains-to; [CN]/RenderPlayerEvent/[CN]/Specials/[CS]/Specials(EntityPlayer,RenderPlayer,float)/body; RenderPlayerEvent.java
R; pertains-to; [CN]/Configuration/[MT]/save()/body; src_forge_Configuration.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/findAndMergeSuperMaps(String)/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [CN]/PotionBrewEvent/[MT]/getItem(int)/parameters; src_main_java_net_minecraftforge_event_brewing_PotionBrewEvent.java
R; pertains-to; [CN]/GuiSelectString/[CS]/GuiSelectString(GuiScreen,IConfigElement,int,Map<Object,String>,Object,boolean)/body; src_main_java_net_minecraftforge_fml_client_config_GuiSelectString.java
R; pertains-to; [CN]/ModListRequestPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; ModListRequestPacket.java
R; pertains-to; [CN]/ModelLoader/[MT]/loadModel(ResourceLocation)/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/FMLRelauncher/[MT]/relaunchClient(ArgsWrapper)/body; FMLRelauncher.java
R; pertains-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/update()/body; FMLCommonHandler.java
R; pertains-to; [CN]/TechneModel/[MT]/bindTexture()/body; TechneModel.java
R; pertains-to; [CN]/TechneModel/[MT]/renderPart(String)/body; TechneModel.java
R; pertains-to; [CN]/CommandTreeBase/[MT]/getTabCompletionOptions(MinecraftServer,ICommandSender,String[],BlockPos)/body; src_main_java_net_minecraftforge_server_command_CommandTreeBase.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/dump()/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/logMissingTextureErrors()/body; src_main_java_cpw_mods_fml_client_FMLClientHandler.java
R; pertains-to; [CN]/PacketModList/[MT]/toString(boolean)/body; src_forge_packets_PacketModList.java
R; pertains-to; [CN]/GuiModItemsMissing/[MT]/func_73863_a(int,int,float)/body; src_main_java_cpw_mods_fml_client_GuiModItemsMissing.java
R; pertains-to; [CN]/Loader/[MT]/initializeMods()/body; src_main_java_cpw_mods_fml_common_Loader.java
R; pertains-to; other; install.py
R; pertains-to; [CN]/ModListHelper/[MT]/parseListFile(String)/body; src_main_java_cpw_mods_fml_relauncher_ModListHelper.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onExplosionStart(World,Explosion)/parameters; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/ForgeEventFactory/[MT]/onCreateWorldSpawn(World,WorldSettings)/parameters; src_main_java_net_minecraftforge_event_ForgeEventFactory.java
R; pertains-to; [CN]/ExplosionEvent/[CN]/Detonate/[CS]/Detonate(World,Explosion,List<Entity>)/body; src_main_java_net_minecraftforge_event_world_ExplosionEvent.java
R; pertains-to; [MT]/apply_patches/parameters; fml.py
R; pertains-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[CS]/CreateSpawnPosition(World,WorldSettings)/parameters; src_main_java_net_minecraftforge_event_world_WorldEvent.java
R; pertains-to; [CN]/GameData/[FE]/MIN_BLOCK_ID; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/FMLTweaker/[MT]/acceptOptions(List<String>,File,File,String)/body; FMLTweaker.java
R; pertains-to; [CN]/ModLoaderConnectionHandler/[MT]/connectionClosed(NetworkManager)/body; ModLoaderConnectionHandler.java
R; pertains-to; [CN]/ZipperUtil/[MT]/backupWorld(String,String)/body; src_main_java_cpw_mods_fml_common_ZipperUtil.java
R; pertains-to; [CN]/OreDictionary/[MT]/getOres(String,boolean)/body; src_main_java_net_minecraftforge_oredict_OreDictionary.java
R; pertains-to; [CN]/GuiModItemsMissing/[MT]/func_73866_w_()/body; src_main_java_cpw_mods_fml_client_GuiModItemsMissing.java
R; pertains-to; [CN]/WorldRendererConsumer/[MT]/setOffset(BlockPos)/parameters; src_main_java_net_minecraftforge_client_model_pipeline_WorldRendererConsumer.java
R; pertains-to; [CN]/ForgeModContainer/[MT]/onConfigChanged(OnConfigChangedEvent)/body; src_main_java_net_minecraftforge_common_ForgeModContainer.java
R; pertains-to; [MT]/read_mc_versions/body; fml.py
R; pertains-to; [CN]/ClassPatchManager/[MT]/readPatch(JarEntry,JarInputStream)/body; ClassPatchManager.java
R; pertains-to; [CN]/mod_MinecraftForge/extend; src_net_minecraft_src_mod__MinecraftForge.java
R; pertains-to; [CN]/GameData/[FE]/MAX_BIOME_ID; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/markDummy(ResourceLocation,Integer,I)/body; src_main_java_net_minecraftforge_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/LivingHealEvent/extend; src_main_java_net_minecraftforge_event_entity_living_LivingHealEvent.java
R; pertains-to; [CN]/GuiUtils/[MT]/drawTexturedModalRect(int,int,int,int,int,int,float)/body; src_main_java_net_minecraftforge_fml_client_config_GuiUtils.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/registerTransformer(String)/body; RelaunchClassLoader.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/func_148756_a(int,String,Object)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,boolean,boolean)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/FMLEmbeddingRelauncher/[MT]/relaunch(ArgsWrapper)/body; FMLEmbeddingRelauncher.java
R; pertains-to; [CN]/DispenseFluidContainer/[MT]/dumpContainer(IBlockSource,ItemStack)/body; src_main_java_net_minecraftforge_fluids_DispenseFluidContainer.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/selectNetworks(Object,ChannelHandlerContext,FMLProxyPacket).conflicted3/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/ItemData/[CS]/ItemData(Item,ModContainer)/body; ItemData.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/getPostDepends()/body; ModLoaderModContainer.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/finishMinecraftLoading()/body; FMLClientHandler.java
R; pertains-to; other; packages.py
R; pertains-to; [MT]/setup_fml/body; setup.py
R; pertains-to; [CN]/DimensionManager/[MT]/getIDs()/body; DimensionManager.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[CS]/MissingMapping(String,int)/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/ModTextureStatic/[MT]/update()/body; ModTextureStatic.java
R; pertains-to; [CN]/CoreModManager/[MT]/handleCascadingTweak(File,JarFile,String,LaunchClassLoader,Integer)/body; CoreModManager.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted3/body; src_main_java_cpw_mods_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/LiquidStack/[MT]/isLiquidEqual(LiquidStack)/body; LiquidStack.java
R; pertains-to; [CN]/FMLOutboundHandler/[MT]/validateArgs(Object).conflicted2/body; src_main_java_net_minecraftforge_fml_common_network_FMLOutboundHandler.java
R; pertains-to; [CN]/FMLHandler/[MT]/handlePacket250(Packet250CustomPayload,EntityPlayer)/body; FMLHandler.java
R; pertains-to; [CN]/CoreModManager/[MT]/loadCoreMod(LaunchClassLoader,String,File)/body; CoreModManager.java
R; pertains-to; [CN]/PlayerWakeUpEvent/[CS]/PlayerWakeUpEvent(EntityPlayer,boolean,boolean,boolean)/parameters; src_main_java_net_minecraftforge_event_entity_player_PlayerWakeUpEvent.java
R; pertains-to; [CN]/AccessTransformer/[MT]/getFixedAccess(int,Modifier)/body; AccessTransformer.java
R; pertains-to; [CN]/UsernameCache/[MT]/load()/body; src_main_java_net_minecraftforge_common_UsernameCache.java
R; pertains-to; [CN]/ItemLayerModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; src_main_java_net_minecraftforge_client_model_ItemLayerModel.java
R; pertains-to; [CN]/BakedFluid/[CS]/BakedFluid(Optional<TRSRTransformation>,ImmutableMap<TransformType,TRSRTransformation>,VertexFormat,int,TextureAtlasSprite,TextureAtlasSprite,boolean,boolean,int[],int)/body; src_main_java_net_minecraftforge_client_model_ModelFluid.java
R; pertains-to; [CN]/DungeonLoot/[MT]/equals(ItemStack)/body; src_forge_DungeonLoot.java
R; pertains-to; other; fml.py
R; pertains-to; [MT]/extract_fml_obfed/body; release.py
R; pertains-to; [CN]/GuiSlotModList/[CS]/GuiSlotModList(GuiModList,ArrayList<ModContainer>,int)/body; GuiSlotModList.java
R; pertains-to; [CN]/Loader/[MT]/modInit()/body; Loader.java
R; pertains-to; [CN]/PersistentRegistryManager/[MT]/loadPersistentDataToStagingRegistry(boolean,Map<ResourceLocation,Map<ResourceLocation,Integer[]>>,LinkedHashMap<ResourceLocation,Map<ResourceLocation,Integer>>,Map.Entry<ResourceLocation,GameDataSnapshot.Entry>,Class<T>)/body; src_main_java_net_minecraftforge_fml_common_registry_PersistentRegistryManager.java
R; pertains-to; [CN]/LivingHealEvent/[CS]/LivingHealEvent(EntityLivingBase,float)/parameters; src_main_java_net_minecraftforge_event_entity_living_LivingHealEvent.java
R; pertains-to; [CN]/ModLoaderHelper/[MT]/updateStandardTicks(BaseMod,boolean,boolean)/body; ModLoaderHelper.java
R; pertains-to; [CN]/PacketHandlerClient/[MT]/onModListCheck(NetClientHandler,PacketModList)/body; src_net_minecraft_src_forge_PacketHandlerClient.java
R; pertains-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintWriter)/body; src_main_java_net_minecraftforge_fml_common_EnhancedRuntimeException.java
R; pertains-to; [CN]/ModTextureStatic/[CS]/ModTextureStatic(int,int,String,BufferedImage)/body; ModTextureStatic.java
R; pertains-to; [CN]/ModAccessTransformer/[MT]/addJar(JarFile)/body; src_main_java_cpw_mods_fml_common_asm_transformers_ModAccessTransformer.java
R; pertains-to; [CN]/ModLoaderHelper/[MT]/updateGUITicks(BaseMod,boolean,boolean)/body; ModLoaderHelper.java
R; pertains-to; [CN]/PacketHandlerClient/[MT]/onMissingMods(PacketMissingMods,NetClientHandler)/body; src_net_minecraft_src_forge_PacketHandlerClient.java
R; pertains-to; [MT]/fml_main/body; install.py
R; pertains-to; [CN]/InjectedModContainer/[CS]/InjectedModContainer(ModContainer,File)/body; InjectedModContainer.java
R; pertains-to; [MT]/main/body; applypatches.py
R; pertains-to; [CN]/ForgeHooksClient/[MT]/bindTessellator(int,int)/body; src_net_minecraft_src_forge_ForgeHooksClient.java
R; pertains-to; [CN]/PacketModList/[MT]/readData(DataInputStream)/body; src_forge_packets_PacketModList.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/launchIntegratedServerCallback(String,String)/body; src_main_java_cpw_mods_fml_client_FMLClientHandler.java
R; pertains-to; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted1/body; src_main_java_net_minecraftforge_event_world_NoteBlockEvent.java
R; pertains-to; [CN]/ZipperUtil/[MT]/backupWorld()/body; src_main_java_cpw_mods_fml_common_ZipperUtil.java
R; pertains-to; [CN]/ModTextureStatic/[MT]/func_76846_a()/body; ModTextureStatic.java
R; pertains-to; [CN]/GameData/[MT]/validateWorldSave(Set<ItemData>)/body; GameData.java
R; pertains-to; [CN]/Loader/[MT]/attemptFileLoad(File,SourceType)/body; Loader.java
R; pertains-to; [MT]/getBuildInfo/parameters; changelog.py
R; pertains-to; [CN]/ForgeHooksClient/[MT]/afterRenderPass(int)/body; src_net_minecraft_src_forge_ForgeHooksClient.java
R; pertains-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/handlerAdded(ChannelHandlerContext)/body; src_main_java_cpw_mods_fml_common_network_FMLIndexedMessageToMessageCodec.java
R; pertains-to; [CN]/Configuration/[MT]/load()/body; src_forge_Configuration.java
R; pertains-to; [CN]/PacketHandlerClient/[MT]/onPacketData(NetworkManager,String,byte[])/body; src_net_minecraft_src_forge_PacketHandlerClient.java
R; pertains-to; [CN]/Loader/[MT]/loadModClass(File,String,String)/body; Loader.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/swap(int,String,I)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/FMLEmbeddingRelauncher/[MT]/setupHome()/body; FMLEmbeddingRelauncher.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/getMethodMap(String)/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderJumpBar(int,int)/body; GuiIngameForge.java
R; pertains-to; [CN]/ForgeHooksClient/[MT]/bindTexture(String,int)/body; src_net_minecraft_src_forge_ForgeHooksClient.java
R; pertains-to; [CN]/SplashProgress/[MT]/finish()/body; src_main_java_cpw_mods_fml_client_SplashProgress.java
R; pertains-to; [CN]/ForgeVersion/[MT]/getStatus()/body; src_main_java_net_minecraftforge_common_ForgeVersion.java
R; pertains-to; [CN]/FakePlayerFactory/[MT]/getMinecraft(World)/body; FakePlayerFactory.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/mergeSuperMaps(String,String,String[])/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body; src_main_java_net_minecraftforge_fml_common_EnhancedRuntimeException.java
R; pertains-to; [CN]/GuiModList/[MT]/selectModIndex(int)/body; GuiModList.java
R; pertains-to; [CN]/DimensionManager/[MT]/getWorlds()/body; DimensionManager.java
R; pertains-to; other; changelog.py
R; pertains-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/encode(ChannelHandlerContext,A,List<Object>)/body; src_main_java_cpw_mods_fml_common_network_FMLIndexedMessageToMessageCodec.java
R; pertains-to; [CN]/ModListHelper/[MT]/tryAddFile(String,File,String)/body; src_main_java_cpw_mods_fml_relauncher_ModListHelper.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/BiomeDictionary/[MT]/makeBestGuess(BiomeGenBase)/body; src_main_java_net_minecraftforge_common_BiomeDictionary.java
R; pertains-to; [CN]/FMLHandler/[MT]/handleLogin(Packet1Login,NetworkManager)/parameters; FMLHandler.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/parseField(String[])/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [CN]/GameRegistry/[MT]/onPlayerLogin(EntityPlayer)/body; GameRegistry.java
R; pertains-to; [CN]/ModelLoader/[MT]/setupModelRegistry()/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/FMLConfigGuiFactory/[MT]/getHandlerFor(RuntimeOptionCategoryElement)/body; src_main_java_cpw_mods_fml_client_FMLConfigGuiFactory.java
R; pertains-to; [CN]/ObjectHolderRef/[CS]/ObjectHolderRef(Field,String,boolean)/body; src_main_java_cpw_mods_fml_common_registry_ObjectHolderRef.java
R; pertains-to; [CN]/Loader/[MT]/serverStopped()/body; Loader.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/onInitializationComplete()/body; FMLClientHandler.java
R; pertains-to; [CN]/ObjectHolderRef/[MT]/apply()/body; src_main_java_net_minecraftforge_fml_common_registry_ObjectHolderRef.java
R; pertains-to; [CN]/DimensionManager/[MT]/initDimension(int)/body; DimensionManager.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/getRaw(String)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/EnhancedRuntimeException/[MT]/getMessage()/body; src_main_java_cpw_mods_fml_common_EnhancedRuntimeException.java
R; pertains-to; [CN]/DeobfuscationTransformer/[MT]/unmapClassName(String)/body; DeobfuscationTransformer.java
R; pertains-to; [CN]/ForgeVersion/[MT]/getTarget()/body; src_main_java_net_minecraftforge_common_ForgeVersion.java
R; pertains-to; [MT]/file_backup/body; fml.py
R; pertains-to; [CN]/Downloader/[MT]/requestClose(String)/body; Downloader.java
R; pertains-to; [CN]/DeobfuscationTransformer/[MT]/transform(String,String,byte[])/body; DeobfuscationTransformer.java
R; pertains-to; [CN]/PacketModList/[MT]/writeData(DataOutputStream)/body; src_forge_packets_PacketModList.java
R; pertains-to; [CN]/FMLBukkitHandler/[MT]/loadBaseModMod(Class<?>,File)/parameters; FMLBukkitHandler.java
R; pertains-to; [CN]/GameData/[FE]/MAX_POTION_ID; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
R; pertains-to; [CN]/FMLRelauncher/[MT]/startApplet(Applet)/body; FMLRelauncher.java
R; pertains-to; [CN]/GuiScrollingList/[MT]/drawScreen(int,int,float)/body; GuiScrollingList.java
R; pertains-to; [CN]/RotationHelper/[MT]/getValidVanillaBlockRotations(Block)/body; RotationHelper.java
R; pertains-to; [CN]/MultiModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; src_main_java_net_minecraftforge_client_model_MultiModel.java
R; pertains-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/[FE]/settings; src_main_java_net_minecraftforge_event_world_WorldEvent.java
R; pertains-to; [CN]/FMLModContainer/[MT]/parseSimpleFieldAnnotation(SetMultimap<String,ASMData>,String,Function<ModContainer,Object>)/body; FMLModContainer.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addObjectRaw(int,ResourceLocation,I)/body; src_main_java_net_minecraftforge_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; GuiIngameForge.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/OBJBakedModel/[MT]/getQuads(IBlockState,EnumFacing,long)/body; src_main_java_net_minecraftforge_client_model_obj_OBJModel.java
R; pertains-to; [CN]/FluidTank/[MT]/fill(FluidStack,boolean)/body; src_main_java_net_minecraftforge_fluids_FluidTank.java
R; pertains-to; [CN]/FMLModContainer/[MT]/getSortingRules()/body; FMLModContainer.java
R; pertains-to; [CN]/ForgeVersion/[MT]/startVersionCheck()/body; src_main_java_net_minecraftforge_common_ForgeVersion.java
R; pertains-to; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/value; FMLInterModComms.java
R; pertains-to; [CN]/EntityRegistry/[MT]/validateAndClaimId(int)/body; EntityRegistry.java
R; pertains-to; [CN]/Loader/[MT]/postModInit()/body; Loader.java
R; pertains-to; [MT]/build_forge_dev/body; forge.py
R; pertains-to; [CN]/FMLClientHandler/[MT]/onRenderTickEnd(float)/body; FMLClientHandler.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[MT]/applyModContainer(ModContainer)/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/MCPMerger/[MT]/readMapFile(File)/body; MCPMerger.java
R; pertains-to; [MT]/download_minecraft/body; fml.py
R; pertains-to; [MT]/load_mc_version/parameters; release.py
R; pertains-to; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/toBytes(ByteBuf)/body; src_main_java_net_minecraftforge_fml_common_network_internal_FMLMessage.java
R; pertains-to; [CN]/PlayerWakeUpEvent/[FE]/setSpawn; src_main_java_net_minecraftforge_event_entity_player_PlayerWakeUpEvent.java
R; pertains-to; [CN]/FMLCommonHandler/[CN]/TickQueueElement/[MT]/compareTo(TickQueueElement)/body; FMLCommonHandler.java
R; pertains-to; [CN]/DirectoryDiscoverer/[MT]/exploreFileSystem(String,File,List<ModContainer>,ModCandidate,MetadataCollection)/body; DirectoryDiscoverer.java
R; pertains-to; [CN]/OreDictionary/[MT]/getOres(String,boolean)/parameters; src_main_java_net_minecraftforge_oredict_OreDictionary.java
R; pertains-to; [CN]/GameData/[MT]/set(GameData)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/NoteBlockEvent/[MT]/fromId(int).conflicted0/body; src_main_java_net_minecraftforge_event_world_NoteBlockEvent.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/loadClass(String)/body; RelaunchClassLoader.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/addAlias(String,String)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/OreDictionary/[MT]/itemMatches(ItemStack,ItemStack,boolean)/body; OreDictionary.java
R; pertains-to; [CN]/BiomeDictionary/[MT]/registerBiomeType(BiomeGenBase,Type)/body; src_main_java_net_minecraftforge_common_BiomeDictionary.java
R; pertains-to; [CN]/VillagerRegistry/[CN]/VillagerCareer/[MT]/addTrade(int,ITradeList)/body; src_main_java_net_minecraftforge_fml_common_registry_VillagerRegistry.java
R; pertains-to; [CN]/ModLoader/[MT]/sendPacket(Packet)/body; ModLoader.java
R; pertains-to; [CN]/FMLConfigGuiFactory/[MT]/runtimeGuiCategories()/body; src_main_java_cpw_mods_fml_client_FMLConfigGuiFactory.java
R; pertains-to; [CN]/ModTextureStatic/[MT]/func_76846_a()/parameters; ModTextureStatic.java
R; pertains-to; [CN]/WorldEvent/[CN]/CreateSpawnPosition/extend; src_main_java_net_minecraftforge_event_world_WorldEvent.java
R; pertains-to; [CN]/FMLInterModComms/[CN]/IMCMessage/[FE]/sender; FMLInterModComms.java
R; pertains-to; [CN]/ModelLoader/[MT]/registerVariant(ModelBlockDefinition,ModelResourceLocation)/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/AttachCapabilitiesEvent/[CN]/World/[CS]/World(net.minecraft.world.World)/body; src_main_java_net_minecraftforge_event_AttachCapabilitiesEvent.java
R; pertains-to; [CN]/Configuration/[MT]/save()/body; Configuration.java
R; pertains-to; [CN]/GuiSlotModList/[MT]/drawSlot(int,int,int,int,Tessellator)/body; GuiSlotModList.java
R; pertains-to; [CN]/GameData/[MT]/isModIgnoredForIdValidation(String)/body; GameData.java
R; pertains-to; [CN]/ForgeChunkManager/[MT]/fetchDormantChunk(long,World)/body; src_main_java_net_minecraftforge_common_ForgeChunkManager.java
R; pertains-to; [CN]/ForgeHooksClient/[MT]/beforeRenderPass(int)/body; src_net_minecraft_src_forge_ForgeHooksClient.java
R; pertains-to; [CN]/NetworkDispatcher/[MT]/handleServerSideCustomPacket(C17PacketCustomPayload,ChannelHandlerContext)/body; src_main_java_cpw_mods_fml_common_network_handshake_NetworkDispatcher.java
R; pertains-to; [CN]/ModLoaderModContainer/[CS]/ModLoaderModContainer(Class<? extends BaseMod>,File)/parameters; ModLoaderModContainer.java
R; pertains-to; [CN]/EntityRegistry/[CS]/EntityRegistry()/body; EntityRegistry.java
R; pertains-to; [CN]/NetworkDispatcher/[MT]/channelRead0(ChannelHandlerContext,Packet)/body; src_main_java_cpw_mods_fml_common_network_handshake_NetworkDispatcher.java
R; pertains-to; [CN]/GameData/[FE]/MIN_POTION_ID; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
R; pertains-to; [CN]/FMLTweaker/[MT]/injectIntoClassLoader(LaunchClassLoader)/body; FMLTweaker.java
R; pertains-to; [CN]/Loader/[MT]/loadMods()/body; src_main_java_cpw_mods_fml_common_Loader.java
R; pertains-to; [CN]/ForgeChunkManager/[MT]/saveWorld(World)/body; ForgeChunkManager.java
R; pertains-to; [CN]/AttachCapabilitiesEvent/[CN]/World/extend; src_main_java_net_minecraftforge_event_AttachCapabilitiesEvent.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/runTransformers(String,String,byte[])/body; RelaunchClassLoader.java
R; pertains-to; [CN]/LiquidStack/[MT]/hashCode()/body; LiquidStack.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body; src_main_java_net_minecraftforge_client_GuiIngameForge.java
R; pertains-to; [CN]/LanguageRegistry/[MT]/getStringLocalization(String)/body; LanguageRegistry.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[MT]/get()/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/MCPMerger/[CN]/MethodWrapper/[MT]/equals(Object)/body; MCPMerger.java
R; pertains-to; [CN]/ForgePacketHandler/[MT]/onPacketData(INetworkManager,Packet250CustomPayload,Player)/body; ForgePacketHandler.java
R; pertains-to; [CN]/FluidRegistry/[MT]/getFluidID(Fluid)/body; src_main_java_net_minecraftforge_fluids_FluidRegistry.java
R; pertains-to; [CN]/GameData/[FE]/MAX_BLOCK_ID; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/CoreModManager/[MT]/handleLaunch(File,LaunchClassLoader,FMLTweaker)/body; CoreModManager.java
R; pertains-to; [CN]/OreDictionary/[MT]/doesOreNameExist(String)/parameters; src_main_java_net_minecraftforge_oredict_OreDictionary.java
R; pertains-to; [CN]/ModMissingPacket/[MT]/execute(NetworkManager,FMLNetworkHandler,NetHandler,String)/body; ModMissingPacket.java
R; pertains-to; [CN]/BiomeManager/[MT]/removeBiome(BiomeType,BiomeEntry)/body; src_main_java_net_minecraftforge_common_BiomeManager.java
R; pertains-to; [CN]/FMLMissingMappingsEvent/[CN]/MissingMapping/[MT]/setAction(Action)/body; src_main_java_cpw_mods_fml_common_event_FMLMissingMappingsEvent.java
R; pertains-to; [CN]/DungeonLoot/[MT]/generateStack(Random)/body; src_forge_DungeonLoot.java
R; pertains-to; [CN]/ModTextureStatic/[MT]/toString()/body; ModTextureStatic.java
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderHealth(int,int)/body; src_main_java_net_minecraftforge_client_GuiIngameForge.java
R; pertains-to; other; build.py
R; pertains-to; [CN]/NetworkDispatcher/[MT]/completeHandshake(Side)/body; src_main_java_cpw_mods_fml_common_network_handshake_NetworkDispatcher.java
R; pertains-to; other; release.py
R; pertains-to; [CN]/ShapedOreRecipe/[CS]/ShapedOreRecipe(ItemStack,Object)/body; ShapedOreRecipe.java
R; pertains-to; [CN]/CommandTreeBase/[MT]/getSubCommands()/body; src_main_java_net_minecraftforge_server_command_CommandTreeBase.java
R; pertains-to; [CN]/ModLoaderModContainer/[MT]/parseValue(String,MLProp,Class<?>,String,String)/body; ModLoaderModContainer.java
R; pertains-to; [MT]/decompile_minecraft/body; fml.py
R; pertains-to; [CN]/FMLHooks/[MT]/registerChannel(ModContainer,String)/body; FMLHooks.java
R; pertains-to; [CN]/FMLInterModComms/[MT]/sendMessage(String,String,String)/body; FMLInterModComms.java
R; pertains-to; [CN]/RenderPlayerEvent/[CN]/SetArmorModel/[CS]/SetArmorModel(EntityPlayer,RenderPlayer,int,float,ItemStack)/body; RenderPlayerEvent.java
R; pertains-to; [CN]/FMLModContainer/[MT]/setMetadata(ModMetadata)/body; FMLModContainer.java
R; pertains-to; [CN]/GameData/[MT]/registerItem(Item,String)/body; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
R; pertains-to; [MT]/download_mcp/parameters; fml.py
R; pertains-to; [CN]/GameRegistry/[MT]/onPlayerRespawn(EntityPlayer)/body; GameRegistry.java
R; pertains-to; [MT]/fml_main/parameters; install.py
R; pertains-to; [CN]/FMLServerHandler/[MT]/queryUser(StartupQuery)/body; src_main_java_cpw_mods_fml_server_FMLServerHandler.java
R; pertains-to; [CN]/ModelLoader/[MT]/loadItemModels()/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body; src_net_minecraft_src_forge_GuiControlsScrollPanel.java
R; pertains-to; other; setup.py
R; pertains-to; [CN]/Downloader/[MT]/makeHeadless()/body; Downloader.java
R; pertains-to; [CN]/EnhancedRuntimeException/[MT]/printStackTrace(PrintStream)/body; src_main_java_net_minecraftforge_fml_common_EnhancedRuntimeException.java
R; pertains-to; [CN]/Property/[MT]/setName(String)/body; src_main_java_net_minecraftforge_common_config_Property.java
R; pertains-to; [CN]/DispenseFluidContainer/[MT]/fillContainer(IBlockSource,ItemStack)/body; src_main_java_net_minecraftforge_fluids_DispenseFluidContainer.java
R; pertains-to; [CN]/LoadController/[MT]/buildModList(FMLLoadEvent)/body; src_main_java_cpw_mods_fml_common_LoadController.java
R; pertains-to; [CN]/DefaultArtifactVersion/[MT]/getVersionString()/body; DefaultArtifactVersion.java
R; pertains-to; [CN]/PlaySoundAtEntityEvent/[FE]/newPitch; src_main_java_net_minecraftforge_event_entity_PlaySoundAtEntityEvent.java
R; pertains-to; [CN]/GameData/[FE]/MIN_BIOME_ID; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
R; pertains-to; [CN]/ModLoader/[MT]/registerEntityID(Class<? extends Entity>,String,int)/body; ModLoader.java
R; pertains-to; [CN]/ModelLoader/[CN]/WeightedRandomModel/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/NetworkDispatcher/[MT]/handleClientSideCustomPacket(S3FPacketCustomPayload,ChannelHandlerContext)/body; src_main_java_cpw_mods_fml_common_network_handshake_NetworkDispatcher.java
R; pertains-to; [CN]/FMLNetworkHandler/[MT]/handleClientConnection(NetLoginHandler,MinecraftServer,SocketAddress,String)/body; FMLNetworkHandler.java
R; pertains-to; [CN]/FluidRegistry/[MT]/getFluidID(String)/body; src_main_java_net_minecraftforge_fluids_FluidRegistry.java
R; pertains-to; [CN]/FMLModContainer/[MT]/getMetadata()/body; FMLModContainer.java
R; pertains-to; [CN]/FMLMessage/[CN]/EntitySpawnMessage/[MT]/fromBytes(ByteBuf)/body; src_main_java_net_minecraftforge_fml_common_network_internal_FMLMessage.java
R; pertains-to; [CN]/GameRegistry/[MT]/getRegistry().conflicted1/body; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
R; pertains-to; [CN]/ModLoader/[MT]/addArmor(String)/body; ModLoader.java
R; pertains-to; [CN]/GameData/[MT]/registerBlock(Block,String)/body; src_main_java_net_minecraftforge_fml_common_registry_GameData.java
R; pertains-to; [CN]/RenderingRegistry/[MT]/addTextureOverride(String,String)/body; RenderingRegistry.java
R; pertains-to; [MT]/apply_fml_patches/parameters; fml.py
R; pertains-to; [CN]/FMLClientHandler/[MT]/trackMissingTexture(ResourceLocation)/body; src_main_java_cpw_mods_fml_client_FMLClientHandler.java
R; pertains-to; [CN]/TechneModel/[MT]/loadTechneModel(URL)/body; TechneModel.java
R; pertains-to; [CN]/GuiControlsScrollPanel/[MT]/drawScreen(int,int,float)/body; GuiControlsScrollPanel.java
R; pertains-to; [CN]/ModelLoader/[CN]/UVLock/[CS]/UVLock(IModelState)/parameters; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [CN]/Configuration/[MT]/getOrCreateProperty(String,String,String)/body; src_forge_Configuration.java
R; pertains-to; [MT]/build_installer/parameters; release.py
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/unmap(String)/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [CN]/Loader/[MT]/serverStopping()/body; Loader.java
R; pertains-to; [CN]/RenderingRegistry/[MT]/getUniqueTextureIndex(String)/body; RenderingRegistry.java
R; pertains-to; [CN]/BlockFluidClassic/[MT]/canFlowInto(IBlockAccess,int,int,int)/body; BlockFluidClassic.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/enhanceServerListEntry(ServerListEntryNormal,ServerData,int,int,int,int,int)/body; src_main_java_cpw_mods_fml_client_FMLClientHandler.java
R; pertains-to; [CN]/BlockFluidBase/[MT]/displaceIfPossible(World,int,int,int)/body; BlockFluidBase.java
R; pertains-to; [CN]/GameRegistry/[MT]/registerItem(Item,String)/body; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
R; pertains-to; [MT]/runcmd/body; fml.py
R; pertains-to; [CN]/GameRegistry/[MT]/registerItem(Item)/body; src_main_java_net_minecraftforge_fml_common_registry_GameRegistry.java
R; pertains-to; other; patches.py
R; pertains-to; [CN]/ForgeModContainer/[CS]/ForgeModContainer()/body; src_main_java_net_minecraftforge_common_ForgeModContainer.java
R; pertains-to; [CN]/ForgeMessage/[CN]/FluidIdMapMessage/[MT]/toBytes(ByteBuf)/body; src_main_java_net_minecraftforge_common_network_ForgeMessage.java
R; pertains-to; [CN]/ModAccessTransformer/[CS]/ModAccessTransformer()/body; src_main_java_cpw_mods_fml_common_asm_transformers_ModAccessTransformer.java
R; pertains-to; [CN]/GameRegistry/[MT]/addAlias(String,String,GameRegistry.Type)/body; src_main_java_cpw_mods_fml_common_registry_GameRegistry.java
R; pertains-to; [MT]/main/body; install.py
R; pertains-to; [CN]/BakedFluid/[MT]/putVertex(UnpackedBakedQuad.Builder,EnumFacing,float,float,float,float,float)/body; src_main_java_net_minecraftforge_client_model_ModelFluid.java
R; pertains-to; [CN]/ASMModParser/[CS]/ASMModParser(InputStream)/body; ASMModParser.java
R; pertains-to; [CN]/FMLCommonHandler/[MT]/tickEnd(TickType,Object)/body; FMLCommonHandler.java
R; pertains-to; [CN]/FMLIndexedMessageToMessageCodec/[MT]/decode(ChannelHandlerContext,FMLProxyPacket,List<Object>)/body; src_main_java_cpw_mods_fml_common_network_FMLIndexedMessageToMessageCodec.java
R; pertains-to; [CN]/ForgeChunkManager/[MT]/releaseTicket(Ticket)/body; ForgeChunkManager.java
R; pertains-to; [CN]/LiquidStack/[MT]/writeToNBT(NBTTagCompound)/body; LiquidStack.java
R; pertains-to; [CN]/FMLContainer/[MT]/readData(SaveHandler,WorldInfo,Map<String,NBTBase>,NBTTagCompound)/body; src_main_java_cpw_mods_fml_common_FMLContainer.java
R; pertains-to; [CN]/ForgeChunkManager/[MT]/loadWorld(World)/body; ForgeChunkManager.java
R; pertains-to; [CN]/RelaunchLibraryManager/[MT]/handleLaunch(File,RelaunchClassLoader)/body; RelaunchLibraryManager.java
R; pertains-to; [CN]/Loader/[MT]/getCrashInformation()/body; Loader.java
R; pertains-to; [MT]/main/body; getversion.py
R; pertains-to; [MT]/download_deps/body; fml.py
R; pertains-to; [CN]/FMLRelaunchLog/[MT]/configureLogging()/body; FMLRelaunchLog.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/onLoadComplete()/body; FMLClientHandler.java
R; pertains-to; [CN]/ModelLoader/[CN]/VanillaModelWrapper/[MT]/bake(IModelState,VertexFormat,Function<ResourceLocation,TextureAtlasSprite>)/body; src_main_java_net_minecraftforge_client_model_ModelLoader.java
R; pertains-to; [MT]/main/body; patches.py
R; pertains-to; [MT]/pre_decompile/body; fml.py
R; pertains-to; [CN]/NetworkModHandler/[CS]/NetworkModHandler(ModContainer,Class<?>,ASMDataTable)/body; NetworkModHandler.java
R; pertains-to; [CN]/ClassPatchManager/[MT]/setup(Side)/body; ClassPatchManager.java
R; pertains-to; [MT]/setup_fml/body; fml.py
R; pertains-to; [CN]/GuiModList/[MT]/func_571_a(int,int,float)/body; GuiModList.java
R; pertains-to; [CN]/VertexLighterFlat/[MT]/processQuad()/body; src_main_java_net_minecraftforge_client_model_pipeline_VertexLighterFlat.java
R; pertains-to; [CN]/FMLInterModComms/[CN]/IMCEvent/[MT]/applyModContainer(ModContainer)/body; FMLInterModComms.java
R; pertains-to; [CN]/PersistentRegistryManager/[MT]/injectSnapshot(GameDataSnapshot,boolean,boolean)/body; src_main_java_net_minecraftforge_fml_common_registry_PersistentRegistryManager.java
R; pertains-to; [CN]/ModLoaderClientHelper/[MT]/handleFinishLoadingFor(ModLoaderModContainer,Minecraft)/body; ModLoaderClientHelper.java
R; pertains-to; [CN]/PacketHandlerServer/[MT]/onModListResponse(NetServerHandler,PacketModList)/body; src_net_minecraft_src_forge_PacketHandlerServer.java
R; pertains-to; [CN]/DimensionManager/[MT]/setWorld(int,WorldServer)/body; DimensionManager.java
R; pertains-to; [CN]/ModClassLoader/[MT]/addFile(File)/body; ModClassLoader.java
R; pertains-to; [CN]/RelaunchClassLoader/[CS]/RelaunchClassLoader(URL[])/body; RelaunchClassLoader.java
R; pertains-to; [CN]/FMLCommonHandler/[MT]/loadMetadataFor(ModContainer)/body; FMLCommonHandler.java
R; pertains-to; [MT]/apply_fml_patches/body; fml.py
R; pertains-to; [CN]/GuiIngameForge/[MT]/renderPlayerList(int,int)/body; GuiIngameForge.java
R; pertains-to; [CN]/FluidRegistry/[MT]/registerFluid(Fluid)/body; src_main_java_net_minecraftforge_fluids_FluidRegistry.java
R; pertains-to; [CN]/GameData/[MT]/fixBrokenIds(Map<String,Integer>,Set<Integer>)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/set(FMLControlledNamespacedRegistry<I>)/body; src_main_java_net_minecraftforge_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/GameData/[MT]/injectWorldIDMap(Map<String,Integer>,Set<Integer>,Map<String,String>,Map<String,String>,boolean,boolean)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/FluidContainerRegistry/[CN]/ContainerKey/[MT]/hashCode()/body; src_main_java_net_minecraftforge_fluids_FluidContainerRegistry.java
R; pertains-to; [CN]/CoreModManager/[MT]/discoverCoreMods(File,LaunchClassLoader)/body; src_main_java_cpw_mods_fml_relauncher_CoreModManager.java
R; pertains-to; [CN]/BaseMod/[MT]/doTickInGame(TickType,boolean,Object,Object)/body; BaseMod.java
R; pertains-to; [CN]/ForgeModContainer/[MT]/syncConfig(boolean)/body; src_main_java_net_minecraftforge_common_ForgeModContainer.java
R; pertains-to; [CN]/FMLCorePlugin/[MT]/getASMTransformerClass()/body; FMLCorePlugin.java
R; pertains-to; [CN]/Loader/[MT]/preinitializeMods()/body; src_main_java_cpw_mods_fml_common_Loader.java
R; pertains-to; [MT]/main/body; release.py
R; pertains-to; [CN]/CoreModManager/[MT]/injectTransformers(LaunchClassLoader)/body; CoreModManager.java
R; pertains-to; [CN]/BaseModTicker/[MT]/tickBaseMod(EnumSet<TickType>,boolean,Object)/body; BaseModTicker.java
R; pertains-to; [CN]/MinecraftForge/[MT]/initialize()/body; src_main_java_net_minecraftforge_common_MinecraftForge.java
R; pertains-to; [CN]/Loader/[MT]/identifyMods()/body; Loader.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/onRenderTickStart(float)/body; FMLClientHandler.java
R; pertains-to; [CN]/Configuration/[MT]/getOrCreateBlockIdProperty(String,int)/body; src_forge_Configuration.java
R; pertains-to; [CN]/SplashProgress/[MT]/start()/body; src_main_java_cpw_mods_fml_client_SplashProgress.java
R; pertains-to; [CN]/FluidStack/[CS]/FluidStack(Fluid,int)/body; src_main_java_net_minecraftforge_fluids_FluidStack.java
R; pertains-to; [CN]/GuiControlsScrollPanel/[MT]/drawSlot(int,int,int,int,Tessellator)/body; GuiControlsScrollPanel.java
R; pertains-to; [CN]/ForgeHooksClient/[MT]/renderInventoryItem(RenderBlocks,RenderEngine,ItemStack,boolean,float,float,float)/body; ForgeHooksClient.java
R; pertains-to; [CN]/FMLDeobfuscatingRemapper/[MT]/map(String)/body; FMLDeobfuscatingRemapper.java
R; pertains-to; [MT]/main/body; packages.py
R; pertains-to; [CN]/FMLModContainer/[MT]/bindMetadata(MetadataCollection)/body; FMLModContainer.java
R; pertains-to; [CN]/Loader/[MT]/sortModList()/body; Loader.java
R; pertains-to; [CN]/MCPMerger/[MT]/copyClass(ZipFile,ZipEntry,ZipOutputStream,ZipOutputStream,boolean)/body; MCPMerger.java
R; pertains-to; [CN]/JarDiscoverer/[MT]/discover(ModCandidate,ASMDataTable)/body; JarDiscoverer.java
R; pertains-to; [CN]/OreDictionary/[MT]/initVanillaEntries()/body; OreDictionary.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/onPreWorldTick()/body; FMLClientHandler.java
R; pertains-to; [CN]/Configuration/[MT]/load()/body; Configuration.java
R; pertains-to; [CN]/FMLControlledNamespacedRegistry/[MT]/add(int,String,I,BitSet)/body; src_main_java_cpw_mods_fml_common_registry_FMLControlledNamespacedRegistry.java
R; pertains-to; [CN]/FMLRelauncher/[MT]/showWindow(boolean)/body; FMLRelauncher.java
R; pertains-to; [CN]/RelaunchClassLoader/[MT]/findClass(String)/body; RelaunchClassLoader.java
R; pertains-to; [CN]/GameData/[MT]/processIdRematches(Iterable<MissingMapping>,boolean,GameData,Map<String,Integer[]>)/body; src_main_java_cpw_mods_fml_common_registry_GameData.java
R; pertains-to; [CN]/ClassPatchManager/[MT]/applyPatch(String,String,byte[])/body; ClassPatchManager.java
R; pertains-to; [CN]/FMLClientHandler/[MT]/bindServerListData(ServerData,ServerStatusResponse)/body; src_main_java_cpw_mods_fml_client_FMLClientHandler.java
R; pertains-to; [CN]/FMLModContainer/[MT]/constructMod(FMLConstructionEvent)/body; FMLModContainer.java
R; pertains-to; [MT]/setup_mcp/body; fml.py
R; pertains-to; [CN]/FMLCommonHandler/[MT]/getBrandingStrings(String)/body; FMLCommonHandler.java
R; pertains-to; [MT]/finish_setup_fml/body; fml.py
R; pertains-to; [CN]/FMLModContainer/[MT]/gatherAnnotations(Class<?>)/body; FMLModContainer.java
